pub module std/sys/dom/typedarray/float32Array

// Interface Float32Array (generated by esidl 0.2.0).

import std/sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeFloat32Array  : forall<a> (a) -> maybe<float32Array>
{ inline "(#1.toString()==='[object Float32Array]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toFloat32Array : forall<a> (a) -> exn float32Array
{ inline "(#1.toString()==='[object Float32Array]'?#1:std_core.error('toFloat32Array: cast failed'))" }


// Float32Array implements Float32Array (supplemental)
inline extern length : (this: float32Array) -> dom uint32
{ inline "#1.length" }
inline extern get : (this: float32Array, index: uint32) -> dom float32
{ inline "#1[#2]" }

/* hidden version of set */
/* hidden version of set */
/* hidden version of set */
inline extern subarray : (this: float32Array, start: int32, end: int32) -> dom float32Array
{ inline "#1.subarray(#2, #3)" }

// Float32Array extends ArrayBufferView
inline extern arrayBufferView : (float32Array) -> arrayBufferView // upcasting to extended type
{ inline "#1" }
// Float32Array implements in extension ArrayBufferView (overloading)
inline extern buffer : (this: float32Array) -> dom arrayBuffer
{ inline "#1.buffer" }
inline extern byteOffset : (this: float32Array) -> dom uint32
{ inline "#1.byteOffset" }
inline extern byteLength : (this: float32Array) -> dom uint32
{ inline "#1.byteLength" }
