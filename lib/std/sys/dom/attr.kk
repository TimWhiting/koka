pub module std/sys/dom/attr

// Interface Attr (generated by esidl 0.2.0).

import std/sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeAttr  : forall<a> (a) -> maybe<attr>
{ inline "(#1.toString()==='[object Attr]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toAttr : forall<a> (a) -> exn attr
{ inline "(#1.toString()==='[object Attr]'?#1:std_core.error('toAttr: cast failed'))" }


// Attr implements Attr (supplemental)
inline extern namespaceUri : (this: attr) -> dom string
{ inline "#1.namespaceURI" }
inline extern prefix_ : (this: attr) -> dom string
{ inline "#1.prefix" }
inline extern localName : (this: attr) -> dom string
{ inline "#1.localName" }
inline extern name : (this: attr) -> dom string
{ inline "#1.name" }
inline extern value : (this: attr) -> dom string
{ inline "#1.value" }
inline extern value : (this: attr, assigned: string) -> dom ()
{ inline "(#1.value = #2)" }
