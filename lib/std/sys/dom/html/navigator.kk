pub module std/sys/dom/html/navigator

// Interface Navigator (generated by esidl 0.2.0).

import std/sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeNavigator  : forall<a> (a) -> maybe<navigator>
{ inline "(#1.toString()==='[object Navigator]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toNavigator : forall<a> (a) -> exn navigator
{ inline "(#1.toString()==='[object Navigator]'?#1:std_core.error('toNavigator: cast failed'))" }


// Navigator implements Navigator (supplemental)
// Navigator implements NavigatorID (supplemental)
inline extern appName : (this: navigator) -> dom string
{ inline "#1.appName" }
inline extern appVersion : (this: navigator) -> dom string
{ inline "#1.appVersion" }
inline extern platform : (this: navigator) -> dom string
{ inline "#1.platform" }
inline extern userAgent : (this: navigator) -> dom string
{ inline "#1.userAgent" }
// Navigator implements NavigatorOnLine (supplemental)
inline extern onLine : (this: navigator) -> dom bool
{ inline "#1.onLine" }
// Navigator implements NavigatorContentUtils (supplemental)
inline extern registerProtocolHandler : (this: navigator, scheme: string, url: string, title: string) -> dom ()
{ inline "#1.registerProtocolHandler(#2, #3, #4)" }

inline extern registerContentHandler : (this: navigator, mimeType: string, url: string, title: string) -> dom ()
{ inline "#1.registerContentHandler(#2, #3, #4)" }

// Navigator implements NavigatorStorageUtils (supplemental)
inline extern yieldForStorageUpdates : (this: navigator) -> dom ()
{ inline "#1.yieldForStorageUpdates()" }

// Navigator implements NavigatorUserMedia (supplemental)
inline extern getUserMedia : (this: navigator, options: string, successCallback: navigatorUserMediaSuccessCallback) -> dom ()
{ inline "#1.getUserMedia(#2, #3)" }

inline extern getUserMedia : (this: navigator, options: string, successCallback: navigatorUserMediaSuccessCallback, errorCallback: navigatorUserMediaErrorCallback) -> dom ()
{ inline "#1.getUserMedia(#2, #3, #4)" }

