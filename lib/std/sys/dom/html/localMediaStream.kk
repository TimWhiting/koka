pub module std/sys/dom/html/localMediaStream

// Interface LocalMediaStream (generated by esidl 0.2.0).

import std/sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeLocalMediaStream  : forall<a> (a) -> maybe<localMediaStream>
{ inline "(#1.toString()==='[object LocalMediaStream]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toLocalMediaStream : forall<a> (a) -> exn localMediaStream
{ inline "(#1.toString()==='[object LocalMediaStream]'?#1:std_core.error('toLocalMediaStream: cast failed'))" }


// LocalMediaStream implements LocalMediaStream (supplemental)
inline extern stop : (this: localMediaStream) -> dom ()
{ inline "#1.stop()" }

// LocalMediaStream extends MediaStream
inline extern mediaStream : (localMediaStream) -> mediaStream // upcasting to extended type
{ inline "#1" }
// LocalMediaStream implements in extension MediaStream (overloading)
inline extern label : (this: localMediaStream) -> dom string
{ inline "#1.label" }
inline extern tracks : (this: localMediaStream) -> dom streamTrackList
{ inline "#1.tracks" }
inline extern record : (this: localMediaStream) -> dom mediaStreamRecorder
{ inline "#1.record()" }

inline extern readyState : (this: localMediaStream) -> dom mediaStreamReadyState
{ inline "#1.readyState" }
inline extern onended : (this: localMediaStream) -> dom (event -> dom ())
{ inline "#1.onended" }
inline extern onended : forall<e> (this: localMediaStream, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onended = #2)" }
inline extern onended : forall<e> (this: localMediaStream, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onended = #2)" }
// LocalMediaStream extends EventTarget
inline extern eventTarget : (localMediaStream) -> eventTarget // upcasting to extended type
{ inline "#1" }
// LocalMediaStream implements in extension EventTarget (overloading)
inline extern addEventListener : (this: localMediaStream, type_: string, listener: eventListener) -> dom ()
{ inline "#1.addEventListener(#2, #3)" }

inline extern addEventListener : (this: localMediaStream, type_: string, listener: eventListener, capture: bool) -> dom ()
{ inline "#1.addEventListener(#2, #3, #4)" }

inline extern removeEventListener : (this: localMediaStream, type_: string, listener: eventListener) -> dom ()
{ inline "#1.removeEventListener(#2, #3)" }

inline extern removeEventListener : (this: localMediaStream, type_: string, listener: eventListener, capture: bool) -> dom ()
{ inline "#1.removeEventListener(#2, #3, #4)" }

inline extern dispatchEvent : (this: localMediaStream, event: event) -> dom bool
{ inline "#1.dispatchEvent(#2)" }

