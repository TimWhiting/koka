pub module std/sys/dom/html/streamTrack

// Interface StreamTrack (generated by esidl 0.2.0).

import std/sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeStreamTrack  : forall<a> (a) -> maybe<streamTrack>
{ inline "(#1.toString()==='[object StreamTrack]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toStreamTrack : forall<a> (a) -> exn streamTrack
{ inline "(#1.toString()==='[object StreamTrack]'?#1:std_core.error('toStreamTrack: cast failed'))" }


// StreamTrack implements StreamTrack (supplemental)
inline extern kind : (this: streamTrack) -> dom string
{ inline "#1.kind" }
inline extern label : (this: streamTrack) -> dom string
{ inline "#1.label" }
inline extern enabled : (this: streamTrack) -> dom bool
{ inline "#1.enabled" }
inline extern enabled : (this: streamTrack, assigned: bool) -> dom ()
{ inline "(#1.enabled = #2)" }
