pub module std/sys/dom/html/navigatorUserMediaErrorCallback

// Interface NavigatorUserMediaErrorCallback (generated by esidl 0.2.0).

import std/sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeNavigatorUserMediaErrorCallback  : forall<a> (a) -> maybe<navigatorUserMediaErrorCallback>
{ inline "(#1.toString()==='[object NavigatorUserMediaErrorCallback]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toNavigatorUserMediaErrorCallback : forall<a> (a) -> exn navigatorUserMediaErrorCallback
{ inline "(#1.toString()==='[object NavigatorUserMediaErrorCallback]'?#1:std_core.error('toNavigatorUserMediaErrorCallback: cast failed'))" }


// NavigatorUserMediaErrorCallback implements NavigatorUserMediaErrorCallback (supplemental)
inline extern handleEvent : (this: navigatorUserMediaErrorCallback, error: navigatorUserMediaError) -> dom ()
{ inline "#1.handleEvent(#2)" }

