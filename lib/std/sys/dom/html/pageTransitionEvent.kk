pub module std/sys/dom/html/pageTransitionEvent

// Interface PageTransitionEvent (generated by esidl 0.2.0).

import std/sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybePageTransitionEvent  : forall<a> (a) -> maybe<pageTransitionEvent>
{ inline "(#1.toString()==='[object PageTransitionEvent]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toPageTransitionEvent : forall<a> (a) -> exn pageTransitionEvent
{ inline "(#1.toString()==='[object PageTransitionEvent]'?#1:std_core.error('toPageTransitionEvent: cast failed'))" }


// PageTransitionEvent implements PageTransitionEvent (supplemental)
inline extern persisted : (this: pageTransitionEvent) -> dom bool
{ inline "#1.persisted" }
inline extern initPageTransitionEvent : (this: pageTransitionEvent, typeArg: string, canBubbleArg: bool, cancelableArg: bool, persistedArg: bool) -> dom ()
{ inline "#1.initPageTransitionEvent(#2, #3, #4, #5)" }

// PageTransitionEvent extends Event
inline extern event : (pageTransitionEvent) -> event // upcasting to extended type
{ inline "#1" }
// PageTransitionEvent implements in extension Event (overloading)
inline extern type_ : (this: pageTransitionEvent) -> dom string
{ inline "#1.type" }
inline extern target : (this: pageTransitionEvent) -> dom eventTarget
{ inline "#1.target" }
inline extern currentTarget : (this: pageTransitionEvent) -> dom eventTarget
{ inline "#1.currentTarget" }
inline extern eventPhase : (this: pageTransitionEvent) -> dom eventPhase
{ inline "#1.eventPhase" }
inline extern stopPropagation : (this: pageTransitionEvent) -> dom ()
{ inline "#1.stopPropagation()" }

inline extern stopImmediatePropagation : (this: pageTransitionEvent) -> dom ()
{ inline "#1.stopImmediatePropagation()" }

inline extern bubbles : (this: pageTransitionEvent) -> dom bool
{ inline "#1.bubbles" }
inline extern cancelable : (this: pageTransitionEvent) -> dom bool
{ inline "#1.cancelable" }
inline extern preventDefault : (this: pageTransitionEvent) -> dom ()
{ inline "#1.preventDefault()" }

inline extern defaultPrevented : (this: pageTransitionEvent) -> dom bool
{ inline "#1.defaultPrevented" }
inline extern isTrusted : (this: pageTransitionEvent) -> dom bool
{ inline "#1.isTrusted" }
inline extern timeStamp : (this: pageTransitionEvent) -> dom domTimeStamp
{ inline "#1.timeStamp" }
inline extern initEvent : (this: pageTransitionEvent, type_: string, bubbles: bool, cancelable: bool) -> dom ()
{ inline "#1.initEvent(#2, #3, #4)" }

