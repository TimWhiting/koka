pub module std/sys/dom/html/htmlCollection

// Interface HTMLCollection (generated by esidl 0.2.0).

import std/sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeHtmlCollection  : forall<a> (a) -> maybe<htmlCollection>
{ inline "(#1.toString()==='[object HTMLCollection]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toHtmlCollection : forall<a> (a) -> exn htmlCollection
{ inline "(#1.toString()==='[object HTMLCollection]'?#1:std_core.error('toHtmlCollection: cast failed'))" }


// HTMLCollection implements HTMLCollection (supplemental)
inline extern length : (this: htmlCollection) -> dom uint32
{ inline "#1.length" }
inline extern item : (this: htmlCollection, index: uint32) -> dom element
{ inline "#1.item(#2)" }

inline extern namedItem : (this: htmlCollection, name: string) -> dom any /* former ::object */
{ inline "#1.namedItem(#2)" }

