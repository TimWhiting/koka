pub module std/sys/dom/html/radioNodeList

// Interface RadioNodeList (generated by esidl 0.2.0).

import std/sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeRadioNodeList  : forall<a> (a) -> maybe<radioNodeList>
{ inline "(#1.toString()==='[object RadioNodeList]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toRadioNodeList : forall<a> (a) -> exn radioNodeList
{ inline "(#1.toString()==='[object RadioNodeList]'?#1:std_core.error('toRadioNodeList: cast failed'))" }


// RadioNodeList implements RadioNodeList (supplemental)
inline extern value : (this: radioNodeList) -> dom string
{ inline "#1.value" }
inline extern value : (this: radioNodeList, assigned: string) -> dom ()
{ inline "(#1.value = #2)" }
// RadioNodeList extends NodeList
inline extern nodeList : (radioNodeList) -> nodeList // upcasting to extended type
{ inline "#1" }
// RadioNodeList implements in extension NodeList (overloading)
inline extern item : (this: radioNodeList, index: uint32) -> dom node
{ inline "#1.item(#2)" }

inline extern length : (this: radioNodeList) -> dom uint32
{ inline "#1.length" }
