pub module std/sys/dom/css/counter

// Interface Counter (generated by esidl 0.2.0).

import std/sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeCounter  : forall<a> (a) -> maybe<counter>
{ inline "(#1.toString()==='[object Counter]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toCounter : forall<a> (a) -> exn counter
{ inline "(#1.toString()==='[object Counter]'?#1:std_core.error('toCounter: cast failed'))" }


// Counter implements Counter (supplemental)
inline extern identifier : (this: counter) -> dom string
{ inline "#1.identifier" }
inline extern listStyle : (this: counter) -> dom string
{ inline "#1.listStyle" }
inline extern separator : (this: counter) -> dom string
{ inline "#1.separator" }
