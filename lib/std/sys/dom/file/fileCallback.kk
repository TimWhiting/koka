pub module std/sys/dom/file/fileCallback

// Interface FileCallback (generated by esidl 0.2.0).

import std/sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeFileCallback  : forall<a> (a) -> maybe<fileCallback>
{ inline "(#1.toString()==='[object FileCallback]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toFileCallback : forall<a> (a) -> exn fileCallback
{ inline "(#1.toString()==='[object FileCallback]'?#1:std_core.error('toFileCallback: cast failed'))" }


// FileCallback implements FileCallback (supplemental)
inline extern handleEvent : (this: fileCallback, file: file) -> dom ()
{ inline "#1.handleEvent(#2)" }

