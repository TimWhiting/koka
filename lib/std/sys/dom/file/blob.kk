pub module std/sys/dom/file/blob

// Interface Blob (generated by esidl 0.2.0).

import std/sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeBlob  : forall<a> (a) -> maybe<blob>
{ inline "(#1.toString()==='[object Blob]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toBlob : forall<a> (a) -> exn blob
{ inline "(#1.toString()==='[object Blob]'?#1:std_core.error('toBlob: cast failed'))" }


// Blob implements Blob (supplemental)
inline extern size : (this: blob) -> dom unsigned long long
{ inline "#1.size" }
inline extern type_ : (this: blob) -> dom string
{ inline "#1.type" }
inline extern slice : (this: blob, start: unsigned long long, length: unsigned long long) -> dom blob
{ inline "#1.slice(#2, #3)" }

inline extern slice : (this: blob, start: unsigned long long, length: unsigned long long, contentType: string) -> dom blob
{ inline "#1.slice(#2, #3, #4)" }

