pub module sys/dom/nodeList

// Interface NodeList (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeNodeList  : forall<a> (a) -> maybe<nodeList>
{ inline "(#1.toString()==='[object NodeList]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toNodeList : forall<a> (a) -> exn nodeList
{ inline "(#1.toString()==='[object NodeList]'?#1:std_core.error('toNodeList: cast failed'))" }


// NodeList implements NodeList (supplemental)
inline extern item : (this: nodeList, index: uint32) -> dom node
{ inline "#1.item(#2)" }

inline extern length : (this: nodeList) -> dom uint32
{ inline "#1.length" }
