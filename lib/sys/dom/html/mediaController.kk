pub module sys/dom/html/mediaController

// Interface MediaController (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeMediaController  : forall<a> (a) -> maybe<mediaController>
{ inline "(#1.toString()==='[object MediaController]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toMediaController : forall<a> (a) -> exn mediaController
{ inline "(#1.toString()==='[object MediaController]'?#1:std_core.error('toMediaController: cast failed'))" }


// MediaController implements MediaController (supplemental)
inline extern buffered : (this: mediaController) -> dom timeRanges
{ inline "#1.buffered" }
inline extern seekable : (this: mediaController) -> dom timeRanges
{ inline "#1.seekable" }
inline extern duration : (this: mediaController) -> dom float64
{ inline "#1.duration" }
inline extern currentTime : (this: mediaController) -> dom float64
{ inline "#1.currentTime" }
inline extern currentTime : (this: mediaController, assigned: float64) -> dom ()
{ inline "(#1.currentTime = #2)" }
inline extern paused : (this: mediaController) -> dom bool
{ inline "#1.paused" }
inline extern played : (this: mediaController) -> dom timeRanges
{ inline "#1.played" }
inline extern play : (this: mediaController) -> dom ()
{ inline "#1.play()" }

inline extern pause : (this: mediaController) -> dom ()
{ inline "#1.pause()" }

inline extern defaultPlaybackRate : (this: mediaController) -> dom float64
{ inline "#1.defaultPlaybackRate" }
inline extern defaultPlaybackRate : (this: mediaController, assigned: float64) -> dom ()
{ inline "(#1.defaultPlaybackRate = #2)" }
inline extern playbackRate : (this: mediaController) -> dom float64
{ inline "#1.playbackRate" }
inline extern playbackRate : (this: mediaController, assigned: float64) -> dom ()
{ inline "(#1.playbackRate = #2)" }
inline extern volume : (this: mediaController) -> dom float64
{ inline "#1.volume" }
inline extern volume : (this: mediaController, assigned: float64) -> dom ()
{ inline "(#1.volume = #2)" }
inline extern muted : (this: mediaController) -> dom bool
{ inline "#1.muted" }
inline extern muted : (this: mediaController, assigned: bool) -> dom ()
{ inline "(#1.muted = #2)" }
inline extern onemptied : (this: mediaController) -> dom (event -> dom ())
{ inline "#1.onemptied" }
inline extern onemptied : forall<e> (this: mediaController, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onemptied = #2)" }
inline extern onemptied : forall<e> (this: mediaController, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onemptied = #2)" }
inline extern onloadedmetadata : (this: mediaController) -> dom (event -> dom ())
{ inline "#1.onloadedmetadata" }
inline extern onloadedmetadata : forall<e> (this: mediaController, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadedmetadata = #2)" }
inline extern onloadedmetadata : forall<e> (this: mediaController, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadedmetadata = #2)" }
inline extern onloadeddata : (this: mediaController) -> dom (event -> dom ())
{ inline "#1.onloadeddata" }
inline extern onloadeddata : forall<e> (this: mediaController, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadeddata = #2)" }
inline extern onloadeddata : forall<e> (this: mediaController, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadeddata = #2)" }
inline extern oncanplay : (this: mediaController) -> dom (event -> dom ())
{ inline "#1.oncanplay" }
inline extern oncanplay : forall<e> (this: mediaController, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncanplay = #2)" }
inline extern oncanplay : forall<e> (this: mediaController, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncanplay = #2)" }
inline extern oncanplaythrough : (this: mediaController) -> dom (event -> dom ())
{ inline "#1.oncanplaythrough" }
inline extern oncanplaythrough : forall<e> (this: mediaController, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncanplaythrough = #2)" }
inline extern oncanplaythrough : forall<e> (this: mediaController, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncanplaythrough = #2)" }
inline extern onplaying : (this: mediaController) -> dom (event -> dom ())
{ inline "#1.onplaying" }
inline extern onplaying : forall<e> (this: mediaController, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onplaying = #2)" }
inline extern onplaying : forall<e> (this: mediaController, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onplaying = #2)" }
inline extern onended : (this: mediaController) -> dom (event -> dom ())
{ inline "#1.onended" }
inline extern onended : forall<e> (this: mediaController, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onended = #2)" }
inline extern onended : forall<e> (this: mediaController, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onended = #2)" }
inline extern onwaiting : (this: mediaController) -> dom (event -> dom ())
{ inline "#1.onwaiting" }
inline extern onwaiting : forall<e> (this: mediaController, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onwaiting = #2)" }
inline extern onwaiting : forall<e> (this: mediaController, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onwaiting = #2)" }
inline extern ondurationchange : (this: mediaController) -> dom (event -> dom ())
{ inline "#1.ondurationchange" }
inline extern ondurationchange : forall<e> (this: mediaController, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondurationchange = #2)" }
inline extern ondurationchange : forall<e> (this: mediaController, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondurationchange = #2)" }
inline extern ontimeupdate : (this: mediaController) -> dom (event -> dom ())
{ inline "#1.ontimeupdate" }
inline extern ontimeupdate : forall<e> (this: mediaController, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ontimeupdate = #2)" }
inline extern ontimeupdate : forall<e> (this: mediaController, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ontimeupdate = #2)" }
inline extern onplay : (this: mediaController) -> dom (event -> dom ())
{ inline "#1.onplay" }
inline extern onplay : forall<e> (this: mediaController, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onplay = #2)" }
inline extern onplay : forall<e> (this: mediaController, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onplay = #2)" }
inline extern onpause : (this: mediaController) -> dom (event -> dom ())
{ inline "#1.onpause" }
inline extern onpause : forall<e> (this: mediaController, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onpause = #2)" }
inline extern onpause : forall<e> (this: mediaController, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onpause = #2)" }
inline extern onratechange : (this: mediaController) -> dom (event -> dom ())
{ inline "#1.onratechange" }
inline extern onratechange : forall<e> (this: mediaController, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onratechange = #2)" }
inline extern onratechange : forall<e> (this: mediaController, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onratechange = #2)" }
inline extern onvolumechange : (this: mediaController) -> dom (event -> dom ())
{ inline "#1.onvolumechange" }
inline extern onvolumechange : forall<e> (this: mediaController, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onvolumechange = #2)" }
inline extern onvolumechange : forall<e> (this: mediaController, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onvolumechange = #2)" }
