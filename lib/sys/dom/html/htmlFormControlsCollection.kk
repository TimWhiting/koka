pub module sys/dom/html/htmlFormControlsCollection

// Interface HTMLFormControlsCollection (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeHtmlFormControlsCollection  : forall<a> (a) -> maybe<htmlFormControlsCollection>
{ inline "(#1.toString()==='[object HTMLFormControlsCollection]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toHtmlFormControlsCollection : forall<a> (a) -> exn htmlFormControlsCollection
{ inline "(#1.toString()==='[object HTMLFormControlsCollection]'?#1:std_core.error('toHtmlFormControlsCollection: cast failed'))" }


// HTMLFormControlsCollection implements HTMLFormControlsCollection (supplemental)
inline extern namedItem : (this: htmlFormControlsCollection, name: string) -> dom any /* former ::object */
{ inline "#1.namedItem(#2)" }

// HTMLFormControlsCollection extends HTMLCollection
inline extern htmlCollection : (htmlFormControlsCollection) -> htmlCollection // upcasting to extended type
{ inline "#1" }
// HTMLFormControlsCollection implements in extension HTMLCollection (overloading)
inline extern length : (this: htmlFormControlsCollection) -> dom uint32
{ inline "#1.length" }
inline extern item : (this: htmlFormControlsCollection, index: uint32) -> dom element
{ inline "#1.item(#2)" }

inline extern namedItem : (this: htmlFormControlsCollection, name: string) -> dom any /* former ::object */
{ inline "#1.namedItem(#2)" }

