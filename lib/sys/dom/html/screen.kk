pub module sys/dom/html/screen

// Interface Screen (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeScreen  : forall<a> (a) -> maybe<screen>
{ inline "(#1.toString()==='[object Screen]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toScreen : forall<a> (a) -> exn screen
{ inline "(#1.toString()==='[object Screen]'?#1:std_core.error('toScreen: cast failed'))" }


// Screen implements Screen (supplemental)
inline extern availWidth : (this: screen) -> dom uint32
{ inline "#1.availWidth" }
inline extern availHeight : (this: screen) -> dom uint32
{ inline "#1.availHeight" }
inline extern width : (this: screen) -> dom uint32
{ inline "#1.width" }
inline extern height : (this: screen) -> dom uint32
{ inline "#1.height" }
inline extern colorDepth : (this: screen) -> dom uint32
{ inline "#1.colorDepth" }
inline extern pixelDepth : (this: screen) -> dom uint32
{ inline "#1.pixelDepth" }
