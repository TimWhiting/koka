pub module sys/dom/html/window

// Interface Window (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeWindow:forall<a>(a) -> maybe<window>
{ inline "(#1.toString()==='[object Window]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toWindow:forall<a>(a) -> exn window
{ inline "(#1.toString()==='[object Window]'?#1:std_core.error('toWindow: cast failed'))" }


// Window implements Window (supplemental)
inline extern window : (this: window) -> dom windowProxy
{ inline "#1.window" }
inline extern self : (this: window) -> dom windowProxy
{ inline "#1.self" }
inline extern document : (this: window) -> dom document
{ inline "#1.document" }
inline extern name : (this: window) -> dom string
{ inline "#1.name" }
inline extern name : (this: window, assigned: string) -> dom ()
{ inline "(#1.name = #2)" }
inline extern location : (this: window) -> dom location
{ inline "#1.location" }
inline extern location : (this: window, assigned: location) -> dom ()
{ inline "(#1.location = #2)" }
inline extern history : (this: window) -> dom history
{ inline "#1.history" }
inline extern undoManager : (this: window) -> dom undoManager
{ inline "#1.undoManager" }
inline extern locationbar : (this: window) -> dom barProp
{ inline "#1.locationbar" }
inline extern locationbar : (this: window, assigned: barProp) -> dom ()
{ inline "(#1.locationbar = #2)" }
inline extern menubar : (this: window) -> dom barProp
{ inline "#1.menubar" }
inline extern menubar : (this: window, assigned: barProp) -> dom ()
{ inline "(#1.menubar = #2)" }
inline extern personalbar : (this: window) -> dom barProp
{ inline "#1.personalbar" }
inline extern personalbar : (this: window, assigned: barProp) -> dom ()
{ inline "(#1.personalbar = #2)" }
inline extern scrollbars : (this: window) -> dom barProp
{ inline "#1.scrollbars" }
inline extern scrollbars : (this: window, assigned: barProp) -> dom ()
{ inline "(#1.scrollbars = #2)" }
inline extern statusbar : (this: window) -> dom barProp
{ inline "#1.statusbar" }
inline extern statusbar : (this: window, assigned: barProp) -> dom ()
{ inline "(#1.statusbar = #2)" }
inline extern toolbar : (this: window) -> dom barProp
{ inline "#1.toolbar" }
inline extern toolbar : (this: window, assigned: barProp) -> dom ()
{ inline "(#1.toolbar = #2)" }
inline extern status : (this: window) -> dom string
{ inline "#1.status" }
inline extern status : (this: window, assigned: string) -> dom ()
{ inline "(#1.status = #2)" }
inline extern close : (this: window) -> dom ()
{ inline "#1.close()" }

inline extern stop : (this: window) -> dom ()
{ inline "#1.stop()" }

inline extern focus : (this: window) -> dom ()
{ inline "#1.focus()" }

inline extern blur : (this: window) -> dom ()
{ inline "#1.blur()" }

inline extern frames : (this: window) -> dom windowProxy
{ inline "#1.frames" }
inline extern frames : (this: window, assigned: windowProxy) -> dom ()
{ inline "(#1.frames = #2)" }
inline extern length : (this: window) -> dom uint32
{ inline "#1.length" }
inline extern length : (this: window, assigned: uint32) -> dom ()
{ inline "(#1.length = #2)" }
inline extern top : (this: window) -> dom windowProxy
{ inline "#1.top" }
inline extern opener : (this: window) -> dom windowProxy
{ inline "#1.opener" }
inline extern opener : (this: window, assigned: windowProxy) -> dom ()
{ inline "(#1.opener = #2)" }
inline extern parent : (this: window) -> dom windowProxy
{ inline "#1.parent" }
inline extern frameElement : (this: window) -> dom element
{ inline "#1.frameElement" }
inline extern open : (this: window) -> dom windowProxy
{ inline "#1.open()" }

inline extern open : (this: window, url: string) -> dom windowProxy
{ inline "#1.open(#2)" }

inline extern open : (this: window, url: string, target: string) -> dom windowProxy
{ inline "#1.open(#2, #3)" }

inline extern open : (this: window, url: string, target: string, features: string) -> dom windowProxy
{ inline "#1.open(#2, #3, #4)" }

inline extern open : (this: window, url: string, target: string, features: string, replace: bool) -> dom windowProxy
{ inline "#1.open(#2, #3, #4, #5)" }

inline extern getElement : (this: window, index: uint32) -> dom windowProxy
{ inline "#1.getElement(#2)" }

inline extern getElement : (this: window, name: string) -> dom any /* anyResult */
{ inline "#1.getElement(#2)" }

inline extern setElement : forall<a> (this: window, name: string, value: a /* anyArg */) -> dom ()
{ inline "#1.setElement(#2, #3)" }

inline extern navigator : (this: window) -> dom navigator
{ inline "#1.navigator" }
inline extern external_ : (this: window) -> dom external_
{ inline "#1.external" }
inline extern applicationCache : (this: window) -> dom applicationCache
{ inline "#1.applicationCache" }
inline extern alert : (this: window, message: string) -> dom ()
{ inline "#1.alert(#2)" }

inline extern confirm : (this: window, message: string) -> dom bool
{ inline "#1.confirm(#2)" }

inline extern prompt : (this: window, message: string) -> dom string
{ inline "#1.prompt(#2)" }

inline extern prompt : (this: window, message: string, default: string) -> dom string
{ inline "#1.prompt(#2, #3)" }

inline extern print : (this: window) -> dom ()
{ inline "#1.print()" }

inline extern showModalDialog : (this: window, url: string) -> dom any /* anyResult */
{ inline "#1.showModalDialog(#2)" }

inline extern showModalDialog : forall<a> (this: window, url: string, argument: a /* anyArg */) -> dom any /* anyResult */
{ inline "#1.showModalDialog(#2, #3)" }

inline extern postMessage : forall<a> (this: window, message: a /* anyArg */, targetOrigin: string) -> dom ()
{ inline "#1.postMessage(#2, #3)" }

inline extern postMessage : forall<a> (this: window, message: a /* anyArg */, targetOrigin: string, transfer: seqence) -> dom ()
{ inline "#1.postMessage(#2, #3, #4)" }

inline extern onabort : (this: window) -> dom (uiEvent -> dom ())
{ inline "#1.onabort" }
inline extern onabort : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onabort = #2)" }
inline extern onabort : forall<e> (this: window, assigned: (uiEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onabort = #2)" }
inline extern onafterprint : (this: window) -> dom (event -> dom ())
{ inline "#1.onafterprint" }
inline extern onafterprint : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onafterprint = #2)" }
inline extern onafterprint : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onafterprint = #2)" }
inline extern onbeforeprint : (this: window) -> dom (event -> dom ())
{ inline "#1.onbeforeprint" }
inline extern onbeforeprint : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onbeforeprint = #2)" }
inline extern onbeforeprint : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onbeforeprint = #2)" }
inline extern onbeforeunload : (this: window) -> dom (event -> dom ())
{ inline "#1.onbeforeunload" }
inline extern onbeforeunload : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onbeforeunload = #2)" }
inline extern onbeforeunload : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onbeforeunload = #2)" }
inline extern onblur : (this: window) -> dom (focusEvent -> dom ())
{ inline "#1.onblur" }
inline extern onblur : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onblur = #2)" }
inline extern onblur : forall<e> (this: window, assigned: (focusEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onblur = #2)" }
inline extern oncanplay : (this: window) -> dom (event -> dom ())
{ inline "#1.oncanplay" }
inline extern oncanplay : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncanplay = #2)" }
inline extern oncanplay : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncanplay = #2)" }
inline extern oncanplaythrough : (this: window) -> dom (event -> dom ())
{ inline "#1.oncanplaythrough" }
inline extern oncanplaythrough : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncanplaythrough = #2)" }
inline extern oncanplaythrough : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncanplaythrough = #2)" }
inline extern onchange : (this: window) -> dom (event -> dom ())
{ inline "#1.onchange" }
inline extern onchange : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onchange = #2)" }
inline extern onchange : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onchange = #2)" }
inline extern onclick : (this: window) -> dom (mouseEvent -> dom ())
{ inline "#1.onclick" }
inline extern onclick : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onclick = #2)" }
inline extern onclick : forall<e> (this: window, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onclick = #2)" }
inline extern oncontextmenu : (this: window) -> dom (mouseEvent -> dom ())
{ inline "#1.oncontextmenu" }
inline extern oncontextmenu : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncontextmenu = #2)" }
inline extern oncontextmenu : forall<e> (this: window, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncontextmenu = #2)" }
inline extern oncuechange : (this: window) -> dom (event -> dom ())
{ inline "#1.oncuechange" }
inline extern oncuechange : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncuechange = #2)" }
inline extern oncuechange : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oncuechange = #2)" }
inline extern ondblclick : (this: window) -> dom (mouseEvent -> dom ())
{ inline "#1.ondblclick" }
inline extern ondblclick : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondblclick = #2)" }
inline extern ondblclick : forall<e> (this: window, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondblclick = #2)" }
inline extern ondrag : (this: window) -> dom (dragEvent -> dom ())
{ inline "#1.ondrag" }
inline extern ondrag : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondrag = #2)" }
inline extern ondrag : forall<e> (this: window, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondrag = #2)" }
inline extern ondragend : (this: window) -> dom (dragEvent -> dom ())
{ inline "#1.ondragend" }
inline extern ondragend : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragend = #2)" }
inline extern ondragend : forall<e> (this: window, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragend = #2)" }
inline extern ondragenter : (this: window) -> dom (dragEvent -> dom ())
{ inline "#1.ondragenter" }
inline extern ondragenter : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragenter = #2)" }
inline extern ondragenter : forall<e> (this: window, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragenter = #2)" }
inline extern ondragleave : (this: window) -> dom (dragEvent -> dom ())
{ inline "#1.ondragleave" }
inline extern ondragleave : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragleave = #2)" }
inline extern ondragleave : forall<e> (this: window, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragleave = #2)" }
inline extern ondragover : (this: window) -> dom (dragEvent -> dom ())
{ inline "#1.ondragover" }
inline extern ondragover : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragover = #2)" }
inline extern ondragover : forall<e> (this: window, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragover = #2)" }
inline extern ondragstart : (this: window) -> dom (dragEvent -> dom ())
{ inline "#1.ondragstart" }
inline extern ondragstart : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragstart = #2)" }
inline extern ondragstart : forall<e> (this: window, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondragstart = #2)" }
inline extern ondrop : (this: window) -> dom (dragEvent -> dom ())
{ inline "#1.ondrop" }
inline extern ondrop : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondrop = #2)" }
inline extern ondrop : forall<e> (this: window, assigned: (dragEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondrop = #2)" }
inline extern ondurationchange : (this: window) -> dom (event -> dom ())
{ inline "#1.ondurationchange" }
inline extern ondurationchange : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondurationchange = #2)" }
inline extern ondurationchange : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ondurationchange = #2)" }
inline extern onemptied : (this: window) -> dom (event -> dom ())
{ inline "#1.onemptied" }
inline extern onemptied : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onemptied = #2)" }
inline extern onemptied : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onemptied = #2)" }
inline extern onended : (this: window) -> dom (event -> dom ())
{ inline "#1.onended" }
inline extern onended : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onended = #2)" }
inline extern onended : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onended = #2)" }
inline extern onerror : (this: window) -> dom (event -> dom ())
{ inline "#1.onerror" }
inline extern onerror : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onerror = #2)" }
inline extern onerror : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onerror = #2)" }
inline extern onfocus : (this: window) -> dom (focusEvent -> dom ())
{ inline "#1.onfocus" }
inline extern onfocus : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onfocus = #2)" }
inline extern onfocus : forall<e> (this: window, assigned: (focusEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onfocus = #2)" }
inline extern onhashchange : (this: window) -> dom (event -> dom ())
{ inline "#1.onhashchange" }
inline extern onhashchange : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onhashchange = #2)" }
inline extern onhashchange : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onhashchange = #2)" }
inline extern oninput : (this: window) -> dom (event -> dom ())
{ inline "#1.oninput" }
inline extern oninput : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oninput = #2)" }
inline extern oninput : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oninput = #2)" }
inline extern oninvalid : (this: window) -> dom (event -> dom ())
{ inline "#1.oninvalid" }
inline extern oninvalid : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oninvalid = #2)" }
inline extern oninvalid : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.oninvalid = #2)" }
inline extern onkeydown : (this: window) -> dom (keyboardEvent -> dom ())
{ inline "#1.onkeydown" }
inline extern onkeydown : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onkeydown = #2)" }
inline extern onkeydown : forall<e> (this: window, assigned: (keyboardEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onkeydown = #2)" }
inline extern onkeypress : (this: window) -> dom (keyboardEvent -> dom ())
{ inline "#1.onkeypress" }
inline extern onkeypress : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onkeypress = #2)" }
inline extern onkeypress : forall<e> (this: window, assigned: (keyboardEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onkeypress = #2)" }
inline extern onkeyup : (this: window) -> dom (keyboardEvent -> dom ())
{ inline "#1.onkeyup" }
inline extern onkeyup : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onkeyup = #2)" }
inline extern onkeyup : forall<e> (this: window, assigned: (keyboardEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onkeyup = #2)" }
inline extern onload : (this: window) -> dom (event -> dom ())
{ inline "#1.onload" }
inline extern onload : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onload = #2)" }
inline extern onload : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onload = #2)" }
inline extern onloadeddata : (this: window) -> dom (event -> dom ())
{ inline "#1.onloadeddata" }
inline extern onloadeddata : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadeddata = #2)" }
inline extern onloadeddata : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadeddata = #2)" }
inline extern onloadedmetadata : (this: window) -> dom (event -> dom ())
{ inline "#1.onloadedmetadata" }
inline extern onloadedmetadata : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadedmetadata = #2)" }
inline extern onloadedmetadata : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadedmetadata = #2)" }
inline extern onloadstart : (this: window) -> dom (event -> dom ())
{ inline "#1.onloadstart" }
inline extern onloadstart : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadstart = #2)" }
inline extern onloadstart : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onloadstart = #2)" }
inline extern onmessage : (this: window) -> dom (event -> dom ())
{ inline "#1.onmessage" }
inline extern onmessage : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmessage = #2)" }
inline extern onmessage : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmessage = #2)" }
inline extern onmousedown : (this: window) -> dom (mouseEvent -> dom ())
{ inline "#1.onmousedown" }
inline extern onmousedown : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmousedown = #2)" }
inline extern onmousedown : forall<e> (this: window, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmousedown = #2)" }
inline extern onmousemove : (this: window) -> dom (mouseEvent -> dom ())
{ inline "#1.onmousemove" }
inline extern onmousemove : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmousemove = #2)" }
inline extern onmousemove : forall<e> (this: window, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmousemove = #2)" }
inline extern onmouseout : (this: window) -> dom (mouseEvent -> dom ())
{ inline "#1.onmouseout" }
inline extern onmouseout : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmouseout = #2)" }
inline extern onmouseout : forall<e> (this: window, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmouseout = #2)" }
inline extern onmouseover : (this: window) -> dom (mouseEvent -> dom ())
{ inline "#1.onmouseover" }
inline extern onmouseover : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmouseover = #2)" }
inline extern onmouseover : forall<e> (this: window, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmouseover = #2)" }
inline extern onmouseup : (this: window) -> dom (mouseEvent -> dom ())
{ inline "#1.onmouseup" }
inline extern onmouseup : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmouseup = #2)" }
inline extern onmouseup : forall<e> (this: window, assigned: (mouseEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmouseup = #2)" }
inline extern onmousewheel : (this: window) -> dom (wheelEvent -> dom ())
{ inline "#1.onmousewheel" }
inline extern onmousewheel : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmousewheel = #2)" }
inline extern onmousewheel : forall<e> (this: window, assigned: (wheelEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onmousewheel = #2)" }
inline extern onoffline : (this: window) -> dom (event -> dom ())
{ inline "#1.onoffline" }
inline extern onoffline : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onoffline = #2)" }
inline extern onoffline : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onoffline = #2)" }
inline extern ononline : (this: window) -> dom (event -> dom ())
{ inline "#1.ononline" }
inline extern ononline : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ononline = #2)" }
inline extern ononline : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ononline = #2)" }
inline extern onpause : (this: window) -> dom (event -> dom ())
{ inline "#1.onpause" }
inline extern onpause : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onpause = #2)" }
inline extern onpause : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onpause = #2)" }
inline extern onplay : (this: window) -> dom (event -> dom ())
{ inline "#1.onplay" }
inline extern onplay : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onplay = #2)" }
inline extern onplay : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onplay = #2)" }
inline extern onplaying : (this: window) -> dom (event -> dom ())
{ inline "#1.onplaying" }
inline extern onplaying : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onplaying = #2)" }
inline extern onplaying : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onplaying = #2)" }
inline extern onpagehide : (this: window) -> dom (event -> dom ())
{ inline "#1.onpagehide" }
inline extern onpagehide : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onpagehide = #2)" }
inline extern onpagehide : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onpagehide = #2)" }
inline extern onpageshow : (this: window) -> dom (event -> dom ())
{ inline "#1.onpageshow" }
inline extern onpageshow : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onpageshow = #2)" }
inline extern onpageshow : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onpageshow = #2)" }
inline extern onpopstate : (this: window) -> dom (event -> dom ())
{ inline "#1.onpopstate" }
inline extern onpopstate : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onpopstate = #2)" }
inline extern onpopstate : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onpopstate = #2)" }
inline extern onprogress : (this: window) -> dom (progressEvent -> dom ())
{ inline "#1.onprogress" }
inline extern onprogress : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onprogress = #2)" }
inline extern onprogress : forall<e> (this: window, assigned: (progressEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onprogress = #2)" }
inline extern onratechange : (this: window) -> dom (event -> dom ())
{ inline "#1.onratechange" }
inline extern onratechange : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onratechange = #2)" }
inline extern onratechange : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onratechange = #2)" }
inline extern onreadystatechange : (this: window) -> dom (event -> dom ())
{ inline "#1.onreadystatechange" }
inline extern onreadystatechange : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onreadystatechange = #2)" }
inline extern onreadystatechange : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onreadystatechange = #2)" }
inline extern onredo : (this: window) -> dom (event -> dom ())
{ inline "#1.onredo" }
inline extern onredo : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onredo = #2)" }
inline extern onredo : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onredo = #2)" }
inline extern onreset : (this: window) -> dom (event -> dom ())
{ inline "#1.onreset" }
inline extern onreset : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onreset = #2)" }
inline extern onreset : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onreset = #2)" }
inline extern onresize : (this: window) -> dom (uiEvent -> dom ())
{ inline "#1.onresize" }
inline extern onresize : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onresize = #2)" }
inline extern onresize : forall<e> (this: window, assigned: (uiEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onresize = #2)" }
inline extern onscroll : (this: window) -> dom (uiEvent -> dom ())
{ inline "#1.onscroll" }
inline extern onscroll : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onscroll = #2)" }
inline extern onscroll : forall<e> (this: window, assigned: (uiEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onscroll = #2)" }
inline extern onseeked : (this: window) -> dom (event -> dom ())
{ inline "#1.onseeked" }
inline extern onseeked : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onseeked = #2)" }
inline extern onseeked : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onseeked = #2)" }
inline extern onseeking : (this: window) -> dom (event -> dom ())
{ inline "#1.onseeking" }
inline extern onseeking : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onseeking = #2)" }
inline extern onseeking : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onseeking = #2)" }
inline extern onselect : (this: window) -> dom (uiEvent -> dom ())
{ inline "#1.onselect" }
inline extern onselect : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onselect = #2)" }
inline extern onselect : forall<e> (this: window, assigned: (uiEvent) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onselect = #2)" }
inline extern onshow : (this: window) -> dom (event -> dom ())
{ inline "#1.onshow" }
inline extern onshow : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onshow = #2)" }
inline extern onshow : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onshow = #2)" }
inline extern onstalled : (this: window) -> dom (event -> dom ())
{ inline "#1.onstalled" }
inline extern onstalled : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onstalled = #2)" }
inline extern onstalled : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onstalled = #2)" }
inline extern onstorage : (this: window) -> dom (event -> dom ())
{ inline "#1.onstorage" }
inline extern onstorage : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onstorage = #2)" }
inline extern onstorage : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onstorage = #2)" }
inline extern onsubmit : (this: window) -> dom (event -> dom ())
{ inline "#1.onsubmit" }
inline extern onsubmit : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onsubmit = #2)" }
inline extern onsubmit : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onsubmit = #2)" }
inline extern onsuspend : (this: window) -> dom (event -> dom ())
{ inline "#1.onsuspend" }
inline extern onsuspend : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onsuspend = #2)" }
inline extern onsuspend : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onsuspend = #2)" }
inline extern ontimeupdate : (this: window) -> dom (event -> dom ())
{ inline "#1.ontimeupdate" }
inline extern ontimeupdate : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ontimeupdate = #2)" }
inline extern ontimeupdate : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.ontimeupdate = #2)" }
inline extern onundo : (this: window) -> dom (event -> dom ())
{ inline "#1.onundo" }
inline extern onundo : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onundo = #2)" }
inline extern onundo : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onundo = #2)" }
inline extern onunload : (this: window) -> dom (event -> dom ())
{ inline "#1.onunload" }
inline extern onunload : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onunload = #2)" }
inline extern onunload : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onunload = #2)" }
inline extern onvolumechange : (this: window) -> dom (event -> dom ())
{ inline "#1.onvolumechange" }
inline extern onvolumechange : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onvolumechange = #2)" }
inline extern onvolumechange : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onvolumechange = #2)" }
inline extern onwaiting : (this: window) -> dom (event -> dom ())
{ inline "#1.onwaiting" }
inline extern onwaiting : forall<e> (this: window, assigned: () -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onwaiting = #2)" }
inline extern onwaiting : forall<e> (this: window, assigned: (event) -> <dom|e> ()) -> <dom|e> ()
{ inline "(#1.onwaiting = #2)" }
// Window implements Window-2 (supplemental)
inline extern getComputedStyle : (this: window, elt: element) -> dom cssStyleDeclaration
{ inline "#1.getComputedStyle(#2)" }

inline extern getComputedStyle : (this: window, elt: element, pseudoElt: string) -> dom cssStyleDeclaration
{ inline "#1.getComputedStyle(#2, #3)" }

// Window implements Window (supplemental)
inline extern matchMedia : (this: window, media_query_list: string) -> dom mediaQueryList
{ inline "#1.matchMedia(#2)" }

inline extern screen : (this: window) -> dom screen
{ inline "#1.screen" }
inline extern innerWidth : (this: window) -> dom int32
{ inline "#1.innerWidth" }
inline extern innerHeight : (this: window) -> dom int32
{ inline "#1.innerHeight" }
inline extern scrollX : (this: window) -> dom int32
{ inline "#1.scrollX" }
inline extern pageXOffset : (this: window) -> dom int32
{ inline "#1.pageXOffset" }
inline extern scrollY : (this: window) -> dom int32
{ inline "#1.scrollY" }
inline extern pageYOffset : (this: window) -> dom int32
{ inline "#1.pageYOffset" }
inline extern scroll : (this: window, x: int32, y: int32) -> dom ()
{ inline "#1.scroll(#2, #3)" }

inline extern scrollTo : (this: window, x: int32, y: int32) -> dom ()
{ inline "#1.scrollTo(#2, #3)" }

inline extern scrollBy : (this: window, x: int32, y: int32) -> dom ()
{ inline "#1.scrollBy(#2, #3)" }

inline extern screenX : (this: window) -> dom int32
{ inline "#1.screenX" }
inline extern screenY : (this: window) -> dom int32
{ inline "#1.screenY" }
inline extern outerWidth : (this: window) -> dom int32
{ inline "#1.outerWidth" }
inline extern outerHeight : (this: window) -> dom int32
{ inline "#1.outerHeight" }
// Window implements WindowBase64 (supplemental)
inline extern btoa : (this: window, btoa: string) -> dom string
{ inline "#1.btoa(#2)" }

inline extern atob : (this: window, atob: string) -> dom string
{ inline "#1.atob(#2)" }

// Window implements WindowTimers (supplemental)
inline extern setTimeout : (this: window, _handler: () -> dom ()) -> dom int32
{ inline "#1.setTimeout(#2)" }

inline extern setTimeout : forall<e> (this: window, _handler: () -> <dom|e> (), timeout: milliseconds) -> <dom|e> int32
{ inline "#1.setTimeout(#2, #3)" }


inline extern clearTimeout : (this: window, _handle: int32) -> dom ()
{ inline "#1.clearTimeout(#2)" }

inline extern setInterval : (this: window, _handler: () -> dom ()) -> dom int32
{ inline "#1.setInterval(#2)" }

inline extern setInterval : (this: window, _handler: () -> dom (), timeout: milliseconds) -> dom int32
{ inline "#1.setInterval(#2, #3)" }


inline extern clearInterval : (this: window, _handle: int32) -> dom ()
{ inline "#1.clearInterval(#2)" }

// Window implements EventTarget (overloading)
inline extern addEventListener : (this: window, type_: string, listener: eventListener) -> dom ()
{ inline "#1.addEventListener(#2, #3)" }

inline extern addEventListener : (this: window, type_: string, listener: eventListener, capture: bool) -> dom ()
{ inline "#1.addEventListener(#2, #3, #4)" }

inline extern removeEventListener : (this: window, type_: string, listener: eventListener) -> dom ()
{ inline "#1.removeEventListener(#2, #3)" }

inline extern removeEventListener : (this: window, type_: string, listener: eventListener, capture: bool) -> dom ()
{ inline "#1.removeEventListener(#2, #3, #4)" }

inline extern dispatchEvent : (this: window, event: event) -> dom bool
{ inline "#1.dispatchEvent(#2)" }

