pub module sys/dom/css/cssStyleDeclaration

// Interface CSSStyleDeclaration (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeCssStyleDeclaration  : forall<a> (a) -> maybe<cssStyleDeclaration>
{ inline "(#1.toString()==='[object CSSStyleDeclaration]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toCssStyleDeclaration : forall<a> (a) -> exn cssStyleDeclaration
{ inline "(#1.toString()==='[object CSSStyleDeclaration]'?#1:std_core.error('toCssStyleDeclaration: cast failed'))" }


// CSSStyleDeclaration implements CSSStyleDeclaration (supplemental)
inline extern cssText : (this: cssStyleDeclaration) -> dom string
{ inline "#1.cssText" }
inline extern cssText : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.cssText = #2)" }
inline extern length : (this: cssStyleDeclaration) -> dom uint32
{ inline "#1.length" }
inline extern item : (this: cssStyleDeclaration, index: uint32) -> dom string
{ inline "#1.item(#2)" }

inline extern getPropertyValue : (this: cssStyleDeclaration, property: string) -> dom string
{ inline "#1.getPropertyValue(#2)" }

inline extern getPropertyPriority : (this: cssStyleDeclaration, property: string) -> dom string
{ inline "#1.getPropertyPriority(#2)" }

inline extern setProperty : (this: cssStyleDeclaration, property: string, value: string) -> dom ()
{ inline "#1.setProperty(#2, #3)" }

inline extern setProperty : (this: cssStyleDeclaration, property: string, value: string, priority: string) -> dom ()
{ inline "#1.setProperty(#2, #3, #4)" }

inline extern removeProperty : (this: cssStyleDeclaration, property: string) -> dom string
{ inline "#1.removeProperty(#2)" }

inline extern values : (this: cssStyleDeclaration) -> dom cssStyleDeclarationValue
{ inline "#1.values" }
inline extern parentRule : (this: cssStyleDeclaration) -> dom cssRule
{ inline "#1.parentRule" }
// CSSStyleDeclaration implements CSS2Properties (overloading)
inline extern azimuth : (this: cssStyleDeclaration) -> dom string
{ inline "#1.azimuth" }
inline extern azimuth : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.azimuth = #2)" }
inline extern background : (this: cssStyleDeclaration) -> dom string
{ inline "#1.background" }
inline extern background : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.background = #2)" }
inline extern backgroundAttachment : (this: cssStyleDeclaration) -> dom string
{ inline "#1.backgroundAttachment" }
inline extern backgroundAttachment : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.backgroundAttachment = #2)" }
inline extern backgroundColor : (this: cssStyleDeclaration) -> dom string
{ inline "#1.backgroundColor" }
inline extern backgroundColor : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.backgroundColor = #2)" }
inline extern backgroundImage : (this: cssStyleDeclaration) -> dom string
{ inline "#1.backgroundImage" }
inline extern backgroundImage : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.backgroundImage = #2)" }
inline extern backgroundPosition : (this: cssStyleDeclaration) -> dom string
{ inline "#1.backgroundPosition" }
inline extern backgroundPosition : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.backgroundPosition = #2)" }
inline extern backgroundRepeat : (this: cssStyleDeclaration) -> dom string
{ inline "#1.backgroundRepeat" }
inline extern backgroundRepeat : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.backgroundRepeat = #2)" }
inline extern border : (this: cssStyleDeclaration) -> dom string
{ inline "#1.border" }
inline extern border : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.border = #2)" }
inline extern borderCollapse : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderCollapse" }
inline extern borderCollapse : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderCollapse = #2)" }
inline extern borderColor : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderColor" }
inline extern borderColor : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderColor = #2)" }
inline extern borderSpacing : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderSpacing" }
inline extern borderSpacing : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderSpacing = #2)" }
inline extern borderStyle : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderStyle" }
inline extern borderStyle : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderStyle = #2)" }
inline extern borderTop : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderTop" }
inline extern borderTop : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderTop = #2)" }
inline extern borderRight : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderRight" }
inline extern borderRight : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderRight = #2)" }
inline extern borderBottom : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderBottom" }
inline extern borderBottom : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderBottom = #2)" }
inline extern borderLeft : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderLeft" }
inline extern borderLeft : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderLeft = #2)" }
inline extern borderTopColor : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderTopColor" }
inline extern borderTopColor : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderTopColor = #2)" }
inline extern borderRightColor : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderRightColor" }
inline extern borderRightColor : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderRightColor = #2)" }
inline extern borderBottomColor : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderBottomColor" }
inline extern borderBottomColor : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderBottomColor = #2)" }
inline extern borderLeftColor : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderLeftColor" }
inline extern borderLeftColor : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderLeftColor = #2)" }
inline extern borderTopStyle : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderTopStyle" }
inline extern borderTopStyle : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderTopStyle = #2)" }
inline extern borderRightStyle : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderRightStyle" }
inline extern borderRightStyle : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderRightStyle = #2)" }
inline extern borderBottomStyle : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderBottomStyle" }
inline extern borderBottomStyle : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderBottomStyle = #2)" }
inline extern borderLeftStyle : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderLeftStyle" }
inline extern borderLeftStyle : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderLeftStyle = #2)" }
inline extern borderTopWidth : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderTopWidth" }
inline extern borderTopWidth : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderTopWidth = #2)" }
inline extern borderRightWidth : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderRightWidth" }
inline extern borderRightWidth : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderRightWidth = #2)" }
inline extern borderBottomWidth : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderBottomWidth" }
inline extern borderBottomWidth : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderBottomWidth = #2)" }
inline extern borderLeftWidth : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderLeftWidth" }
inline extern borderLeftWidth : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderLeftWidth = #2)" }
inline extern borderWidth : (this: cssStyleDeclaration) -> dom string
{ inline "#1.borderWidth" }
inline extern borderWidth : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.borderWidth = #2)" }
inline extern bottom : (this: cssStyleDeclaration) -> dom string
{ inline "#1.bottom" }
inline extern bottom : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.bottom = #2)" }
inline extern captionSide : (this: cssStyleDeclaration) -> dom string
{ inline "#1.captionSide" }
inline extern captionSide : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.captionSide = #2)" }
inline extern clear : (this: cssStyleDeclaration) -> dom string
{ inline "#1.clear" }
inline extern clear : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.clear = #2)" }
inline extern clip : (this: cssStyleDeclaration) -> dom string
{ inline "#1.clip" }
inline extern clip : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.clip = #2)" }
inline extern color : (this: cssStyleDeclaration) -> dom string
{ inline "#1.color" }
inline extern color : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.color = #2)" }
inline extern content : (this: cssStyleDeclaration) -> dom string
{ inline "#1.content" }
inline extern content : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.content = #2)" }
inline extern counterIncrement : (this: cssStyleDeclaration) -> dom string
{ inline "#1.counterIncrement" }
inline extern counterIncrement : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.counterIncrement = #2)" }
inline extern counterReset : (this: cssStyleDeclaration) -> dom string
{ inline "#1.counterReset" }
inline extern counterReset : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.counterReset = #2)" }
inline extern cue : (this: cssStyleDeclaration) -> dom string
{ inline "#1.cue" }
inline extern cue : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.cue = #2)" }
inline extern cueAfter : (this: cssStyleDeclaration) -> dom string
{ inline "#1.cueAfter" }
inline extern cueAfter : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.cueAfter = #2)" }
inline extern cueBefore : (this: cssStyleDeclaration) -> dom string
{ inline "#1.cueBefore" }
inline extern cueBefore : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.cueBefore = #2)" }
inline extern cursor : (this: cssStyleDeclaration) -> dom string
{ inline "#1.cursor" }
inline extern cursor : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.cursor = #2)" }
inline extern direction : (this: cssStyleDeclaration) -> dom string
{ inline "#1.direction" }
inline extern direction : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.direction = #2)" }
inline extern display : (this: cssStyleDeclaration) -> dom string
{ inline "#1.display" }
inline extern display : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.display = #2)" }
inline extern elevation : (this: cssStyleDeclaration) -> dom string
{ inline "#1.elevation" }
inline extern elevation : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.elevation = #2)" }
inline extern emptyCells : (this: cssStyleDeclaration) -> dom string
{ inline "#1.emptyCells" }
inline extern emptyCells : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.emptyCells = #2)" }
inline extern cssFloat : (this: cssStyleDeclaration) -> dom string
{ inline "#1.cssFloat" }
inline extern cssFloat : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.cssFloat = #2)" }
inline extern font : (this: cssStyleDeclaration) -> dom string
{ inline "#1.font" }
inline extern font : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.font = #2)" }
inline extern fontFamily : (this: cssStyleDeclaration) -> dom string
{ inline "#1.fontFamily" }
inline extern fontFamily : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.fontFamily = #2)" }
inline extern fontSize : (this: cssStyleDeclaration) -> dom string
{ inline "#1.fontSize" }
inline extern fontSize : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.fontSize = #2)" }
inline extern fontSizeAdjust : (this: cssStyleDeclaration) -> dom string
{ inline "#1.fontSizeAdjust" }
inline extern fontSizeAdjust : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.fontSizeAdjust = #2)" }
inline extern fontStretch : (this: cssStyleDeclaration) -> dom string
{ inline "#1.fontStretch" }
inline extern fontStretch : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.fontStretch = #2)" }
inline extern fontStyle : (this: cssStyleDeclaration) -> dom string
{ inline "#1.fontStyle" }
inline extern fontStyle : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.fontStyle = #2)" }
inline extern fontVariant : (this: cssStyleDeclaration) -> dom string
{ inline "#1.fontVariant" }
inline extern fontVariant : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.fontVariant = #2)" }
inline extern fontWeight : (this: cssStyleDeclaration) -> dom string
{ inline "#1.fontWeight" }
inline extern fontWeight : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.fontWeight = #2)" }
inline extern height : (this: cssStyleDeclaration) -> dom string
{ inline "#1.height" }
inline extern height : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.height = #2)" }
inline extern left : (this: cssStyleDeclaration) -> dom string
{ inline "#1.left" }
inline extern left : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.left = #2)" }
inline extern letterSpacing : (this: cssStyleDeclaration) -> dom string
{ inline "#1.letterSpacing" }
inline extern letterSpacing : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.letterSpacing = #2)" }
inline extern lineHeight : (this: cssStyleDeclaration) -> dom string
{ inline "#1.lineHeight" }
inline extern lineHeight : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.lineHeight = #2)" }
inline extern listStyle : (this: cssStyleDeclaration) -> dom string
{ inline "#1.listStyle" }
inline extern listStyle : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.listStyle = #2)" }
inline extern listStyleImage : (this: cssStyleDeclaration) -> dom string
{ inline "#1.listStyleImage" }
inline extern listStyleImage : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.listStyleImage = #2)" }
inline extern listStylePosition : (this: cssStyleDeclaration) -> dom string
{ inline "#1.listStylePosition" }
inline extern listStylePosition : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.listStylePosition = #2)" }
inline extern listStyleType : (this: cssStyleDeclaration) -> dom string
{ inline "#1.listStyleType" }
inline extern listStyleType : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.listStyleType = #2)" }
inline extern margin : (this: cssStyleDeclaration) -> dom string
{ inline "#1.margin" }
inline extern margin : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.margin = #2)" }
inline extern marginTop : (this: cssStyleDeclaration) -> dom string
{ inline "#1.marginTop" }
inline extern marginTop : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.marginTop = #2)" }
inline extern marginRight : (this: cssStyleDeclaration) -> dom string
{ inline "#1.marginRight" }
inline extern marginRight : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.marginRight = #2)" }
inline extern marginBottom : (this: cssStyleDeclaration) -> dom string
{ inline "#1.marginBottom" }
inline extern marginBottom : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.marginBottom = #2)" }
inline extern marginLeft : (this: cssStyleDeclaration) -> dom string
{ inline "#1.marginLeft" }
inline extern marginLeft : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.marginLeft = #2)" }
inline extern markerOffset : (this: cssStyleDeclaration) -> dom string
{ inline "#1.markerOffset" }
inline extern markerOffset : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.markerOffset = #2)" }
inline extern marks : (this: cssStyleDeclaration) -> dom string
{ inline "#1.marks" }
inline extern marks : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.marks = #2)" }
inline extern maxHeight : (this: cssStyleDeclaration) -> dom string
{ inline "#1.maxHeight" }
inline extern maxHeight : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.maxHeight = #2)" }
inline extern maxWidth : (this: cssStyleDeclaration) -> dom string
{ inline "#1.maxWidth" }
inline extern maxWidth : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.maxWidth = #2)" }
inline extern minHeight : (this: cssStyleDeclaration) -> dom string
{ inline "#1.minHeight" }
inline extern minHeight : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.minHeight = #2)" }
inline extern minWidth : (this: cssStyleDeclaration) -> dom string
{ inline "#1.minWidth" }
inline extern minWidth : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.minWidth = #2)" }
inline extern orphans : (this: cssStyleDeclaration) -> dom string
{ inline "#1.orphans" }
inline extern orphans : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.orphans = #2)" }
inline extern outline : (this: cssStyleDeclaration) -> dom string
{ inline "#1.outline" }
inline extern outline : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.outline = #2)" }
inline extern outlineColor : (this: cssStyleDeclaration) -> dom string
{ inline "#1.outlineColor" }
inline extern outlineColor : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.outlineColor = #2)" }
inline extern outlineStyle : (this: cssStyleDeclaration) -> dom string
{ inline "#1.outlineStyle" }
inline extern outlineStyle : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.outlineStyle = #2)" }
inline extern outlineWidth : (this: cssStyleDeclaration) -> dom string
{ inline "#1.outlineWidth" }
inline extern outlineWidth : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.outlineWidth = #2)" }
inline extern overflow : (this: cssStyleDeclaration) -> dom string
{ inline "#1.overflow" }
inline extern overflow : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.overflow = #2)" }
inline extern padding : (this: cssStyleDeclaration) -> dom string
{ inline "#1.padding" }
inline extern padding : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.padding = #2)" }
inline extern paddingTop : (this: cssStyleDeclaration) -> dom string
{ inline "#1.paddingTop" }
inline extern paddingTop : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.paddingTop = #2)" }
inline extern paddingRight : (this: cssStyleDeclaration) -> dom string
{ inline "#1.paddingRight" }
inline extern paddingRight : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.paddingRight = #2)" }
inline extern paddingBottom : (this: cssStyleDeclaration) -> dom string
{ inline "#1.paddingBottom" }
inline extern paddingBottom : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.paddingBottom = #2)" }
inline extern paddingLeft : (this: cssStyleDeclaration) -> dom string
{ inline "#1.paddingLeft" }
inline extern paddingLeft : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.paddingLeft = #2)" }
inline extern page : (this: cssStyleDeclaration) -> dom string
{ inline "#1.page" }
inline extern page : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.page = #2)" }
inline extern pageBreakAfter : (this: cssStyleDeclaration) -> dom string
{ inline "#1.pageBreakAfter" }
inline extern pageBreakAfter : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.pageBreakAfter = #2)" }
inline extern pageBreakBefore : (this: cssStyleDeclaration) -> dom string
{ inline "#1.pageBreakBefore" }
inline extern pageBreakBefore : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.pageBreakBefore = #2)" }
inline extern pageBreakInside : (this: cssStyleDeclaration) -> dom string
{ inline "#1.pageBreakInside" }
inline extern pageBreakInside : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.pageBreakInside = #2)" }
inline extern pause : (this: cssStyleDeclaration) -> dom string
{ inline "#1.pause" }
inline extern pause : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.pause = #2)" }
inline extern pauseAfter : (this: cssStyleDeclaration) -> dom string
{ inline "#1.pauseAfter" }
inline extern pauseAfter : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.pauseAfter = #2)" }
inline extern pauseBefore : (this: cssStyleDeclaration) -> dom string
{ inline "#1.pauseBefore" }
inline extern pauseBefore : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.pauseBefore = #2)" }
inline extern pitch : (this: cssStyleDeclaration) -> dom string
{ inline "#1.pitch" }
inline extern pitch : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.pitch = #2)" }
inline extern pitchRange : (this: cssStyleDeclaration) -> dom string
{ inline "#1.pitchRange" }
inline extern pitchRange : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.pitchRange = #2)" }
inline extern playDuring : (this: cssStyleDeclaration) -> dom string
{ inline "#1.playDuring" }
inline extern playDuring : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.playDuring = #2)" }
inline extern position : (this: cssStyleDeclaration) -> dom string
{ inline "#1.position" }
inline extern position : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.position = #2)" }
inline extern quotes : (this: cssStyleDeclaration) -> dom string
{ inline "#1.quotes" }
inline extern quotes : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.quotes = #2)" }
inline extern richness : (this: cssStyleDeclaration) -> dom string
{ inline "#1.richness" }
inline extern richness : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.richness = #2)" }
inline extern right : (this: cssStyleDeclaration) -> dom string
{ inline "#1.right" }
inline extern right : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.right = #2)" }
inline extern size : (this: cssStyleDeclaration) -> dom string
{ inline "#1.size" }
inline extern size : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.size = #2)" }
inline extern speak : (this: cssStyleDeclaration) -> dom string
{ inline "#1.speak" }
inline extern speak : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.speak = #2)" }
inline extern speakHeader : (this: cssStyleDeclaration) -> dom string
{ inline "#1.speakHeader" }
inline extern speakHeader : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.speakHeader = #2)" }
inline extern speakNumeral : (this: cssStyleDeclaration) -> dom string
{ inline "#1.speakNumeral" }
inline extern speakNumeral : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.speakNumeral = #2)" }
inline extern speakPunctuation : (this: cssStyleDeclaration) -> dom string
{ inline "#1.speakPunctuation" }
inline extern speakPunctuation : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.speakPunctuation = #2)" }
inline extern speechRate : (this: cssStyleDeclaration) -> dom string
{ inline "#1.speechRate" }
inline extern speechRate : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.speechRate = #2)" }
inline extern stress : (this: cssStyleDeclaration) -> dom string
{ inline "#1.stress" }
inline extern stress : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.stress = #2)" }
inline extern tableLayout : (this: cssStyleDeclaration) -> dom string
{ inline "#1.tableLayout" }
inline extern tableLayout : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.tableLayout = #2)" }
inline extern textAlign : (this: cssStyleDeclaration) -> dom string
{ inline "#1.textAlign" }
inline extern textAlign : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.textAlign = #2)" }
inline extern textDecoration : (this: cssStyleDeclaration) -> dom string
{ inline "#1.textDecoration" }
inline extern textDecoration : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.textDecoration = #2)" }
inline extern textIndent : (this: cssStyleDeclaration) -> dom string
{ inline "#1.textIndent" }
inline extern textIndent : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.textIndent = #2)" }
inline extern textShadow : (this: cssStyleDeclaration) -> dom string
{ inline "#1.textShadow" }
inline extern textShadow : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.textShadow = #2)" }
inline extern textTransform : (this: cssStyleDeclaration) -> dom string
{ inline "#1.textTransform" }
inline extern textTransform : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.textTransform = #2)" }
inline extern top : (this: cssStyleDeclaration) -> dom string
{ inline "#1.top" }
inline extern top : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.top = #2)" }
inline extern unicodeBidi : (this: cssStyleDeclaration) -> dom string
{ inline "#1.unicodeBidi" }
inline extern unicodeBidi : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.unicodeBidi = #2)" }
inline extern verticalAlign : (this: cssStyleDeclaration) -> dom string
{ inline "#1.verticalAlign" }
inline extern verticalAlign : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.verticalAlign = #2)" }
inline extern visibility : (this: cssStyleDeclaration) -> dom string
{ inline "#1.visibility" }
inline extern visibility : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.visibility = #2)" }
inline extern voiceFamily : (this: cssStyleDeclaration) -> dom string
{ inline "#1.voiceFamily" }
inline extern voiceFamily : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.voiceFamily = #2)" }
inline extern volume : (this: cssStyleDeclaration) -> dom string
{ inline "#1.volume" }
inline extern volume : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.volume = #2)" }
inline extern whiteSpace : (this: cssStyleDeclaration) -> dom string
{ inline "#1.whiteSpace" }
inline extern whiteSpace : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.whiteSpace = #2)" }
inline extern widows : (this: cssStyleDeclaration) -> dom string
{ inline "#1.widows" }
inline extern widows : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.widows = #2)" }
inline extern width : (this: cssStyleDeclaration) -> dom string
{ inline "#1.width" }
inline extern width : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.width = #2)" }
inline extern wordSpacing : (this: cssStyleDeclaration) -> dom string
{ inline "#1.wordSpacing" }
inline extern wordSpacing : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.wordSpacing = #2)" }
inline extern zIndex : (this: cssStyleDeclaration) -> dom string
{ inline "#1.zIndex" }
inline extern zIndex : (this: cssStyleDeclaration, assigned: string) -> dom ()
{ inline "(#1.zIndex = #2)" }
