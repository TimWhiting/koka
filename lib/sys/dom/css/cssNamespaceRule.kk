pub module sys/dom/css/cssNamespaceRule

// Interface CSSNamespaceRule (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeCssNamespaceRule  : forall<a> (a) -> maybe<cssNamespaceRule>
{ inline "(#1.toString()==='[object CSSNamespaceRule]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toCssNamespaceRule : forall<a> (a) -> exn cssNamespaceRule
{ inline "(#1.toString()==='[object CSSNamespaceRule]'?#1:std_core.error('toCssNamespaceRule: cast failed'))" }


// CSSNamespaceRule implements CSSNamespaceRule (supplemental)
inline extern namespaceUri : (this: cssNamespaceRule) -> dom string
{ inline "#1.namespaceURI" }
inline extern prefix_ : (this: cssNamespaceRule) -> dom string
{ inline "#1.prefix" }
// CSSNamespaceRule extends CSSRule
inline extern cssRule : (cssNamespaceRule) -> cssRule // upcasting to extended type
{ inline "#1" }
// CSSNamespaceRule implements in extension CSSRule (overloading)
inline extern type_ : (this: cssNamespaceRule) -> dom cssRuleType
{ inline "#1.type" }
inline extern cssText : (this: cssNamespaceRule) -> dom string
{ inline "#1.cssText" }
inline extern cssText : (this: cssNamespaceRule, assigned: string) -> dom ()
{ inline "(#1.cssText = #2)" }
inline extern parentRule : (this: cssNamespaceRule) -> dom cssRule
{ inline "#1.parentRule" }
inline extern parentStyleSheet : (this: cssNamespaceRule) -> dom cssStyleSheet
{ inline "#1.parentStyleSheet" }
