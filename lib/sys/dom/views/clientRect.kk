pub module sys/dom/views/clientRect

// Interface ClientRect (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeClientRect  : forall<a> (a) -> maybe<clientRect>
{ inline "(#1.toString()==='[object ClientRect]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toClientRect : forall<a> (a) -> exn clientRect
{ inline "(#1.toString()==='[object ClientRect]'?#1:std_core.error('toClientRect: cast failed'))" }


// ClientRect implements ClientRect (supplemental)
inline extern top : (this: clientRect) -> dom float32
{ inline "#1.top" }
inline extern right : (this: clientRect) -> dom float32
{ inline "#1.right" }
inline extern bottom : (this: clientRect) -> dom float32
{ inline "#1.bottom" }
inline extern left : (this: clientRect) -> dom float32
{ inline "#1.left" }
inline extern width : (this: clientRect) -> dom float32
{ inline "#1.width" }
inline extern height : (this: clientRect) -> dom float32
{ inline "#1.height" }
