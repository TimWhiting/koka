pub module sys/dom/byteArray

// Interface ByteArray (generated by esidl 0.2.0).

import sys/dom/types

/* safe and unsafe conversion from all types including `any */
inline extern maybeByteArray  : forall<a> (a) -> maybe<byteArray>
{ inline "(#1.toString()==='[object ByteArray]'?std_core.Just(#1):std_core.Nothing)" }
inline extern toByteArray : forall<a> (a) -> exn byteArray
{ inline "(#1.toString()==='[object ByteArray]'?#1:std_core.error('toByteArray: cast failed'))" }


// ByteArray implements ByteArray (supplemental)
inline extern length : (this: byteArray) -> dom uint32
{ inline "#1.length" }
inline extern length : (this: byteArray, assigned: uint32) -> dom ()
{ inline "(#1.length = #2)" }
inline extern getElement : (this: byteArray, index: uint32) -> dom byte
{ inline "#1.getElement(#2)" }

inline extern setElement : (this: byteArray, index: uint32, value: byte) -> dom ()
{ inline "#1.setElement(#2, #3)" }

