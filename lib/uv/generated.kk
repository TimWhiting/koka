// Copyright (c) 2024, the Koka authors. All rights reserved. 
// Use of this source code is governed by a
// MIT-style license that can be found in the LICENSE file.

// AUTO GENERATED FILE, DO NOT EDIT.
// 
// Generated by `ffigen`.

import std/core/cextern
import std/num/int32
import std/num/int64
import std/num/float64

extern import
  c { vcpkg="libuv"; library="uv" }
  wasm {}

extern import
  c header-file "inline/uv.h"

pub extern external/uv-version(): int32
  c inline "(unsigned int)uv_version()"
  wasm inline "0"

pub inline fun ffi/uv-version(): <> int
  external/uv-version().int

pub extern external/uv-version-string(): c-pointer<int>
  c inline "(intptr_t)uv_version_string()"
  wasm inline "0"

pub extern external/uv-library-shutdown(): ()
  c inline "(void)uv_library_shutdown()"
  wasm inline "kk_Unit"

pub extern external/uv-replace-allocator(^malloc-func: c-pointer<intptr_t>, ^realloc-func: c-pointer<intptr_t>, ^calloc-func: c-pointer<intptr_t>, ^free-func: c-pointer<intptr_t>): int32
  c inline "(int)uv_replace_allocator((uv_malloc_func)#1, (uv_realloc_func)#2, (uv_calloc_func)#3, (uv_free_func)#4)"
  wasm inline "0"

pub inline fun ffi/uv-replace-allocator(^malloc-func: uv-malloc-func, ^realloc-func: uv-realloc-func, ^calloc-func: uv-calloc-func, ^free-func: uv-free-func): <> int
  external/uv-replace-allocator(malloc-func, realloc-func, calloc-func, free-func).int

pub extern external/uv-default-loop(): c-pointer<uv-loop-s-c>
  c inline "(intptr_t)uv_default_loop()"
  wasm inline "0"

pub extern external/uv-loop-init(^loop: c-pointer<uv-loop-s-c>): int32
  c inline "(int)uv_loop_init((uv_loop_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-loop-init(^loop: c-pointer<uv-loop-s-c>): <> int
  external/uv-loop-init(loop).int

pub extern external/uv-loop-close(^loop: c-pointer<uv-loop-s-c>): int32
  c inline "(int)uv_loop_close((uv_loop_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-loop-close(^loop: c-pointer<uv-loop-s-c>): <> int
  external/uv-loop-close(loop).int

pub extern external/uv-loop-new(): c-pointer<uv-loop-s-c>
  c inline "(intptr_t)uv_loop_new()"
  wasm inline "0"

pub extern external/uv-loop-delete(^arg0: c-pointer<uv-loop-s-c>): ()
  c inline "(void)uv_loop_delete((uv_loop_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-loop-size(): ssize_t
  c inline "(size_t)uv_loop_size()"
  wasm inline "0"

pub inline fun ffi/uv-loop-size(): <> int
  external/uv-loop-size().int

pub extern external/uv-loop-alive(^loop: c-pointer<uv-loop-s-c>): int32
  c inline "(int)uv_loop_alive((uv_loop_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-loop-alive(^loop: c-pointer<uv-loop-s-c>): <> int
  external/uv-loop-alive(loop).int

pub extern external/uv-loop-configure(^loop: c-pointer<uv-loop-s-c>, ^option: int32): int32
  c inline "(int)uv_loop_configure((uv_loop_t*)#1, (int32_t)#2)"
  wasm inline "0"

pub inline fun ffi/uv-loop-configure(^loop: c-pointer<uv-loop-s-c>, ^option: uv-loop-option-enum): <exn> int
  external/uv-loop-configure(loop, option.uv-loop-option-enum/int).int

pub extern external/uv-loop-fork(^loop: c-pointer<uv-loop-s-c>): int32
  c inline "(int)uv_loop_fork((uv_loop_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-loop-fork(^loop: c-pointer<uv-loop-s-c>): <> int
  external/uv-loop-fork(loop).int

pub extern external/uv-run(^arg0: c-pointer<uv-loop-s-c>, ^mode: int32): int32
  c inline "(int)uv_run((uv_loop_t*)#1, (int32_t)#2)"
  wasm inline "0"

pub inline fun ffi/uv-run(^arg0: c-pointer<uv-loop-s-c>, ^mode: uv-run-mode-enum): <exn> int
  external/uv-run(arg0, mode.uv-run-mode-enum/int).int

pub extern external/uv-stop(^arg0: c-pointer<uv-loop-s-c>): ()
  c inline "(void)uv_stop((uv_loop_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-ref(^arg0: c-pointer<uv-handle-s-c>): ()
  c inline "(void)uv_ref((uv_handle_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-unref(^arg0: c-pointer<uv-handle-s-c>): ()
  c inline "(void)uv_unref((uv_handle_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-has-ref(^arg0: c-pointer<uv-handle-s-c>): int32
  c inline "(int)uv_has_ref((uv_handle_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-has-ref(^arg0: c-pointer<uv-handle-s-c>): <> int
  external/uv-has-ref(arg0).int

pub extern external/uv-update-time(^arg0: c-pointer<uv-loop-s-c>): ()
  c inline "(void)uv_update_time((uv_loop_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-now(^arg0: c-pointer<uv-loop-s-c>): int64
  c inline "(int64_t)uv_now((uv_loop_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-now(^arg0: c-pointer<uv-loop-s-c>): <> int
  external/uv-now(arg0).int

pub extern external/uv-backend-fd(^arg0: c-pointer<uv-loop-s-c>): int32
  c inline "(int)uv_backend_fd((uv_loop_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-backend-fd(^arg0: c-pointer<uv-loop-s-c>): <> int
  external/uv-backend-fd(arg0).int

pub extern external/uv-backend-timeout(^arg0: c-pointer<uv-loop-s-c>): int32
  c inline "(int)uv_backend_timeout((uv_loop_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-backend-timeout(^arg0: c-pointer<uv-loop-s-c>): <> int
  external/uv-backend-timeout(arg0).int

pub extern external/uv-translate-sys-error(^sys-errno: int32): int32
  c inline "(int)uv_translate_sys_error((int)#1)"
  wasm inline "0"

pub inline fun ffi/uv-translate-sys-error(^sys-errno: int): <> int
  external/uv-translate-sys-error(sys-errno.int32).int

pub extern external/uv-strerror(^err: int32): c-pointer<int>
  c inline "(intptr_t)uv_strerror((int)#1)"
  wasm inline "0"

pub inline fun ffi/uv-strerror(^err: int): <> c-pointer<int>
  external/uv-strerror(err.int32)

pub extern external/uv-strerror-r(^err: int32, ^buf: c-pointer<int>, ^buflen: ssize_t): c-pointer<int>
  c inline "(intptr_t)uv_strerror_r((int)#1, (char*)#2, (size_t)#3)"
  wasm inline "0"

pub inline fun ffi/uv-strerror-r(^err: int, ^buf: c-pointer<int>, ^buflen: int): <> c-pointer<int>
  external/uv-strerror-r(err.int32, buf, buflen.ssize_t)

pub extern external/uv-err-name(^err: int32): c-pointer<int>
  c inline "(intptr_t)uv_err_name((int)#1)"
  wasm inline "0"

pub inline fun ffi/uv-err-name(^err: int): <> c-pointer<int>
  external/uv-err-name(err.int32)

pub extern external/uv-err-name-r(^err: int32, ^buf: c-pointer<int>, ^buflen: ssize_t): c-pointer<int>
  c inline "(intptr_t)uv_err_name_r((int)#1, (char*)#2, (size_t)#3)"
  wasm inline "0"

pub inline fun ffi/uv-err-name-r(^err: int, ^buf: c-pointer<int>, ^buflen: int): <> c-pointer<int>
  external/uv-err-name-r(err.int32, buf, buflen.ssize_t)

pub extern external/uv-shutdown(^req: c-pointer<uv-shutdown-s-c>, ^handle1: c-pointer<uv-stream-s-c>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_shutdown((uv_shutdown_t*)#1, (uv_stream_t*)#2, (uv_shutdown_cb)#3)"
  wasm inline "0"

pub inline fun ffi/uv-shutdown(^req: c-pointer<uv-shutdown-s-c>, ^handle1: c-pointer<uv-stream-s-c>, ^cb: uv-shutdown-cb): <> int
  external/uv-shutdown(req, handle1, cb).int

pub extern external/uv-handle-size(^type1: int32): ssize_t
  c inline "(size_t)uv_handle_size((int32_t)#1)"
  wasm inline "0"

pub inline fun ffi/uv-handle-size(^type1: uv-handle-type-enum): <exn> int
  external/uv-handle-size(type1.uv-handle-type-enum/int).int

pub extern external/uv-handle-get-type(^handle1: c-pointer<uv-handle-s-c>): int32
  c inline "(int32_t)uv_handle_get_type((uv_handle_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-handle-get-type(^handle1: c-pointer<uv-handle-s-c>): <exn> uv-handle-type-enum
  external/uv-handle-get-type(handle1).int/uv-handle-type-enum

pub extern external/uv-handle-type-name(^type1: int32): c-pointer<int>
  c inline "(intptr_t)uv_handle_type_name((int32_t)#1)"
  wasm inline "0"

pub inline fun ffi/uv-handle-type-name(^type1: uv-handle-type-enum): <exn> c-pointer<int>
  external/uv-handle-type-name(type1.uv-handle-type-enum/int)

pub extern external/uv-handle-get-data(^handle1: c-pointer<uv-handle-s-c>): c-pointer<()>
  c inline "(intptr_t)uv_handle_get_data((uv_handle_t*)#1)"
  wasm inline "0"

pub extern external/uv-handle-get-loop(^handle1: c-pointer<uv-handle-s-c>): c-pointer<uv-loop-s-c>
  c inline "(intptr_t)uv_handle_get_loop((uv_handle_t*)#1)"
  wasm inline "0"

pub extern external/uv-handle-set-data(^handle1: c-pointer<uv-handle-s-c>, ^data: c-pointer<()>): ()
  c inline "(void)uv_handle_set_data((uv_handle_t*)#1, (void*)#2)"
  wasm inline "kk_Unit"

pub extern external/uv-req-size(^type1: int32): ssize_t
  c inline "(size_t)uv_req_size((int32_t)#1)"
  wasm inline "0"

pub inline fun ffi/uv-req-size(^type1: uv-req-type-enum): <exn> int
  external/uv-req-size(type1.uv-req-type-enum/int).int

pub extern external/uv-req-get-data(^req: c-pointer<uv-req-s-c>): c-pointer<()>
  c inline "(intptr_t)uv_req_get_data((uv_req_t*)#1)"
  wasm inline "0"

pub extern external/uv-req-set-data(^req: c-pointer<uv-req-s-c>, ^data: c-pointer<()>): ()
  c inline "(void)uv_req_set_data((uv_req_t*)#1, (void*)#2)"
  wasm inline "kk_Unit"

pub extern external/uv-req-get-type(^req: c-pointer<uv-req-s-c>): int32
  c inline "(int32_t)uv_req_get_type((uv_req_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-req-get-type(^req: c-pointer<uv-req-s-c>): <exn> uv-req-type-enum
  external/uv-req-get-type(req).int/uv-req-type-enum

pub extern external/uv-req-type-name(^type1: int32): c-pointer<int>
  c inline "(intptr_t)uv_req_type_name((int32_t)#1)"
  wasm inline "0"

pub inline fun ffi/uv-req-type-name(^type1: uv-req-type-enum): <exn> c-pointer<int>
  external/uv-req-type-name(type1.uv-req-type-enum/int)

pub extern external/uv-is-active(^handle1: c-pointer<uv-handle-s-c>): int32
  c inline "(int)uv_is_active((uv_handle_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-is-active(^handle1: c-pointer<uv-handle-s-c>): <> int
  external/uv-is-active(handle1).int

pub extern external/uv-walk(^loop: c-pointer<uv-loop-s-c>, ^walk-cb: c-pointer<intptr_t>, ^arg: c-pointer<()>): ()
  c inline "(void)uv_walk((uv_loop_t*)#1, (uv_walk_cb)#2, (void*)#3)"
  wasm inline "kk_Unit"

pub extern external/uv-print-all-handles(^loop: c-pointer<uv-loop-s-c>, ^stream: c-pointer<sfile-c>): ()
  c inline "(void)uv_print_all_handles((uv_loop_t*)#1, (FILE*)#2)"
  wasm inline "kk_Unit"

pub extern external/uv-print-active-handles(^loop: c-pointer<uv-loop-s-c>, ^stream: c-pointer<sfile-c>): ()
  c inline "(void)uv_print_active_handles((uv_loop_t*)#1, (FILE*)#2)"
  wasm inline "kk_Unit"

pub extern external/uv-close(^handle1: c-pointer<uv-handle-s-c>, ^close-cb: c-pointer<intptr_t>): ()
  c inline "(void)uv_close((uv_handle_t*)#1, (uv_close_cb)#2)"
  wasm inline "kk_Unit"

pub extern external/uv-send-buffer-size(^handle1: c-pointer<uv-handle-s-c>, ^value: c-pointer<int>): int32
  c inline "(int)uv_send_buffer_size((uv_handle_t*)#1, (int*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-send-buffer-size(^handle1: c-pointer<uv-handle-s-c>, ^value: c-pointer<int>): <> int
  external/uv-send-buffer-size(handle1, value).int

pub extern external/uv-recv-buffer-size(^handle1: c-pointer<uv-handle-s-c>, ^value: c-pointer<int>): int32
  c inline "(int)uv_recv_buffer_size((uv_handle_t*)#1, (int*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-recv-buffer-size(^handle1: c-pointer<uv-handle-s-c>, ^value: c-pointer<int>): <> int
  external/uv-recv-buffer-size(handle1, value).int

pub extern external/uv-fileno(^handle1: c-pointer<uv-handle-s-c>, ^fd: c-pointer<int>): int32
  c inline "(int)uv_fileno((uv_handle_t*)#1, (uv_os_fd_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-fileno(^handle1: c-pointer<uv-handle-s-c>, ^fd: c-pointer<int>): <> int
  external/uv-fileno(handle1, fd).int

pub extern external/uv-buf-init(^base: c-pointer<int>, ^len: int32): c-pointer<uv-buf-t-c>
  c inline "struct uv_buf_t* _s = kk_malloc(sizeof(struct uv_buf_t), kk_context());\n*_s = uv_buf_init((char*)#1, (unsigned int)#2);\n(intptr_t)_s"
  wasm inline "(intptr_t)0"
pub inline fun ffi/uv-buf-init(^base: c-pointer<int>, ^len: int): <> c-pointer<uv-buf-t-c>
  external/uv-buf-init(base, len.int32)

pub extern external/uv-pipe(^fds: c-pointer<int>, ^read-flags: int32, ^write-flags: int32): int32
  c inline "(int)uv_pipe((uv_file*)#1, (int)#2, (int)#3)"
  wasm inline "0"

pub inline fun ffi/uv-pipe(^fds: c-array<int>, ^read-flags: int, ^write-flags: int): <> int
  external/uv-pipe(fds.cextern/carray/ptr, read-flags.int32, write-flags.int32).int

pub extern external/uv-socketpair(^type1: int32, ^protocol: int32, ^socket-vector: c-pointer<int>, ^flags0: int32, ^flags1: int32): int32
  c inline "(int)uv_socketpair((int)#1, (int)#2, (uv_os_sock_t*)#3, (int)#4, (int)#5)"
  wasm inline "0"

pub inline fun ffi/uv-socketpair(^type1: int, ^protocol: int, ^socket-vector: c-array<int>, ^flags0: int, ^flags1: int): <> int
  external/uv-socketpair(type1.int32, protocol.int32, socket-vector.cextern/carray/ptr, flags0.int32, flags1.int32).int

pub extern external/uv-stream-get-write-queue-size(^stream: c-pointer<uv-stream-s-c>): ssize_t
  c inline "(size_t)uv_stream_get_write_queue_size((uv_stream_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-stream-get-write-queue-size(^stream: c-pointer<uv-stream-s-c>): <> int
  external/uv-stream-get-write-queue-size(stream).int

pub extern external/uv-listen(^stream: c-pointer<uv-stream-s-c>, ^backlog: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_listen((uv_stream_t*)#1, (int)#2, (uv_connection_cb)#3)"
  wasm inline "0"

pub inline fun ffi/uv-listen(^stream: c-pointer<uv-stream-s-c>, ^backlog: int, ^cb: uv-connection-cb): <> int
  external/uv-listen(stream, backlog.int32, cb).int

pub extern external/uv-accept(^server: c-pointer<uv-stream-s-c>, ^client: c-pointer<uv-stream-s-c>): int32
  c inline "(int)uv_accept((uv_stream_t*)#1, (uv_stream_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-accept(^server: c-pointer<uv-stream-s-c>, ^client: c-pointer<uv-stream-s-c>): <> int
  external/uv-accept(server, client).int

pub extern external/uv-read-start(^arg0: c-pointer<uv-stream-s-c>, ^alloc-cb: c-pointer<intptr_t>, ^read-cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_read_start((uv_stream_t*)#1, (uv_alloc_cb)#2, (uv_read_cb)#3)"
  wasm inline "0"

pub inline fun ffi/uv-read-start(^arg0: c-pointer<uv-stream-s-c>, ^alloc-cb: uv-alloc-cb, ^read-cb: uv-read-cb): <> int
  external/uv-read-start(arg0, alloc-cb, read-cb).int

pub extern external/uv-read-stop(^arg0: c-pointer<uv-stream-s-c>): int32
  c inline "(int)uv_read_stop((uv_stream_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-read-stop(^arg0: c-pointer<uv-stream-s-c>): <> int
  external/uv-read-stop(arg0).int

pub extern external/uv-write(^req: c-pointer<uv-write-s-c>, ^handle1: c-pointer<uv-stream-s-c>, ^bufs: c-pointer<uv-buf-t-c>, ^nbufs: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_write((uv_write_t*)#1, (uv_stream_t*)#2, (struct uv_buf_t*)#3, (unsigned int)#4, (uv_write_cb)#5)"
  wasm inline "0"

pub inline fun ffi/uv-write(^req: c-pointer<uv-write-s-c>, ^handle1: c-pointer<uv-stream-s-c>, ^bufs: c-array<uv-buf-t-c>, ^nbufs: int, ^cb: uv-write-cb): <> int
  external/uv-write(req, handle1, bufs.cextern/carray/ptr, nbufs.int32, cb).int

pub extern external/uv-write2(^req: c-pointer<uv-write-s-c>, ^handle1: c-pointer<uv-stream-s-c>, ^bufs: c-pointer<uv-buf-t-c>, ^nbufs: int32, ^send-handle: c-pointer<uv-stream-s-c>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_write2((uv_write_t*)#1, (uv_stream_t*)#2, (struct uv_buf_t*)#3, (unsigned int)#4, (uv_stream_t*)#5, (uv_write_cb)#6)"
  wasm inline "0"

pub inline fun ffi/uv-write2(^req: c-pointer<uv-write-s-c>, ^handle1: c-pointer<uv-stream-s-c>, ^bufs: c-array<uv-buf-t-c>, ^nbufs: int, ^send-handle: c-pointer<uv-stream-s-c>, ^cb: uv-write-cb): <> int
  external/uv-write2(req, handle1, bufs.cextern/carray/ptr, nbufs.int32, send-handle, cb).int

pub extern external/uv-try-write(^handle1: c-pointer<uv-stream-s-c>, ^bufs: c-pointer<uv-buf-t-c>, ^nbufs: int32): int32
  c inline "(int)uv_try_write((uv_stream_t*)#1, (struct uv_buf_t*)#2, (unsigned int)#3)"
  wasm inline "0"

pub inline fun ffi/uv-try-write(^handle1: c-pointer<uv-stream-s-c>, ^bufs: c-array<uv-buf-t-c>, ^nbufs: int): <> int
  external/uv-try-write(handle1, bufs.cextern/carray/ptr, nbufs.int32).int

pub extern external/uv-try-write2(^handle1: c-pointer<uv-stream-s-c>, ^bufs: c-pointer<uv-buf-t-c>, ^nbufs: int32, ^send-handle: c-pointer<uv-stream-s-c>): int32
  c inline "(int)uv_try_write2((uv_stream_t*)#1, (struct uv_buf_t*)#2, (unsigned int)#3, (uv_stream_t*)#4)"
  wasm inline "0"

pub inline fun ffi/uv-try-write2(^handle1: c-pointer<uv-stream-s-c>, ^bufs: c-array<uv-buf-t-c>, ^nbufs: int, ^send-handle: c-pointer<uv-stream-s-c>): <> int
  external/uv-try-write2(handle1, bufs.cextern/carray/ptr, nbufs.int32, send-handle).int

pub extern external/uv-is-readable(^handle1: c-pointer<uv-stream-s-c>): int32
  c inline "(int)uv_is_readable((uv_stream_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-is-readable(^handle1: c-pointer<uv-stream-s-c>): <> int
  external/uv-is-readable(handle1).int

pub extern external/uv-is-writable(^handle1: c-pointer<uv-stream-s-c>): int32
  c inline "(int)uv_is_writable((uv_stream_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-is-writable(^handle1: c-pointer<uv-stream-s-c>): <> int
  external/uv-is-writable(handle1).int

pub extern external/uv-stream-set-blocking(^handle1: c-pointer<uv-stream-s-c>, ^blocking: int32): int32
  c inline "(int)uv_stream_set_blocking((uv_stream_t*)#1, (int)#2)"
  wasm inline "0"

pub inline fun ffi/uv-stream-set-blocking(^handle1: c-pointer<uv-stream-s-c>, ^blocking: int): <> int
  external/uv-stream-set-blocking(handle1, blocking.int32).int

pub extern external/uv-is-closing(^handle1: c-pointer<uv-handle-s-c>): int32
  c inline "(int)uv_is_closing((uv_handle_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-is-closing(^handle1: c-pointer<uv-handle-s-c>): <> int
  external/uv-is-closing(handle1).int

pub extern external/uv-tcp-init(^arg0: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-tcp-s-c>): int32
  c inline "(int)uv_tcp_init((uv_loop_t*)#1, (uv_tcp_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-tcp-init(^arg0: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-tcp-s-c>): <> int
  external/uv-tcp-init(arg0, handle1).int

pub extern external/uv-tcp-init-ex(^arg0: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-tcp-s-c>, ^flags: int32): int32
  c inline "(int)uv_tcp_init_ex((uv_loop_t*)#1, (uv_tcp_t*)#2, (unsigned int)#3)"
  wasm inline "0"

pub inline fun ffi/uv-tcp-init-ex(^arg0: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-tcp-s-c>, ^flags: int): <> int
  external/uv-tcp-init-ex(arg0, handle1, flags.int32).int

pub extern external/uv-tcp-open(^handle1: c-pointer<uv-tcp-s-c>, ^sock: int32): int32
  c inline "(int)uv_tcp_open((uv_tcp_t*)#1, (uv_os_sock_t)#2)"
  wasm inline "0"

pub inline fun ffi/uv-tcp-open(^handle1: c-pointer<uv-tcp-s-c>, ^sock: int): <> int
  external/uv-tcp-open(handle1, sock.int32).int

pub extern external/uv-tcp-nodelay(^handle1: c-pointer<uv-tcp-s-c>, ^enable: int32): int32
  c inline "(int)uv_tcp_nodelay((uv_tcp_t*)#1, (int)#2)"
  wasm inline "0"

pub inline fun ffi/uv-tcp-nodelay(^handle1: c-pointer<uv-tcp-s-c>, ^enable: int): <> int
  external/uv-tcp-nodelay(handle1, enable.int32).int

pub extern external/uv-tcp-keepalive(^handle1: c-pointer<uv-tcp-s-c>, ^enable: int32, ^delay: int32): int32
  c inline "(int)uv_tcp_keepalive((uv_tcp_t*)#1, (int)#2, (unsigned int)#3)"
  wasm inline "0"

pub inline fun ffi/uv-tcp-keepalive(^handle1: c-pointer<uv-tcp-s-c>, ^enable: int, ^delay: int): <> int
  external/uv-tcp-keepalive(handle1, enable.int32, delay.int32).int

pub extern external/uv-tcp-simultaneous-accepts(^handle1: c-pointer<uv-tcp-s-c>, ^enable: int32): int32
  c inline "(int)uv_tcp_simultaneous_accepts((uv_tcp_t*)#1, (int)#2)"
  wasm inline "0"

pub inline fun ffi/uv-tcp-simultaneous-accepts(^handle1: c-pointer<uv-tcp-s-c>, ^enable: int): <> int
  external/uv-tcp-simultaneous-accepts(handle1, enable.int32).int

pub extern external/uv-tcp-bind(^handle1: c-pointer<uv-tcp-s-c>, ^addr: c-pointer<sockaddr-c>, ^flags: int32): int32
  c inline "(int)uv_tcp_bind((uv_tcp_t*)#1, (struct sockaddr*)#2, (unsigned int)#3)"
  wasm inline "0"

pub inline fun ffi/uv-tcp-bind(^handle1: c-pointer<uv-tcp-s-c>, ^addr: c-pointer<sockaddr-c>, ^flags: int): <> int
  external/uv-tcp-bind(handle1, addr, flags.int32).int

pub extern external/uv-tcp-getsockname(^handle1: c-pointer<uv-tcp-s-c>, ^name: c-pointer<sockaddr-c>, ^namelen: c-pointer<int>): int32
  c inline "(int)uv_tcp_getsockname((uv_tcp_t*)#1, (struct sockaddr*)#2, (int*)#3)"
  wasm inline "0"

pub inline fun ffi/uv-tcp-getsockname(^handle1: c-pointer<uv-tcp-s-c>, ^name: c-pointer<sockaddr-c>, ^namelen: c-pointer<int>): <> int
  external/uv-tcp-getsockname(handle1, name, namelen).int

pub extern external/uv-tcp-getpeername(^handle1: c-pointer<uv-tcp-s-c>, ^name: c-pointer<sockaddr-c>, ^namelen: c-pointer<int>): int32
  c inline "(int)uv_tcp_getpeername((uv_tcp_t*)#1, (struct sockaddr*)#2, (int*)#3)"
  wasm inline "0"

pub inline fun ffi/uv-tcp-getpeername(^handle1: c-pointer<uv-tcp-s-c>, ^name: c-pointer<sockaddr-c>, ^namelen: c-pointer<int>): <> int
  external/uv-tcp-getpeername(handle1, name, namelen).int

pub extern external/uv-tcp-close-reset(^handle1: c-pointer<uv-tcp-s-c>, ^close-cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_tcp_close_reset((uv_tcp_t*)#1, (uv_close_cb)#2)"
  wasm inline "0"

pub inline fun ffi/uv-tcp-close-reset(^handle1: c-pointer<uv-tcp-s-c>, ^close-cb: uv-close-cb): <> int
  external/uv-tcp-close-reset(handle1, close-cb).int

pub extern external/uv-tcp-connect(^req: c-pointer<uv-connect-s-c>, ^handle1: c-pointer<uv-tcp-s-c>, ^addr: c-pointer<sockaddr-c>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_tcp_connect((uv_connect_t*)#1, (uv_tcp_t*)#2, (struct sockaddr*)#3, (uv_connect_cb)#4)"
  wasm inline "0"

pub inline fun ffi/uv-tcp-connect(^req: c-pointer<uv-connect-s-c>, ^handle1: c-pointer<uv-tcp-s-c>, ^addr: c-pointer<sockaddr-c>, ^cb: uv-connect-cb): <> int
  external/uv-tcp-connect(req, handle1, addr, cb).int

pub extern external/uv-udp-init(^arg0: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-udp-s-c>): int32
  c inline "(int)uv_udp_init((uv_loop_t*)#1, (uv_udp_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-udp-init(^arg0: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-udp-s-c>): <> int
  external/uv-udp-init(arg0, handle1).int

pub extern external/uv-udp-init-ex(^arg0: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-udp-s-c>, ^flags: int32): int32
  c inline "(int)uv_udp_init_ex((uv_loop_t*)#1, (uv_udp_t*)#2, (unsigned int)#3)"
  wasm inline "0"

pub inline fun ffi/uv-udp-init-ex(^arg0: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-udp-s-c>, ^flags: int): <> int
  external/uv-udp-init-ex(arg0, handle1, flags.int32).int

pub extern external/uv-udp-open(^handle1: c-pointer<uv-udp-s-c>, ^sock: int32): int32
  c inline "(int)uv_udp_open((uv_udp_t*)#1, (uv_os_sock_t)#2)"
  wasm inline "0"

pub inline fun ffi/uv-udp-open(^handle1: c-pointer<uv-udp-s-c>, ^sock: int): <> int
  external/uv-udp-open(handle1, sock.int32).int

pub extern external/uv-udp-bind(^handle1: c-pointer<uv-udp-s-c>, ^addr: c-pointer<sockaddr-c>, ^flags: int32): int32
  c inline "(int)uv_udp_bind((uv_udp_t*)#1, (struct sockaddr*)#2, (unsigned int)#3)"
  wasm inline "0"

pub inline fun ffi/uv-udp-bind(^handle1: c-pointer<uv-udp-s-c>, ^addr: c-pointer<sockaddr-c>, ^flags: int): <> int
  external/uv-udp-bind(handle1, addr, flags.int32).int

pub extern external/uv-udp-connect(^handle1: c-pointer<uv-udp-s-c>, ^addr: c-pointer<sockaddr-c>): int32
  c inline "(int)uv_udp_connect((uv_udp_t*)#1, (struct sockaddr*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-udp-connect(^handle1: c-pointer<uv-udp-s-c>, ^addr: c-pointer<sockaddr-c>): <> int
  external/uv-udp-connect(handle1, addr).int

pub extern external/uv-udp-getpeername(^handle1: c-pointer<uv-udp-s-c>, ^name: c-pointer<sockaddr-c>, ^namelen: c-pointer<int>): int32
  c inline "(int)uv_udp_getpeername((uv_udp_t*)#1, (struct sockaddr*)#2, (int*)#3)"
  wasm inline "0"

pub inline fun ffi/uv-udp-getpeername(^handle1: c-pointer<uv-udp-s-c>, ^name: c-pointer<sockaddr-c>, ^namelen: c-pointer<int>): <> int
  external/uv-udp-getpeername(handle1, name, namelen).int

pub extern external/uv-udp-getsockname(^handle1: c-pointer<uv-udp-s-c>, ^name: c-pointer<sockaddr-c>, ^namelen: c-pointer<int>): int32
  c inline "(int)uv_udp_getsockname((uv_udp_t*)#1, (struct sockaddr*)#2, (int*)#3)"
  wasm inline "0"

pub inline fun ffi/uv-udp-getsockname(^handle1: c-pointer<uv-udp-s-c>, ^name: c-pointer<sockaddr-c>, ^namelen: c-pointer<int>): <> int
  external/uv-udp-getsockname(handle1, name, namelen).int

pub extern external/uv-udp-set-membership(^handle1: c-pointer<uv-udp-s-c>, ^multicast-addr: c-pointer<int>, ^interface-addr: c-pointer<int>, ^membership: int32): int32
  c inline "(int)uv_udp_set_membership((uv_udp_t*)#1, (char*)#2, (char*)#3, (int32_t)#4)"
  wasm inline "0"

pub inline fun ffi/uv-udp-set-membership(^handle1: c-pointer<uv-udp-s-c>, ^multicast-addr: c-pointer<int>, ^interface-addr: c-pointer<int>, ^membership: uv-membership-enum): <exn> int
  external/uv-udp-set-membership(handle1, multicast-addr, interface-addr, membership.uv-membership-enum/int).int

pub extern external/uv-udp-set-source-membership(^handle1: c-pointer<uv-udp-s-c>, ^multicast-addr: c-pointer<int>, ^interface-addr: c-pointer<int>, ^source-addr: c-pointer<int>, ^membership: int32): int32
  c inline "(int)uv_udp_set_source_membership((uv_udp_t*)#1, (char*)#2, (char*)#3, (char*)#4, (int32_t)#5)"
  wasm inline "0"

pub inline fun ffi/uv-udp-set-source-membership(^handle1: c-pointer<uv-udp-s-c>, ^multicast-addr: c-pointer<int>, ^interface-addr: c-pointer<int>, ^source-addr: c-pointer<int>, ^membership: uv-membership-enum): <exn> int
  external/uv-udp-set-source-membership(handle1, multicast-addr, interface-addr, source-addr, membership.uv-membership-enum/int).int

pub extern external/uv-udp-set-multicast-loop(^handle1: c-pointer<uv-udp-s-c>, ^on1: int32): int32
  c inline "(int)uv_udp_set_multicast_loop((uv_udp_t*)#1, (int)#2)"
  wasm inline "0"

pub inline fun ffi/uv-udp-set-multicast-loop(^handle1: c-pointer<uv-udp-s-c>, ^on1: int): <> int
  external/uv-udp-set-multicast-loop(handle1, on1.int32).int

pub extern external/uv-udp-set-multicast-ttl(^handle1: c-pointer<uv-udp-s-c>, ^ttl: int32): int32
  c inline "(int)uv_udp_set_multicast_ttl((uv_udp_t*)#1, (int)#2)"
  wasm inline "0"

pub inline fun ffi/uv-udp-set-multicast-ttl(^handle1: c-pointer<uv-udp-s-c>, ^ttl: int): <> int
  external/uv-udp-set-multicast-ttl(handle1, ttl.int32).int

pub extern external/uv-udp-set-multicast-interface(^handle1: c-pointer<uv-udp-s-c>, ^interface-addr: c-pointer<int>): int32
  c inline "(int)uv_udp_set_multicast_interface((uv_udp_t*)#1, (char*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-udp-set-multicast-interface(^handle1: c-pointer<uv-udp-s-c>, ^interface-addr: c-pointer<int>): <> int
  external/uv-udp-set-multicast-interface(handle1, interface-addr).int

pub extern external/uv-udp-set-broadcast(^handle1: c-pointer<uv-udp-s-c>, ^on1: int32): int32
  c inline "(int)uv_udp_set_broadcast((uv_udp_t*)#1, (int)#2)"
  wasm inline "0"

pub inline fun ffi/uv-udp-set-broadcast(^handle1: c-pointer<uv-udp-s-c>, ^on1: int): <> int
  external/uv-udp-set-broadcast(handle1, on1.int32).int

pub extern external/uv-udp-set-ttl(^handle1: c-pointer<uv-udp-s-c>, ^ttl: int32): int32
  c inline "(int)uv_udp_set_ttl((uv_udp_t*)#1, (int)#2)"
  wasm inline "0"

pub inline fun ffi/uv-udp-set-ttl(^handle1: c-pointer<uv-udp-s-c>, ^ttl: int): <> int
  external/uv-udp-set-ttl(handle1, ttl.int32).int

pub extern external/uv-udp-send(^req: c-pointer<uv-udp-send-s-c>, ^handle1: c-pointer<uv-udp-s-c>, ^bufs: c-pointer<uv-buf-t-c>, ^nbufs: int32, ^addr: c-pointer<sockaddr-c>, ^send-cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_udp_send((uv_udp_send_t*)#1, (uv_udp_t*)#2, (struct uv_buf_t*)#3, (unsigned int)#4, (struct sockaddr*)#5, (uv_udp_send_cb)#6)"
  wasm inline "0"

pub inline fun ffi/uv-udp-send(^req: c-pointer<uv-udp-send-s-c>, ^handle1: c-pointer<uv-udp-s-c>, ^bufs: c-array<uv-buf-t-c>, ^nbufs: int, ^addr: c-pointer<sockaddr-c>, ^send-cb: uv-udp-send-cb): <> int
  external/uv-udp-send(req, handle1, bufs.cextern/carray/ptr, nbufs.int32, addr, send-cb).int

pub extern external/uv-udp-try-send(^handle1: c-pointer<uv-udp-s-c>, ^bufs: c-pointer<uv-buf-t-c>, ^nbufs: int32, ^addr: c-pointer<sockaddr-c>): int32
  c inline "(int)uv_udp_try_send((uv_udp_t*)#1, (struct uv_buf_t*)#2, (unsigned int)#3, (struct sockaddr*)#4)"
  wasm inline "0"

pub inline fun ffi/uv-udp-try-send(^handle1: c-pointer<uv-udp-s-c>, ^bufs: c-array<uv-buf-t-c>, ^nbufs: int, ^addr: c-pointer<sockaddr-c>): <> int
  external/uv-udp-try-send(handle1, bufs.cextern/carray/ptr, nbufs.int32, addr).int

pub extern external/uv-udp-recv-start(^handle1: c-pointer<uv-udp-s-c>, ^alloc-cb: c-pointer<intptr_t>, ^recv-cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_udp_recv_start((uv_udp_t*)#1, (uv_alloc_cb)#2, (uv_udp_recv_cb)#3)"
  wasm inline "0"

pub inline fun ffi/uv-udp-recv-start(^handle1: c-pointer<uv-udp-s-c>, ^alloc-cb: uv-alloc-cb, ^recv-cb: uv-udp-recv-cb): <> int
  external/uv-udp-recv-start(handle1, alloc-cb, recv-cb).int

pub extern external/uv-udp-using-recvmmsg(^handle1: c-pointer<uv-udp-s-c>): int32
  c inline "(int)uv_udp_using_recvmmsg((uv_udp_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-udp-using-recvmmsg(^handle1: c-pointer<uv-udp-s-c>): <> int
  external/uv-udp-using-recvmmsg(handle1).int

pub extern external/uv-udp-recv-stop(^handle1: c-pointer<uv-udp-s-c>): int32
  c inline "(int)uv_udp_recv_stop((uv_udp_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-udp-recv-stop(^handle1: c-pointer<uv-udp-s-c>): <> int
  external/uv-udp-recv-stop(handle1).int

pub extern external/uv-udp-get-send-queue-size(^handle1: c-pointer<uv-udp-s-c>): ssize_t
  c inline "(size_t)uv_udp_get_send_queue_size((uv_udp_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-udp-get-send-queue-size(^handle1: c-pointer<uv-udp-s-c>): <> int
  external/uv-udp-get-send-queue-size(handle1).int

pub extern external/uv-udp-get-send-queue-count(^handle1: c-pointer<uv-udp-s-c>): ssize_t
  c inline "(size_t)uv_udp_get_send_queue_count((uv_udp_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-udp-get-send-queue-count(^handle1: c-pointer<uv-udp-s-c>): <> int
  external/uv-udp-get-send-queue-count(handle1).int

pub extern external/uv-tty-init(^arg0: c-pointer<uv-loop-s-c>, ^arg1: c-pointer<uv-tty-s-c>, ^fd: int32, ^readable: int32): int32
  c inline "(int)uv_tty_init((uv_loop_t*)#1, (uv_tty_t*)#2, (uv_file)#3, (int)#4)"
  wasm inline "0"

pub inline fun ffi/uv-tty-init(^arg0: c-pointer<uv-loop-s-c>, ^arg1: c-pointer<uv-tty-s-c>, ^fd: int, ^readable: int): <> int
  external/uv-tty-init(arg0, arg1, fd.int32, readable.int32).int

pub extern external/uv-tty-set-mode(^arg0: c-pointer<uv-tty-s-c>, ^mode: int32): int32
  c inline "(int)uv_tty_set_mode((uv_tty_t*)#1, (int32_t)#2)"
  wasm inline "0"

pub inline fun ffi/uv-tty-set-mode(^arg0: c-pointer<uv-tty-s-c>, ^mode: uv-tty-mode-t-enum): <exn> int
  external/uv-tty-set-mode(arg0, mode.uv-tty-mode-t-enum/int).int

pub extern external/uv-tty-reset-mode(): int32
  c inline "(int)uv_tty_reset_mode()"
  wasm inline "0"

pub inline fun ffi/uv-tty-reset-mode(): <> int
  external/uv-tty-reset-mode().int

pub extern external/uv-tty-get-winsize(^arg0: c-pointer<uv-tty-s-c>, ^width: c-pointer<int>, ^height: c-pointer<int>): int32
  c inline "(int)uv_tty_get_winsize((uv_tty_t*)#1, (int*)#2, (int*)#3)"
  wasm inline "0"

pub inline fun ffi/uv-tty-get-winsize(^arg0: c-pointer<uv-tty-s-c>, ^width: c-pointer<int>, ^height: c-pointer<int>): <> int
  external/uv-tty-get-winsize(arg0, width, height).int

pub extern external/uv-tty-set-vterm-state(^state: int32): ()
  c inline "(void)uv_tty_set_vterm_state((int32_t)#1)"
  wasm inline "kk_Unit"

pub inline fun ffi/uv-tty-set-vterm-state(^state: uv-tty-vtermstate-t-enum): <exn> ()
  external/uv-tty-set-vterm-state(state.uv-tty-vtermstate-t-enum/int)

pub extern external/uv-tty-get-vterm-state(^state: c-pointer<uv-tty-vtermstate-t-enum>): int32
  c inline "(int)uv_tty_get_vterm_state((int32_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-tty-get-vterm-state(^state: c-pointer<uv-tty-vtermstate-t-enum>): <> int
  external/uv-tty-get-vterm-state(state).int

pub extern external/uv-guess-handle(^file: int32): int32
  c inline "(int32_t)uv_guess_handle((uv_file)#1)"
  wasm inline "0"

pub inline fun ffi/uv-guess-handle(^file: int): <exn> uv-handle-type-enum
  external/uv-guess-handle(file.int32).int/uv-handle-type-enum

pub extern external/uv-pipe-init(^arg0: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-pipe-s-c>, ^ipc: int32): int32
  c inline "(int)uv_pipe_init((uv_loop_t*)#1, (uv_pipe_t*)#2, (int)#3)"
  wasm inline "0"

pub inline fun ffi/uv-pipe-init(^arg0: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-pipe-s-c>, ^ipc: int): <> int
  external/uv-pipe-init(arg0, handle1, ipc.int32).int

pub extern external/uv-pipe-open(^arg0: c-pointer<uv-pipe-s-c>, ^file: int32): int32
  c inline "(int)uv_pipe_open((uv_pipe_t*)#1, (uv_file)#2)"
  wasm inline "0"

pub inline fun ffi/uv-pipe-open(^arg0: c-pointer<uv-pipe-s-c>, ^file: int): <> int
  external/uv-pipe-open(arg0, file.int32).int

pub extern external/uv-pipe-bind(^handle1: c-pointer<uv-pipe-s-c>, ^name: c-pointer<int>): int32
  c inline "(int)uv_pipe_bind((uv_pipe_t*)#1, (char*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-pipe-bind(^handle1: c-pointer<uv-pipe-s-c>, ^name: c-pointer<int>): <> int
  external/uv-pipe-bind(handle1, name).int

pub extern external/uv-pipe-bind2(^handle1: c-pointer<uv-pipe-s-c>, ^name: c-pointer<int>, ^namelen: ssize_t, ^flags: int32): int32
  c inline "(int)uv_pipe_bind2((uv_pipe_t*)#1, (char*)#2, (size_t)#3, (unsigned int)#4)"
  wasm inline "0"

pub inline fun ffi/uv-pipe-bind2(^handle1: c-pointer<uv-pipe-s-c>, ^name: c-pointer<int>, ^namelen: int, ^flags: int): <> int
  external/uv-pipe-bind2(handle1, name, namelen.ssize_t, flags.int32).int

pub extern external/uv-pipe-connect(^req: c-pointer<uv-connect-s-c>, ^handle1: c-pointer<uv-pipe-s-c>, ^name: c-pointer<int>, ^cb: c-pointer<intptr_t>): ()
  c inline "(void)uv_pipe_connect((uv_connect_t*)#1, (uv_pipe_t*)#2, (char*)#3, (uv_connect_cb)#4)"
  wasm inline "kk_Unit"

pub extern external/uv-pipe-connect2(^req: c-pointer<uv-connect-s-c>, ^handle1: c-pointer<uv-pipe-s-c>, ^name: c-pointer<int>, ^namelen: ssize_t, ^flags: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_pipe_connect2((uv_connect_t*)#1, (uv_pipe_t*)#2, (char*)#3, (size_t)#4, (unsigned int)#5, (uv_connect_cb)#6)"
  wasm inline "0"

pub inline fun ffi/uv-pipe-connect2(^req: c-pointer<uv-connect-s-c>, ^handle1: c-pointer<uv-pipe-s-c>, ^name: c-pointer<int>, ^namelen: int, ^flags: int, ^cb: uv-connect-cb): <> int
  external/uv-pipe-connect2(req, handle1, name, namelen.ssize_t, flags.int32, cb).int

pub extern external/uv-pipe-getsockname(^handle1: c-pointer<uv-pipe-s-c>, ^buffer: c-pointer<int>, ^size: c-pointer<int>): int32
  c inline "(int)uv_pipe_getsockname((uv_pipe_t*)#1, (char*)#2, (size_t*)#3)"
  wasm inline "0"

pub inline fun ffi/uv-pipe-getsockname(^handle1: c-pointer<uv-pipe-s-c>, ^buffer: c-pointer<int>, ^size: c-pointer<int>): <> int
  external/uv-pipe-getsockname(handle1, buffer, size).int

pub extern external/uv-pipe-getpeername(^handle1: c-pointer<uv-pipe-s-c>, ^buffer: c-pointer<int>, ^size: c-pointer<int>): int32
  c inline "(int)uv_pipe_getpeername((uv_pipe_t*)#1, (char*)#2, (size_t*)#3)"
  wasm inline "0"

pub inline fun ffi/uv-pipe-getpeername(^handle1: c-pointer<uv-pipe-s-c>, ^buffer: c-pointer<int>, ^size: c-pointer<int>): <> int
  external/uv-pipe-getpeername(handle1, buffer, size).int

pub extern external/uv-pipe-pending-instances(^handle1: c-pointer<uv-pipe-s-c>, ^count: int32): ()
  c inline "(void)uv_pipe_pending_instances((uv_pipe_t*)#1, (int)#2)"
  wasm inline "kk_Unit"

pub inline fun ffi/uv-pipe-pending-instances(^handle1: c-pointer<uv-pipe-s-c>, ^count: int): <> ()
  external/uv-pipe-pending-instances(handle1, count.int32)

pub extern external/uv-pipe-pending-count(^handle1: c-pointer<uv-pipe-s-c>): int32
  c inline "(int)uv_pipe_pending_count((uv_pipe_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-pipe-pending-count(^handle1: c-pointer<uv-pipe-s-c>): <> int
  external/uv-pipe-pending-count(handle1).int

pub extern external/uv-pipe-pending-type(^handle1: c-pointer<uv-pipe-s-c>): int32
  c inline "(int32_t)uv_pipe_pending_type((uv_pipe_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-pipe-pending-type(^handle1: c-pointer<uv-pipe-s-c>): <exn> uv-handle-type-enum
  external/uv-pipe-pending-type(handle1).int/uv-handle-type-enum

pub extern external/uv-pipe-chmod(^handle1: c-pointer<uv-pipe-s-c>, ^flags: int32): int32
  c inline "(int)uv_pipe_chmod((uv_pipe_t*)#1, (int)#2)"
  wasm inline "0"

pub inline fun ffi/uv-pipe-chmod(^handle1: c-pointer<uv-pipe-s-c>, ^flags: int): <> int
  external/uv-pipe-chmod(handle1, flags.int32).int

pub extern external/uv-poll-init(^loop: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-poll-s-c>, ^fd: int32): int32
  c inline "(int)uv_poll_init((uv_loop_t*)#1, (uv_poll_t*)#2, (int)#3)"
  wasm inline "0"

pub inline fun ffi/uv-poll-init(^loop: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-poll-s-c>, ^fd: int): <> int
  external/uv-poll-init(loop, handle1, fd.int32).int

pub extern external/uv-poll-init-socket(^loop: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-poll-s-c>, ^socket: int32): int32
  c inline "(int)uv_poll_init_socket((uv_loop_t*)#1, (uv_poll_t*)#2, (uv_os_sock_t)#3)"
  wasm inline "0"

pub inline fun ffi/uv-poll-init-socket(^loop: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-poll-s-c>, ^socket: int): <> int
  external/uv-poll-init-socket(loop, handle1, socket.int32).int

pub extern external/uv-poll-start(^handle1: c-pointer<uv-poll-s-c>, ^events: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_poll_start((uv_poll_t*)#1, (int)#2, (uv_poll_cb)#3)"
  wasm inline "0"

pub inline fun ffi/uv-poll-start(^handle1: c-pointer<uv-poll-s-c>, ^events: int, ^cb: uv-poll-cb): <> int
  external/uv-poll-start(handle1, events.int32, cb).int

pub extern external/uv-poll-stop(^handle1: c-pointer<uv-poll-s-c>): int32
  c inline "(int)uv_poll_stop((uv_poll_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-poll-stop(^handle1: c-pointer<uv-poll-s-c>): <> int
  external/uv-poll-stop(handle1).int

pub extern external/uv-prepare-init(^arg0: c-pointer<uv-loop-s-c>, ^prepare: c-pointer<uv-prepare-s-c>): int32
  c inline "(int)uv_prepare_init((uv_loop_t*)#1, (uv_prepare_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-prepare-init(^arg0: c-pointer<uv-loop-s-c>, ^prepare: c-pointer<uv-prepare-s-c>): <> int
  external/uv-prepare-init(arg0, prepare).int

pub extern external/uv-prepare-start(^prepare: c-pointer<uv-prepare-s-c>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_prepare_start((uv_prepare_t*)#1, (uv_prepare_cb)#2)"
  wasm inline "0"

pub inline fun ffi/uv-prepare-start(^prepare: c-pointer<uv-prepare-s-c>, ^cb: uv-prepare-cb): <> int
  external/uv-prepare-start(prepare, cb).int

pub extern external/uv-prepare-stop(^prepare: c-pointer<uv-prepare-s-c>): int32
  c inline "(int)uv_prepare_stop((uv_prepare_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-prepare-stop(^prepare: c-pointer<uv-prepare-s-c>): <> int
  external/uv-prepare-stop(prepare).int

pub extern external/uv-check-init(^arg0: c-pointer<uv-loop-s-c>, ^check: c-pointer<uv-check-s-c>): int32
  c inline "(int)uv_check_init((uv_loop_t*)#1, (uv_check_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-check-init(^arg0: c-pointer<uv-loop-s-c>, ^check: c-pointer<uv-check-s-c>): <> int
  external/uv-check-init(arg0, check).int

pub extern external/uv-check-start(^check: c-pointer<uv-check-s-c>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_check_start((uv_check_t*)#1, (uv_check_cb)#2)"
  wasm inline "0"

pub inline fun ffi/uv-check-start(^check: c-pointer<uv-check-s-c>, ^cb: uv-check-cb): <> int
  external/uv-check-start(check, cb).int

pub extern external/uv-check-stop(^check: c-pointer<uv-check-s-c>): int32
  c inline "(int)uv_check_stop((uv_check_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-check-stop(^check: c-pointer<uv-check-s-c>): <> int
  external/uv-check-stop(check).int

pub extern external/uv-idle-init(^arg0: c-pointer<uv-loop-s-c>, ^idle: c-pointer<uv-idle-s-c>): int32
  c inline "(int)uv_idle_init((uv_loop_t*)#1, (uv_idle_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-idle-init(^arg0: c-pointer<uv-loop-s-c>, ^idle: c-pointer<uv-idle-s-c>): <> int
  external/uv-idle-init(arg0, idle).int

pub extern external/uv-idle-start(^idle: c-pointer<uv-idle-s-c>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_idle_start((uv_idle_t*)#1, (uv_idle_cb)#2)"
  wasm inline "0"

pub inline fun ffi/uv-idle-start(^idle: c-pointer<uv-idle-s-c>, ^cb: uv-idle-cb): <> int
  external/uv-idle-start(idle, cb).int

pub extern external/uv-idle-stop(^idle: c-pointer<uv-idle-s-c>): int32
  c inline "(int)uv_idle_stop((uv_idle_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-idle-stop(^idle: c-pointer<uv-idle-s-c>): <> int
  external/uv-idle-stop(idle).int

pub extern external/uv-async-init(^arg0: c-pointer<uv-loop-s-c>, ^async1: c-pointer<uv-async-s-c>, ^async-cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_async_init((uv_loop_t*)#1, (uv_async_t*)#2, (uv_async_cb)#3)"
  wasm inline "0"

pub inline fun ffi/uv-async-init(^arg0: c-pointer<uv-loop-s-c>, ^async1: c-pointer<uv-async-s-c>, ^async-cb: uv-async-cb): <> int
  external/uv-async-init(arg0, async1, async-cb).int

pub extern external/uv-async-send(^async1: c-pointer<uv-async-s-c>): int32
  c inline "(int)uv_async_send((uv_async_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-async-send(^async1: c-pointer<uv-async-s-c>): <> int
  external/uv-async-send(async1).int

pub extern external/uv-timer-init(^arg0: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-timer-s-c>): int32
  c inline "(int)uv_timer_init((uv_loop_t*)#1, (uv_timer_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-timer-init(^arg0: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-timer-s-c>): <> int
  external/uv-timer-init(arg0, handle1).int

pub extern external/uv-timer-start(^handle1: c-pointer<uv-timer-s-c>, ^cb: c-pointer<intptr_t>, ^timeout: int64, ^repeat: int64): int32
  c inline "(int)uv_timer_start((uv_timer_t*)#1, (uv_timer_cb)#2, (int64_t)#3, (int64_t)#4)"
  wasm inline "0"

pub inline fun ffi/uv-timer-start(^handle1: c-pointer<uv-timer-s-c>, ^cb: uv-timer-cb, ^timeout: int, ^repeat: int): <> int
  external/uv-timer-start(handle1, cb, timeout.int64, repeat.int64).int

pub extern external/uv-timer-stop(^handle1: c-pointer<uv-timer-s-c>): int32
  c inline "(int)uv_timer_stop((uv_timer_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-timer-stop(^handle1: c-pointer<uv-timer-s-c>): <> int
  external/uv-timer-stop(handle1).int

pub extern external/uv-timer-again(^handle1: c-pointer<uv-timer-s-c>): int32
  c inline "(int)uv_timer_again((uv_timer_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-timer-again(^handle1: c-pointer<uv-timer-s-c>): <> int
  external/uv-timer-again(handle1).int

pub extern external/uv-timer-set-repeat(^handle1: c-pointer<uv-timer-s-c>, ^repeat: int64): ()
  c inline "(void)uv_timer_set_repeat((uv_timer_t*)#1, (int64_t)#2)"
  wasm inline "kk_Unit"

pub inline fun ffi/uv-timer-set-repeat(^handle1: c-pointer<uv-timer-s-c>, ^repeat: int): <> ()
  external/uv-timer-set-repeat(handle1, repeat.int64)

pub extern external/uv-timer-get-repeat(^handle1: c-pointer<uv-timer-s-c>): int64
  c inline "(int64_t)uv_timer_get_repeat((uv_timer_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-timer-get-repeat(^handle1: c-pointer<uv-timer-s-c>): <> int
  external/uv-timer-get-repeat(handle1).int

pub extern external/uv-timer-get-due-in(^handle1: c-pointer<uv-timer-s-c>): int64
  c inline "(int64_t)uv_timer_get_due_in((uv_timer_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-timer-get-due-in(^handle1: c-pointer<uv-timer-s-c>): <> int
  external/uv-timer-get-due-in(handle1).int

pub extern external/uv-getaddrinfo(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-getaddrinfo-s-c>, ^getaddrinfo-cb: c-pointer<intptr_t>, ^node: c-pointer<int>, ^service: c-pointer<int>, ^hints: c-pointer<addrinfo-c>): int32
  c inline "(int)uv_getaddrinfo((uv_loop_t*)#1, (uv_getaddrinfo_t*)#2, (uv_getaddrinfo_cb)#3, (char*)#4, (char*)#5, (struct addrinfo*)#6)"
  wasm inline "0"

pub inline fun ffi/uv-getaddrinfo(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-getaddrinfo-s-c>, ^getaddrinfo-cb: uv-getaddrinfo-cb, ^node: c-pointer<int>, ^service: c-pointer<int>, ^hints: c-pointer<addrinfo-c>): <> int
  external/uv-getaddrinfo(loop, req, getaddrinfo-cb, node, service, hints).int

pub extern external/uv-freeaddrinfo(^ai: c-pointer<addrinfo-c>): ()
  c inline "(void)uv_freeaddrinfo((struct addrinfo*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-getnameinfo(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-getnameinfo-s-c>, ^getnameinfo-cb: c-pointer<intptr_t>, ^addr: c-pointer<sockaddr-c>, ^flags: int32): int32
  c inline "(int)uv_getnameinfo((uv_loop_t*)#1, (uv_getnameinfo_t*)#2, (uv_getnameinfo_cb)#3, (struct sockaddr*)#4, (int)#5)"
  wasm inline "0"

pub inline fun ffi/uv-getnameinfo(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-getnameinfo-s-c>, ^getnameinfo-cb: uv-getnameinfo-cb, ^addr: c-pointer<sockaddr-c>, ^flags: int): <> int
  external/uv-getnameinfo(loop, req, getnameinfo-cb, addr, flags.int32).int

pub extern external/uv-spawn(^loop: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-process-s-c>, ^options: c-pointer<uv-process-options-s-c>): int32
  c inline "(int)uv_spawn((uv_loop_t*)#1, (uv_process_t*)#2, (uv_process_options_t*)#3)"
  wasm inline "0"

pub inline fun ffi/uv-spawn(^loop: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-process-s-c>, ^options: c-pointer<uv-process-options-s-c>): <> int
  external/uv-spawn(loop, handle1, options).int

pub extern external/uv-process-kill(^arg0: c-pointer<uv-process-s-c>, ^signum: int32): int32
  c inline "(int)uv_process_kill((uv_process_t*)#1, (int)#2)"
  wasm inline "0"

pub inline fun ffi/uv-process-kill(^arg0: c-pointer<uv-process-s-c>, ^signum: int): <> int
  external/uv-process-kill(arg0, signum.int32).int

pub extern external/uv-kill(^pid: int32, ^signum: int32): int32
  c inline "(int)uv_kill((int)#1, (int)#2)"
  wasm inline "0"

pub inline fun ffi/uv-kill(^pid: int, ^signum: int): <> int
  external/uv-kill(pid.int32, signum.int32).int

pub extern external/uv-process-get-pid(^arg0: c-pointer<uv-process-s-c>): int32
  c inline "(uv_pid_t)uv_process_get_pid((uv_process_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-process-get-pid(^arg0: c-pointer<uv-process-s-c>): <> int
  external/uv-process-get-pid(arg0).int

pub extern external/uv-queue-work(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-work-s-c>, ^work-cb: c-pointer<intptr_t>, ^after-work-cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_queue_work((uv_loop_t*)#1, (uv_work_t*)#2, (uv_work_cb)#3, (uv_after_work_cb)#4)"
  wasm inline "0"

pub inline fun ffi/uv-queue-work(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-work-s-c>, ^work-cb: uv-work-cb, ^after-work-cb: uv-after-work-cb): <> int
  external/uv-queue-work(loop, req, work-cb, after-work-cb).int

pub extern external/uv-cancel(^req: c-pointer<uv-req-s-c>): int32
  c inline "(int)uv_cancel((uv_req_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-cancel(^req: c-pointer<uv-req-s-c>): <> int
  external/uv-cancel(req).int

pub extern external/uv-setup-args(^argc: int32, ^argv: c-pointer<c-pointer<int>>): c-pointer<c-pointer<int>>
  c inline "(intptr_t)uv_setup_args((int)#1, (char**)#2)"
  wasm inline "0"

pub inline fun ffi/uv-setup-args(^argc: int, ^argv: c-pointer<c-pointer<int>>): <> c-pointer<c-pointer<int>>
  external/uv-setup-args(argc.int32, argv)

pub extern external/uv-get-process-title(^buffer: c-pointer<int>, ^size: ssize_t): int32
  c inline "(int)uv_get_process_title((char*)#1, (size_t)#2)"
  wasm inline "0"

pub inline fun ffi/uv-get-process-title(^buffer: c-pointer<int>, ^size: int): <> int
  external/uv-get-process-title(buffer, size.ssize_t).int

pub extern external/uv-set-process-title(^title: c-pointer<int>): int32
  c inline "(int)uv_set_process_title((char*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-set-process-title(^title: c-pointer<int>): <> int
  external/uv-set-process-title(title).int

pub extern external/uv-resident-set-memory(^rss: c-pointer<int>): int32
  c inline "(int)uv_resident_set_memory((size_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-resident-set-memory(^rss: c-pointer<int>): <> int
  external/uv-resident-set-memory(rss).int

pub extern external/uv-uptime(^uptime: c-pointer<float64>): int32
  c inline "(int)uv_uptime((double*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-uptime(^uptime: c-pointer<float64>): <> int
  external/uv-uptime(uptime).int

pub extern external/uv-get-osfhandle(^fd: int32): int32
  c inline "(uv_os_fd_t)uv_get_osfhandle((int)#1)"
  wasm inline "0"

pub inline fun ffi/uv-get-osfhandle(^fd: int): <> int
  external/uv-get-osfhandle(fd.int32).int

pub extern external/uv-open-osfhandle(^os-fd: int32): int32
  c inline "(int)uv_open_osfhandle((uv_os_fd_t)#1)"
  wasm inline "0"

pub inline fun ffi/uv-open-osfhandle(^os-fd: int): <> int
  external/uv-open-osfhandle(os-fd.int32).int

pub extern external/uv-getrusage(^rusage: c-pointer<uv-rusage-t-c>): int32
  c inline "(int)uv_getrusage((uv_rusage_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-getrusage(^rusage: c-pointer<uv-rusage-t-c>): <> int
  external/uv-getrusage(rusage).int

pub extern external/uv-os-homedir(^buffer: c-pointer<int>, ^size: c-pointer<int>): int32
  c inline "(int)uv_os_homedir((char*)#1, (size_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-os-homedir(^buffer: c-pointer<int>, ^size: c-pointer<int>): <> int
  external/uv-os-homedir(buffer, size).int

pub extern external/uv-os-tmpdir(^buffer: c-pointer<int>, ^size: c-pointer<int>): int32
  c inline "(int)uv_os_tmpdir((char*)#1, (size_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-os-tmpdir(^buffer: c-pointer<int>, ^size: c-pointer<int>): <> int
  external/uv-os-tmpdir(buffer, size).int

pub extern external/uv-os-get-passwd(^pwd: c-pointer<uv-passwd-s-c>): int32
  c inline "(int)uv_os_get_passwd((uv_passwd_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-os-get-passwd(^pwd: c-pointer<uv-passwd-s-c>): <> int
  external/uv-os-get-passwd(pwd).int

pub extern external/uv-os-free-passwd(^pwd: c-pointer<uv-passwd-s-c>): ()
  c inline "(void)uv_os_free_passwd((uv_passwd_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-os-get-passwd2(^pwd: c-pointer<uv-passwd-s-c>, ^uid: int32): int32
  c inline "(int)uv_os_get_passwd2((uv_passwd_t*)#1, (uv_uid_t)#2)"
  wasm inline "0"

pub inline fun ffi/uv-os-get-passwd2(^pwd: c-pointer<uv-passwd-s-c>, ^uid: int): <> int
  external/uv-os-get-passwd2(pwd, uid.int32).int

pub extern external/uv-os-get-group(^grp: c-pointer<uv-group-s-c>, ^gid: int32): int32
  c inline "(int)uv_os_get_group((uv_group_t*)#1, (uv_uid_t)#2)"
  wasm inline "0"

pub inline fun ffi/uv-os-get-group(^grp: c-pointer<uv-group-s-c>, ^gid: int): <> int
  external/uv-os-get-group(grp, gid.int32).int

pub extern external/uv-os-free-group(^grp: c-pointer<uv-group-s-c>): ()
  c inline "(void)uv_os_free_group((uv_group_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-os-getpid(): int32
  c inline "(uv_pid_t)uv_os_getpid()"
  wasm inline "0"

pub inline fun ffi/uv-os-getpid(): <> int
  external/uv-os-getpid().int

pub extern external/uv-os-getppid(): int32
  c inline "(uv_pid_t)uv_os_getppid()"
  wasm inline "0"

pub inline fun ffi/uv-os-getppid(): <> int
  external/uv-os-getppid().int

pub extern external/uv-os-getpriority(^pid: int32, ^priority: c-pointer<int>): int32
  c inline "(int)uv_os_getpriority((uv_pid_t)#1, (int*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-os-getpriority(^pid: int, ^priority: c-pointer<int>): <> int
  external/uv-os-getpriority(pid.int32, priority).int

pub extern external/uv-os-setpriority(^pid: int32, ^priority: int32): int32
  c inline "(int)uv_os_setpriority((uv_pid_t)#1, (int)#2)"
  wasm inline "0"

pub inline fun ffi/uv-os-setpriority(^pid: int, ^priority: int): <> int
  external/uv-os-setpriority(pid.int32, priority.int32).int

pub extern external/uv-available-parallelism(): int32
  c inline "(unsigned int)uv_available_parallelism()"
  wasm inline "0"

pub inline fun ffi/uv-available-parallelism(): <> int
  external/uv-available-parallelism().int

pub extern external/uv-cpu-info(^cpu-infos: c-pointer<c-pointer<uv-cpu-info-s-c>>, ^count: c-pointer<int>): int32
  c inline "(int)uv_cpu_info((uv_cpu_info_t**)#1, (int*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-cpu-info(^cpu-infos: c-pointer<c-pointer<uv-cpu-info-s-c>>, ^count: c-pointer<int>): <> int
  external/uv-cpu-info(cpu-infos, count).int

pub extern external/uv-free-cpu-info(^cpu-infos: c-pointer<uv-cpu-info-s-c>, ^count: int32): ()
  c inline "(void)uv_free_cpu_info((uv_cpu_info_t*)#1, (int)#2)"
  wasm inline "kk_Unit"

pub inline fun ffi/uv-free-cpu-info(^cpu-infos: c-pointer<uv-cpu-info-s-c>, ^count: int): <> ()
  external/uv-free-cpu-info(cpu-infos, count.int32)

pub extern external/uv-cpumask-size(): int32
  c inline "(int)uv_cpumask_size()"
  wasm inline "0"

pub inline fun ffi/uv-cpumask-size(): <> int
  external/uv-cpumask-size().int

pub extern external/uv-interface-addresses(^addresses: c-pointer<c-pointer<uv-interface-address-s-c>>, ^count: c-pointer<int>): int32
  c inline "(int)uv_interface_addresses((uv_interface_address_t**)#1, (int*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-interface-addresses(^addresses: c-pointer<c-pointer<uv-interface-address-s-c>>, ^count: c-pointer<int>): <> int
  external/uv-interface-addresses(addresses, count).int

pub extern external/uv-free-interface-addresses(^addresses: c-pointer<uv-interface-address-s-c>, ^count: int32): ()
  c inline "(void)uv_free_interface_addresses((uv_interface_address_t*)#1, (int)#2)"
  wasm inline "kk_Unit"

pub inline fun ffi/uv-free-interface-addresses(^addresses: c-pointer<uv-interface-address-s-c>, ^count: int): <> ()
  external/uv-free-interface-addresses(addresses, count.int32)

pub extern external/uv-os-environ(^envitems: c-pointer<c-pointer<uv-env-item-s-c>>, ^count: c-pointer<int>): int32
  c inline "(int)uv_os_environ((uv_env_item_t**)#1, (int*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-os-environ(^envitems: c-pointer<c-pointer<uv-env-item-s-c>>, ^count: c-pointer<int>): <> int
  external/uv-os-environ(envitems, count).int

pub extern external/uv-os-free-environ(^envitems: c-pointer<uv-env-item-s-c>, ^count: int32): ()
  c inline "(void)uv_os_free_environ((uv_env_item_t*)#1, (int)#2)"
  wasm inline "kk_Unit"

pub inline fun ffi/uv-os-free-environ(^envitems: c-pointer<uv-env-item-s-c>, ^count: int): <> ()
  external/uv-os-free-environ(envitems, count.int32)

pub extern external/uv-os-getenv(^name: c-pointer<int>, ^buffer: c-pointer<int>, ^size: c-pointer<int>): int32
  c inline "(int)uv_os_getenv((char*)#1, (char*)#2, (size_t*)#3)"
  wasm inline "0"

pub inline fun ffi/uv-os-getenv(^name: c-pointer<int>, ^buffer: c-pointer<int>, ^size: c-pointer<int>): <> int
  external/uv-os-getenv(name, buffer, size).int

pub extern external/uv-os-setenv(^name: c-pointer<int>, ^value: c-pointer<int>): int32
  c inline "(int)uv_os_setenv((char*)#1, (char*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-os-setenv(^name: c-pointer<int>, ^value: c-pointer<int>): <> int
  external/uv-os-setenv(name, value).int

pub extern external/uv-os-unsetenv(^name: c-pointer<int>): int32
  c inline "(int)uv_os_unsetenv((char*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-os-unsetenv(^name: c-pointer<int>): <> int
  external/uv-os-unsetenv(name).int

pub extern external/uv-os-gethostname(^buffer: c-pointer<int>, ^size: c-pointer<int>): int32
  c inline "(int)uv_os_gethostname((char*)#1, (size_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-os-gethostname(^buffer: c-pointer<int>, ^size: c-pointer<int>): <> int
  external/uv-os-gethostname(buffer, size).int

pub extern external/uv-os-uname(^buffer: c-pointer<uv-utsname-s-c>): int32
  c inline "(int)uv_os_uname((uv_utsname_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-os-uname(^buffer: c-pointer<uv-utsname-s-c>): <> int
  external/uv-os-uname(buffer).int

pub extern external/uv-metrics-info(^loop: c-pointer<uv-loop-s-c>, ^metrics: c-pointer<uv-metrics-s-c>): int32
  c inline "(int)uv_metrics_info((uv_loop_t*)#1, (uv_metrics_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-metrics-info(^loop: c-pointer<uv-loop-s-c>, ^metrics: c-pointer<uv-metrics-s-c>): <> int
  external/uv-metrics-info(loop, metrics).int

pub extern external/uv-metrics-idle-time(^loop: c-pointer<uv-loop-s-c>): int64
  c inline "(int64_t)uv_metrics_idle_time((uv_loop_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-metrics-idle-time(^loop: c-pointer<uv-loop-s-c>): <> int
  external/uv-metrics-idle-time(loop).int

pub extern external/uv-fs-get-type(^arg0: c-pointer<uv-fs-s-c>): int32
  c inline "(int32_t)uv_fs_get_type((uv_fs_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-fs-get-type(^arg0: c-pointer<uv-fs-s-c>): <exn> uv-fs-type-enum
  external/uv-fs-get-type(arg0).int/uv-fs-type-enum

pub extern external/uv-fs-get-result(^arg0: c-pointer<uv-fs-s-c>): ssize_t
  c inline "(ssize_t)uv_fs_get_result((uv_fs_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-fs-get-result(^arg0: c-pointer<uv-fs-s-c>): <> int
  external/uv-fs-get-result(arg0).int

pub extern external/uv-fs-get-system-error(^arg0: c-pointer<uv-fs-s-c>): int32
  c inline "(int)uv_fs_get_system_error((uv_fs_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-fs-get-system-error(^arg0: c-pointer<uv-fs-s-c>): <> int
  external/uv-fs-get-system-error(arg0).int

pub extern external/uv-fs-get-ptr(^arg0: c-pointer<uv-fs-s-c>): c-pointer<()>
  c inline "(intptr_t)uv_fs_get_ptr((uv_fs_t*)#1)"
  wasm inline "0"

pub extern external/uv-fs-get-path(^arg0: c-pointer<uv-fs-s-c>): c-pointer<int>
  c inline "(intptr_t)uv_fs_get_path((uv_fs_t*)#1)"
  wasm inline "0"

pub extern external/uv-fs-get-statbuf(^arg0: c-pointer<uv-fs-s-c>): c-pointer<uv-stat-t-c>
  c inline "(intptr_t)uv_fs_get_statbuf((uv_fs_t*)#1)"
  wasm inline "0"

pub extern external/uv-fs-req-cleanup(^req: c-pointer<uv-fs-s-c>): ()
  c inline "(void)uv_fs_req_cleanup((uv_fs_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-fs-close(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_close((uv_loop_t*)#1, (uv_fs_t*)#2, (uv_file)#3, (uv_fs_cb)#4)"
  wasm inline "0"

pub inline fun ffi/uv-fs-close(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-close(loop, req, file.int32, cb).int

pub extern external/uv-fs-open(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^flags: int32, ^mode: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_open((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (int)#4, (int)#5, (uv_fs_cb)#6)"
  wasm inline "0"

pub inline fun ffi/uv-fs-open(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^flags: int, ^mode: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-open(loop, req, path, flags.int32, mode.int32, cb).int

pub extern external/uv-fs-read(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int32, ^bufs: c-pointer<uv-buf-t-c>, ^nbufs: int32, ^offset: int64, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_read((uv_loop_t*)#1, (uv_fs_t*)#2, (uv_file)#3, (struct uv_buf_t*)#4, (unsigned int)#5, (int64_t)#6, (uv_fs_cb)#7)"
  wasm inline "0"

pub inline fun ffi/uv-fs-read(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int, ^bufs: c-array<uv-buf-t-c>, ^nbufs: int, ^offset: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-read(loop, req, file.int32, bufs.cextern/carray/ptr, nbufs.int32, offset.int64, cb).int

pub extern external/uv-fs-unlink(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_unlink((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (uv_fs_cb)#4)"
  wasm inline "0"

pub inline fun ffi/uv-fs-unlink(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^cb: uv-fs-cb): <> int
  external/uv-fs-unlink(loop, req, path, cb).int

pub extern external/uv-fs-write(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int32, ^bufs: c-pointer<uv-buf-t-c>, ^nbufs: int32, ^offset: int64, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_write((uv_loop_t*)#1, (uv_fs_t*)#2, (uv_file)#3, (struct uv_buf_t*)#4, (unsigned int)#5, (int64_t)#6, (uv_fs_cb)#7)"
  wasm inline "0"

pub inline fun ffi/uv-fs-write(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int, ^bufs: c-array<uv-buf-t-c>, ^nbufs: int, ^offset: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-write(loop, req, file.int32, bufs.cextern/carray/ptr, nbufs.int32, offset.int64, cb).int

pub extern external/uv-fs-copyfile(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^new-path: c-pointer<int>, ^flags: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_copyfile((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (char*)#4, (int)#5, (uv_fs_cb)#6)"
  wasm inline "0"

pub inline fun ffi/uv-fs-copyfile(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^new-path: c-pointer<int>, ^flags: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-copyfile(loop, req, path, new-path, flags.int32, cb).int

pub extern external/uv-fs-mkdir(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^mode: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_mkdir((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (int)#4, (uv_fs_cb)#5)"
  wasm inline "0"

pub inline fun ffi/uv-fs-mkdir(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^mode: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-mkdir(loop, req, path, mode.int32, cb).int

pub extern external/uv-fs-mkdtemp(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^tpl: c-pointer<int>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_mkdtemp((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (uv_fs_cb)#4)"
  wasm inline "0"

pub inline fun ffi/uv-fs-mkdtemp(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^tpl: c-pointer<int>, ^cb: uv-fs-cb): <> int
  external/uv-fs-mkdtemp(loop, req, tpl, cb).int

pub extern external/uv-fs-mkstemp(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^tpl: c-pointer<int>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_mkstemp((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (uv_fs_cb)#4)"
  wasm inline "0"

pub inline fun ffi/uv-fs-mkstemp(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^tpl: c-pointer<int>, ^cb: uv-fs-cb): <> int
  external/uv-fs-mkstemp(loop, req, tpl, cb).int

pub extern external/uv-fs-rmdir(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_rmdir((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (uv_fs_cb)#4)"
  wasm inline "0"

pub inline fun ffi/uv-fs-rmdir(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^cb: uv-fs-cb): <> int
  external/uv-fs-rmdir(loop, req, path, cb).int

pub extern external/uv-fs-scandir(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^flags: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_scandir((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (int)#4, (uv_fs_cb)#5)"
  wasm inline "0"

pub inline fun ffi/uv-fs-scandir(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^flags: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-scandir(loop, req, path, flags.int32, cb).int

pub extern external/uv-fs-scandir-next(^req: c-pointer<uv-fs-s-c>, ^ent: c-pointer<uv-dirent-s-c>): int32
  c inline "(int)uv_fs_scandir_next((uv_fs_t*)#1, (uv_dirent_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-fs-scandir-next(^req: c-pointer<uv-fs-s-c>, ^ent: c-pointer<uv-dirent-s-c>): <> int
  external/uv-fs-scandir-next(req, ent).int

pub extern external/uv-fs-opendir(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_opendir((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (uv_fs_cb)#4)"
  wasm inline "0"

pub inline fun ffi/uv-fs-opendir(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^cb: uv-fs-cb): <> int
  external/uv-fs-opendir(loop, req, path, cb).int

pub extern external/uv-fs-readdir(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^dir: c-pointer<uv-dir-s-c>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_readdir((uv_loop_t*)#1, (uv_fs_t*)#2, (uv_dir_t*)#3, (uv_fs_cb)#4)"
  wasm inline "0"

pub inline fun ffi/uv-fs-readdir(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^dir: c-pointer<uv-dir-s-c>, ^cb: uv-fs-cb): <> int
  external/uv-fs-readdir(loop, req, dir, cb).int

pub extern external/uv-fs-closedir(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^dir: c-pointer<uv-dir-s-c>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_closedir((uv_loop_t*)#1, (uv_fs_t*)#2, (uv_dir_t*)#3, (uv_fs_cb)#4)"
  wasm inline "0"

pub inline fun ffi/uv-fs-closedir(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^dir: c-pointer<uv-dir-s-c>, ^cb: uv-fs-cb): <> int
  external/uv-fs-closedir(loop, req, dir, cb).int

pub extern external/uv-fs-stat(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_stat((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (uv_fs_cb)#4)"
  wasm inline "0"

pub inline fun ffi/uv-fs-stat(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^cb: uv-fs-cb): <> int
  external/uv-fs-stat(loop, req, path, cb).int

pub extern external/uv-fs-fstat(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_fstat((uv_loop_t*)#1, (uv_fs_t*)#2, (uv_file)#3, (uv_fs_cb)#4)"
  wasm inline "0"

pub inline fun ffi/uv-fs-fstat(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-fstat(loop, req, file.int32, cb).int

pub extern external/uv-fs-rename(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^new-path: c-pointer<int>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_rename((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (char*)#4, (uv_fs_cb)#5)"
  wasm inline "0"

pub inline fun ffi/uv-fs-rename(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^new-path: c-pointer<int>, ^cb: uv-fs-cb): <> int
  external/uv-fs-rename(loop, req, path, new-path, cb).int

pub extern external/uv-fs-fsync(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_fsync((uv_loop_t*)#1, (uv_fs_t*)#2, (uv_file)#3, (uv_fs_cb)#4)"
  wasm inline "0"

pub inline fun ffi/uv-fs-fsync(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-fsync(loop, req, file.int32, cb).int

pub extern external/uv-fs-fdatasync(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_fdatasync((uv_loop_t*)#1, (uv_fs_t*)#2, (uv_file)#3, (uv_fs_cb)#4)"
  wasm inline "0"

pub inline fun ffi/uv-fs-fdatasync(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-fdatasync(loop, req, file.int32, cb).int

pub extern external/uv-fs-ftruncate(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int32, ^offset: int64, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_ftruncate((uv_loop_t*)#1, (uv_fs_t*)#2, (uv_file)#3, (int64_t)#4, (uv_fs_cb)#5)"
  wasm inline "0"

pub inline fun ffi/uv-fs-ftruncate(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int, ^offset: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-ftruncate(loop, req, file.int32, offset.int64, cb).int

pub extern external/uv-fs-sendfile(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^out-fd: int32, ^in-fd: int32, ^in-offset: int64, ^length: ssize_t, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_sendfile((uv_loop_t*)#1, (uv_fs_t*)#2, (uv_file)#3, (uv_file)#4, (int64_t)#5, (size_t)#6, (uv_fs_cb)#7)"
  wasm inline "0"

pub inline fun ffi/uv-fs-sendfile(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^out-fd: int, ^in-fd: int, ^in-offset: int, ^length: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-sendfile(loop, req, out-fd.int32, in-fd.int32, in-offset.int64, length.ssize_t, cb).int

pub extern external/uv-fs-access(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^mode: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_access((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (int)#4, (uv_fs_cb)#5)"
  wasm inline "0"

pub inline fun ffi/uv-fs-access(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^mode: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-access(loop, req, path, mode.int32, cb).int

pub extern external/uv-fs-chmod(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^mode: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_chmod((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (int)#4, (uv_fs_cb)#5)"
  wasm inline "0"

pub inline fun ffi/uv-fs-chmod(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^mode: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-chmod(loop, req, path, mode.int32, cb).int

pub extern external/uv-fs-utime(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^atime: float64, ^mtime: float64, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_utime((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (double)#4, (double)#5, (uv_fs_cb)#6)"
  wasm inline "0"

pub inline fun ffi/uv-fs-utime(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^atime: float64, ^mtime: float64, ^cb: uv-fs-cb): <> int
  external/uv-fs-utime(loop, req, path, atime, mtime, cb).int

pub extern external/uv-fs-futime(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int32, ^atime: float64, ^mtime: float64, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_futime((uv_loop_t*)#1, (uv_fs_t*)#2, (uv_file)#3, (double)#4, (double)#5, (uv_fs_cb)#6)"
  wasm inline "0"

pub inline fun ffi/uv-fs-futime(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int, ^atime: float64, ^mtime: float64, ^cb: uv-fs-cb): <> int
  external/uv-fs-futime(loop, req, file.int32, atime, mtime, cb).int

pub extern external/uv-fs-lutime(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^atime: float64, ^mtime: float64, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_lutime((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (double)#4, (double)#5, (uv_fs_cb)#6)"
  wasm inline "0"

pub inline fun ffi/uv-fs-lutime(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^atime: float64, ^mtime: float64, ^cb: uv-fs-cb): <> int
  external/uv-fs-lutime(loop, req, path, atime, mtime, cb).int

pub extern external/uv-fs-lstat(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_lstat((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (uv_fs_cb)#4)"
  wasm inline "0"

pub inline fun ffi/uv-fs-lstat(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^cb: uv-fs-cb): <> int
  external/uv-fs-lstat(loop, req, path, cb).int

pub extern external/uv-fs-link(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^new-path: c-pointer<int>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_link((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (char*)#4, (uv_fs_cb)#5)"
  wasm inline "0"

pub inline fun ffi/uv-fs-link(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^new-path: c-pointer<int>, ^cb: uv-fs-cb): <> int
  external/uv-fs-link(loop, req, path, new-path, cb).int

pub extern external/uv-fs-symlink(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^new-path: c-pointer<int>, ^flags: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_symlink((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (char*)#4, (int)#5, (uv_fs_cb)#6)"
  wasm inline "0"

pub inline fun ffi/uv-fs-symlink(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^new-path: c-pointer<int>, ^flags: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-symlink(loop, req, path, new-path, flags.int32, cb).int

pub extern external/uv-fs-readlink(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_readlink((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (uv_fs_cb)#4)"
  wasm inline "0"

pub inline fun ffi/uv-fs-readlink(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^cb: uv-fs-cb): <> int
  external/uv-fs-readlink(loop, req, path, cb).int

pub extern external/uv-fs-realpath(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_realpath((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (uv_fs_cb)#4)"
  wasm inline "0"

pub inline fun ffi/uv-fs-realpath(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^cb: uv-fs-cb): <> int
  external/uv-fs-realpath(loop, req, path, cb).int

pub extern external/uv-fs-fchmod(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int32, ^mode: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_fchmod((uv_loop_t*)#1, (uv_fs_t*)#2, (uv_file)#3, (int)#4, (uv_fs_cb)#5)"
  wasm inline "0"

pub inline fun ffi/uv-fs-fchmod(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int, ^mode: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-fchmod(loop, req, file.int32, mode.int32, cb).int

pub extern external/uv-fs-chown(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^uid: int32, ^gid: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_chown((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (uv_uid_t)#4, (uv_gid_t)#5, (uv_fs_cb)#6)"
  wasm inline "0"

pub inline fun ffi/uv-fs-chown(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^uid: int, ^gid: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-chown(loop, req, path, uid.int32, gid.int32, cb).int

pub extern external/uv-fs-fchown(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int32, ^uid: int32, ^gid: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_fchown((uv_loop_t*)#1, (uv_fs_t*)#2, (uv_file)#3, (uv_uid_t)#4, (uv_gid_t)#5, (uv_fs_cb)#6)"
  wasm inline "0"

pub inline fun ffi/uv-fs-fchown(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^file: int, ^uid: int, ^gid: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-fchown(loop, req, file.int32, uid.int32, gid.int32, cb).int

pub extern external/uv-fs-lchown(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^uid: int32, ^gid: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_lchown((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (uv_uid_t)#4, (uv_gid_t)#5, (uv_fs_cb)#6)"
  wasm inline "0"

pub inline fun ffi/uv-fs-lchown(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^uid: int, ^gid: int, ^cb: uv-fs-cb): <> int
  external/uv-fs-lchown(loop, req, path, uid.int32, gid.int32, cb).int

pub extern external/uv-fs-statfs(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_fs_statfs((uv_loop_t*)#1, (uv_fs_t*)#2, (char*)#3, (uv_fs_cb)#4)"
  wasm inline "0"

pub inline fun ffi/uv-fs-statfs(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-fs-s-c>, ^path: c-pointer<int>, ^cb: uv-fs-cb): <> int
  external/uv-fs-statfs(loop, req, path, cb).int

pub extern external/uv-fs-poll-init(^loop: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-fs-poll-s-c>): int32
  c inline "(int)uv_fs_poll_init((uv_loop_t*)#1, (uv_fs_poll_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-fs-poll-init(^loop: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-fs-poll-s-c>): <> int
  external/uv-fs-poll-init(loop, handle1).int

pub extern external/uv-fs-poll-start(^handle1: c-pointer<uv-fs-poll-s-c>, ^poll-cb: c-pointer<intptr_t>, ^path: c-pointer<int>, ^interval: int32): int32
  c inline "(int)uv_fs_poll_start((uv_fs_poll_t*)#1, (uv_fs_poll_cb)#2, (char*)#3, (unsigned int)#4)"
  wasm inline "0"

pub inline fun ffi/uv-fs-poll-start(^handle1: c-pointer<uv-fs-poll-s-c>, ^poll-cb: uv-fs-poll-cb, ^path: c-pointer<int>, ^interval: int): <> int
  external/uv-fs-poll-start(handle1, poll-cb, path, interval.int32).int

pub extern external/uv-fs-poll-stop(^handle1: c-pointer<uv-fs-poll-s-c>): int32
  c inline "(int)uv_fs_poll_stop((uv_fs_poll_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-fs-poll-stop(^handle1: c-pointer<uv-fs-poll-s-c>): <> int
  external/uv-fs-poll-stop(handle1).int

pub extern external/uv-fs-poll-getpath(^handle1: c-pointer<uv-fs-poll-s-c>, ^buffer: c-pointer<int>, ^size: c-pointer<int>): int32
  c inline "(int)uv_fs_poll_getpath((uv_fs_poll_t*)#1, (char*)#2, (size_t*)#3)"
  wasm inline "0"

pub inline fun ffi/uv-fs-poll-getpath(^handle1: c-pointer<uv-fs-poll-s-c>, ^buffer: c-pointer<int>, ^size: c-pointer<int>): <> int
  external/uv-fs-poll-getpath(handle1, buffer, size).int

pub extern external/uv-signal-init(^loop: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-signal-s-c>): int32
  c inline "(int)uv_signal_init((uv_loop_t*)#1, (uv_signal_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-signal-init(^loop: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-signal-s-c>): <> int
  external/uv-signal-init(loop, handle1).int

pub extern external/uv-signal-start(^handle1: c-pointer<uv-signal-s-c>, ^signal-cb: c-pointer<intptr_t>, ^signum: int32): int32
  c inline "(int)uv_signal_start((uv_signal_t*)#1, (uv_signal_cb)#2, (int)#3)"
  wasm inline "0"

pub inline fun ffi/uv-signal-start(^handle1: c-pointer<uv-signal-s-c>, ^signal-cb: uv-signal-cb, ^signum: int): <> int
  external/uv-signal-start(handle1, signal-cb, signum.int32).int

pub extern external/uv-signal-start-oneshot(^handle1: c-pointer<uv-signal-s-c>, ^signal-cb: c-pointer<intptr_t>, ^signum: int32): int32
  c inline "(int)uv_signal_start_oneshot((uv_signal_t*)#1, (uv_signal_cb)#2, (int)#3)"
  wasm inline "0"

pub inline fun ffi/uv-signal-start-oneshot(^handle1: c-pointer<uv-signal-s-c>, ^signal-cb: uv-signal-cb, ^signum: int): <> int
  external/uv-signal-start-oneshot(handle1, signal-cb, signum.int32).int

pub extern external/uv-signal-stop(^handle1: c-pointer<uv-signal-s-c>): int32
  c inline "(int)uv_signal_stop((uv_signal_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-signal-stop(^handle1: c-pointer<uv-signal-s-c>): <> int
  external/uv-signal-stop(handle1).int

pub extern external/uv-loadavg(^avg: c-pointer<float64>): ()
  c inline "(void)uv_loadavg((double*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-fs-event-init(^loop: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-fs-event-s-c>): int32
  c inline "(int)uv_fs_event_init((uv_loop_t*)#1, (uv_fs_event_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-fs-event-init(^loop: c-pointer<uv-loop-s-c>, ^handle1: c-pointer<uv-fs-event-s-c>): <> int
  external/uv-fs-event-init(loop, handle1).int

pub extern external/uv-fs-event-start(^handle1: c-pointer<uv-fs-event-s-c>, ^cb: c-pointer<intptr_t>, ^path: c-pointer<int>, ^flags: int32): int32
  c inline "(int)uv_fs_event_start((uv_fs_event_t*)#1, (uv_fs_event_cb)#2, (char*)#3, (unsigned int)#4)"
  wasm inline "0"

pub inline fun ffi/uv-fs-event-start(^handle1: c-pointer<uv-fs-event-s-c>, ^cb: uv-fs-event-cb, ^path: c-pointer<int>, ^flags: int): <> int
  external/uv-fs-event-start(handle1, cb, path, flags.int32).int

pub extern external/uv-fs-event-stop(^handle1: c-pointer<uv-fs-event-s-c>): int32
  c inline "(int)uv_fs_event_stop((uv_fs_event_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-fs-event-stop(^handle1: c-pointer<uv-fs-event-s-c>): <> int
  external/uv-fs-event-stop(handle1).int

pub extern external/uv-fs-event-getpath(^handle1: c-pointer<uv-fs-event-s-c>, ^buffer: c-pointer<int>, ^size: c-pointer<int>): int32
  c inline "(int)uv_fs_event_getpath((uv_fs_event_t*)#1, (char*)#2, (size_t*)#3)"
  wasm inline "0"

pub inline fun ffi/uv-fs-event-getpath(^handle1: c-pointer<uv-fs-event-s-c>, ^buffer: c-pointer<int>, ^size: c-pointer<int>): <> int
  external/uv-fs-event-getpath(handle1, buffer, size).int

pub extern external/uv-ip4-addr(^ip: c-pointer<int>, ^port: int32, ^addr: c-pointer<sockaddr-in-c>): int32
  c inline "(int)uv_ip4_addr((char*)#1, (int)#2, (struct sockaddr_in*)#3)"
  wasm inline "0"

pub inline fun ffi/uv-ip4-addr(^ip: c-pointer<int>, ^port: int, ^addr: c-pointer<sockaddr-in-c>): <> int
  external/uv-ip4-addr(ip, port.int32, addr).int

pub extern external/uv-ip6-addr(^ip: c-pointer<int>, ^port: int32, ^addr: c-pointer<sockaddr-in6-c>): int32
  c inline "(int)uv_ip6_addr((char*)#1, (int)#2, (struct sockaddr_in6*)#3)"
  wasm inline "0"

pub inline fun ffi/uv-ip6-addr(^ip: c-pointer<int>, ^port: int, ^addr: c-pointer<sockaddr-in6-c>): <> int
  external/uv-ip6-addr(ip, port.int32, addr).int

pub extern external/uv-ip4-name(^src: c-pointer<sockaddr-in-c>, ^dst: c-pointer<int>, ^size: ssize_t): int32
  c inline "(int)uv_ip4_name((struct sockaddr_in*)#1, (char*)#2, (size_t)#3)"
  wasm inline "0"

pub inline fun ffi/uv-ip4-name(^src: c-pointer<sockaddr-in-c>, ^dst: c-pointer<int>, ^size: int): <> int
  external/uv-ip4-name(src, dst, size.ssize_t).int

pub extern external/uv-ip6-name(^src: c-pointer<sockaddr-in6-c>, ^dst: c-pointer<int>, ^size: ssize_t): int32
  c inline "(int)uv_ip6_name((struct sockaddr_in6*)#1, (char*)#2, (size_t)#3)"
  wasm inline "0"

pub inline fun ffi/uv-ip6-name(^src: c-pointer<sockaddr-in6-c>, ^dst: c-pointer<int>, ^size: int): <> int
  external/uv-ip6-name(src, dst, size.ssize_t).int

pub extern external/uv-ip-name(^src: c-pointer<sockaddr-c>, ^dst: c-pointer<int>, ^size: ssize_t): int32
  c inline "(int)uv_ip_name((struct sockaddr*)#1, (char*)#2, (size_t)#3)"
  wasm inline "0"

pub inline fun ffi/uv-ip-name(^src: c-pointer<sockaddr-c>, ^dst: c-pointer<int>, ^size: int): <> int
  external/uv-ip-name(src, dst, size.ssize_t).int

pub extern external/uv-inet-ntop(^af: int32, ^src: c-pointer<()>, ^dst: c-pointer<int>, ^size: ssize_t): int32
  c inline "(int)uv_inet_ntop((int)#1, (void*)#2, (char*)#3, (size_t)#4)"
  wasm inline "0"

pub inline fun ffi/uv-inet-ntop(^af: int, ^src: c-pointer<()>, ^dst: c-pointer<int>, ^size: int): <> int
  external/uv-inet-ntop(af.int32, src, dst, size.ssize_t).int

pub extern external/uv-inet-pton(^af: int32, ^src: c-pointer<int>, ^dst: c-pointer<()>): int32
  c inline "(int)uv_inet_pton((int)#1, (char*)#2, (void*)#3)"
  wasm inline "0"

pub inline fun ffi/uv-inet-pton(^af: int, ^src: c-pointer<int>, ^dst: c-pointer<()>): <> int
  external/uv-inet-pton(af.int32, src, dst).int

pub extern external/uv-random(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-random-s-c>, ^buf: c-pointer<()>, ^buflen: ssize_t, ^flags: int32, ^cb: c-pointer<intptr_t>): int32
  c inline "(int)uv_random((uv_loop_t*)#1, (uv_random_t*)#2, (void*)#3, (size_t)#4, (unsigned int)#5, (uv_random_cb)#6)"
  wasm inline "0"

pub inline fun ffi/uv-random(^loop: c-pointer<uv-loop-s-c>, ^req: c-pointer<uv-random-s-c>, ^buf: c-pointer<()>, ^buflen: int, ^flags: int, ^cb: uv-random-cb): <> int
  external/uv-random(loop, req, buf, buflen.ssize_t, flags.int32, cb).int

pub extern external/uv-if-indextoname(^ifindex: int32, ^buffer: c-pointer<int>, ^size: c-pointer<int>): int32
  c inline "(int)uv_if_indextoname((unsigned int)#1, (char*)#2, (size_t*)#3)"
  wasm inline "0"

pub inline fun ffi/uv-if-indextoname(^ifindex: int, ^buffer: c-pointer<int>, ^size: c-pointer<int>): <> int
  external/uv-if-indextoname(ifindex.int32, buffer, size).int

pub extern external/uv-if-indextoiid(^ifindex: int32, ^buffer: c-pointer<int>, ^size: c-pointer<int>): int32
  c inline "(int)uv_if_indextoiid((unsigned int)#1, (char*)#2, (size_t*)#3)"
  wasm inline "0"

pub inline fun ffi/uv-if-indextoiid(^ifindex: int, ^buffer: c-pointer<int>, ^size: c-pointer<int>): <> int
  external/uv-if-indextoiid(ifindex.int32, buffer, size).int

pub extern external/uv-exepath(^buffer: c-pointer<int>, ^size: c-pointer<int>): int32
  c inline "(int)uv_exepath((char*)#1, (size_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-exepath(^buffer: c-pointer<int>, ^size: c-pointer<int>): <> int
  external/uv-exepath(buffer, size).int

pub extern external/uv-cwd(^buffer: c-pointer<int>, ^size: c-pointer<int>): int32
  c inline "(int)uv_cwd((char*)#1, (size_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-cwd(^buffer: c-pointer<int>, ^size: c-pointer<int>): <> int
  external/uv-cwd(buffer, size).int

pub extern external/uv-chdir(^dir: c-pointer<int>): int32
  c inline "(int)uv_chdir((char*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-chdir(^dir: c-pointer<int>): <> int
  external/uv-chdir(dir).int

pub extern external/uv-get-free-memory(): int64
  c inline "(int64_t)uv_get_free_memory()"
  wasm inline "0"

pub inline fun ffi/uv-get-free-memory(): <> int
  external/uv-get-free-memory().int

pub extern external/uv-get-total-memory(): int64
  c inline "(int64_t)uv_get_total_memory()"
  wasm inline "0"

pub inline fun ffi/uv-get-total-memory(): <> int
  external/uv-get-total-memory().int

pub extern external/uv-get-constrained-memory(): int64
  c inline "(int64_t)uv_get_constrained_memory()"
  wasm inline "0"

pub inline fun ffi/uv-get-constrained-memory(): <> int
  external/uv-get-constrained-memory().int

pub extern external/uv-get-available-memory(): int64
  c inline "(int64_t)uv_get_available_memory()"
  wasm inline "0"

pub inline fun ffi/uv-get-available-memory(): <> int
  external/uv-get-available-memory().int

pub extern external/uv-clock-gettime(^clock-id: int32, ^ts: c-pointer<uv-timespec64-t-c>): int32
  c inline "(int)uv_clock_gettime((int32_t)#1, (uv_timespec64_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-clock-gettime(^clock-id: uv-clock-id-enum, ^ts: c-pointer<uv-timespec64-t-c>): <exn> int
  external/uv-clock-gettime(clock-id.uv-clock-id-enum/int, ts).int

pub extern external/uv-hrtime(): int64
  c inline "(int64_t)uv_hrtime()"
  wasm inline "0"

pub inline fun ffi/uv-hrtime(): <> int
  external/uv-hrtime().int

pub extern external/uv-sleep(^msec: int32): ()
  c inline "(void)uv_sleep((unsigned int)#1)"
  wasm inline "kk_Unit"

pub inline fun ffi/uv-sleep(^msec: int): <> ()
  external/uv-sleep(msec.int32)

pub extern external/uv-disable-stdio-inheritance(): ()
  c inline "(void)uv_disable_stdio_inheritance()"
  wasm inline "kk_Unit"

pub extern external/uv-dlopen(^filename: c-pointer<int>, ^lib: c-pointer<uv-lib-t-c>): int32
  c inline "(int)uv_dlopen((char*)#1, (uv_lib_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-dlopen(^filename: c-pointer<int>, ^lib: c-pointer<uv-lib-t-c>): <> int
  external/uv-dlopen(filename, lib).int

pub extern external/uv-dlclose(^lib: c-pointer<uv-lib-t-c>): ()
  c inline "(void)uv_dlclose((uv_lib_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-dlsym(^lib: c-pointer<uv-lib-t-c>, ^name: c-pointer<int>, ^ptr: c-pointer<c-pointer<()>>): int32
  c inline "(int)uv_dlsym((uv_lib_t*)#1, (char*)#2, (void**)#3)"
  wasm inline "0"

pub inline fun ffi/uv-dlsym(^lib: c-pointer<uv-lib-t-c>, ^name: c-pointer<int>, ^ptr: c-pointer<c-pointer<()>>): <> int
  external/uv-dlsym(lib, name, ptr).int

pub extern external/uv-dlerror(^lib: c-pointer<uv-lib-t-c>): c-pointer<int>
  c inline "(intptr_t)uv_dlerror((uv_lib_t*)#1)"
  wasm inline "0"

pub extern external/uv-mutex-init(^handle1: c-pointer<opaque-pthread-mutex-t-c>): int32
  c inline "(int)uv_mutex_init((uv_mutex_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-mutex-init(^handle1: c-pointer<opaque-pthread-mutex-t-c>): <> int
  external/uv-mutex-init(handle1).int

pub extern external/uv-mutex-init-recursive(^handle1: c-pointer<opaque-pthread-mutex-t-c>): int32
  c inline "(int)uv_mutex_init_recursive((uv_mutex_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-mutex-init-recursive(^handle1: c-pointer<opaque-pthread-mutex-t-c>): <> int
  external/uv-mutex-init-recursive(handle1).int

pub extern external/uv-mutex-destroy(^handle1: c-pointer<opaque-pthread-mutex-t-c>): ()
  c inline "(void)uv_mutex_destroy((uv_mutex_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-mutex-lock(^handle1: c-pointer<opaque-pthread-mutex-t-c>): ()
  c inline "(void)uv_mutex_lock((uv_mutex_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-mutex-trylock(^handle1: c-pointer<opaque-pthread-mutex-t-c>): int32
  c inline "(int)uv_mutex_trylock((uv_mutex_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-mutex-trylock(^handle1: c-pointer<opaque-pthread-mutex-t-c>): <> int
  external/uv-mutex-trylock(handle1).int

pub extern external/uv-mutex-unlock(^handle1: c-pointer<opaque-pthread-mutex-t-c>): ()
  c inline "(void)uv_mutex_unlock((uv_mutex_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-rwlock-init(^rwlock: c-pointer<opaque-pthread-rwlock-t-c>): int32
  c inline "(int)uv_rwlock_init((uv_rwlock_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-rwlock-init(^rwlock: c-pointer<opaque-pthread-rwlock-t-c>): <> int
  external/uv-rwlock-init(rwlock).int

pub extern external/uv-rwlock-destroy(^rwlock: c-pointer<opaque-pthread-rwlock-t-c>): ()
  c inline "(void)uv_rwlock_destroy((uv_rwlock_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-rwlock-rdlock(^rwlock: c-pointer<opaque-pthread-rwlock-t-c>): ()
  c inline "(void)uv_rwlock_rdlock((uv_rwlock_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-rwlock-tryrdlock(^rwlock: c-pointer<opaque-pthread-rwlock-t-c>): int32
  c inline "(int)uv_rwlock_tryrdlock((uv_rwlock_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-rwlock-tryrdlock(^rwlock: c-pointer<opaque-pthread-rwlock-t-c>): <> int
  external/uv-rwlock-tryrdlock(rwlock).int

pub extern external/uv-rwlock-rdunlock(^rwlock: c-pointer<opaque-pthread-rwlock-t-c>): ()
  c inline "(void)uv_rwlock_rdunlock((uv_rwlock_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-rwlock-wrlock(^rwlock: c-pointer<opaque-pthread-rwlock-t-c>): ()
  c inline "(void)uv_rwlock_wrlock((uv_rwlock_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-rwlock-trywrlock(^rwlock: c-pointer<opaque-pthread-rwlock-t-c>): int32
  c inline "(int)uv_rwlock_trywrlock((uv_rwlock_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-rwlock-trywrlock(^rwlock: c-pointer<opaque-pthread-rwlock-t-c>): <> int
  external/uv-rwlock-trywrlock(rwlock).int

pub extern external/uv-rwlock-wrunlock(^rwlock: c-pointer<opaque-pthread-rwlock-t-c>): ()
  c inline "(void)uv_rwlock_wrunlock((uv_rwlock_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-sem-init(^sem: c-pointer<int>, ^value: int32): int32
  c inline "(int)uv_sem_init((uv_sem_t*)#1, (unsigned int)#2)"
  wasm inline "0"

pub inline fun ffi/uv-sem-init(^sem: c-pointer<int>, ^value: int): <> int
  external/uv-sem-init(sem, value.int32).int

pub extern external/uv-sem-destroy(^sem: c-pointer<int>): ()
  c inline "(void)uv_sem_destroy((uv_sem_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-sem-post(^sem: c-pointer<int>): ()
  c inline "(void)uv_sem_post((uv_sem_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-sem-wait(^sem: c-pointer<int>): ()
  c inline "(void)uv_sem_wait((uv_sem_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-sem-trywait(^sem: c-pointer<int>): int32
  c inline "(int)uv_sem_trywait((uv_sem_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-sem-trywait(^sem: c-pointer<int>): <> int
  external/uv-sem-trywait(sem).int

pub extern external/uv-cond-init(^cond: c-pointer<opaque-pthread-cond-t-c>): int32
  c inline "(int)uv_cond_init((uv_cond_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-cond-init(^cond: c-pointer<opaque-pthread-cond-t-c>): <> int
  external/uv-cond-init(cond).int

pub extern external/uv-cond-destroy(^cond: c-pointer<opaque-pthread-cond-t-c>): ()
  c inline "(void)uv_cond_destroy((uv_cond_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-cond-signal(^cond: c-pointer<opaque-pthread-cond-t-c>): ()
  c inline "(void)uv_cond_signal((uv_cond_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-cond-broadcast(^cond: c-pointer<opaque-pthread-cond-t-c>): ()
  c inline "(void)uv_cond_broadcast((uv_cond_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-barrier-init(^barrier: c-pointer<uv-barrier-t-c>, ^count: int32): int32
  c inline "(int)uv_barrier_init((uv_barrier_t*)#1, (unsigned int)#2)"
  wasm inline "0"

pub inline fun ffi/uv-barrier-init(^barrier: c-pointer<uv-barrier-t-c>, ^count: int): <> int
  external/uv-barrier-init(barrier, count.int32).int

pub extern external/uv-barrier-destroy(^barrier: c-pointer<uv-barrier-t-c>): ()
  c inline "(void)uv_barrier_destroy((uv_barrier_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-barrier-wait(^barrier: c-pointer<uv-barrier-t-c>): int32
  c inline "(int)uv_barrier_wait((uv_barrier_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-barrier-wait(^barrier: c-pointer<uv-barrier-t-c>): <> int
  external/uv-barrier-wait(barrier).int

pub extern external/uv-cond-wait(^cond: c-pointer<opaque-pthread-cond-t-c>, ^mutex: c-pointer<opaque-pthread-mutex-t-c>): ()
  c inline "(void)uv_cond_wait((uv_cond_t*)#1, (uv_mutex_t*)#2)"
  wasm inline "kk_Unit"

pub extern external/uv-cond-timedwait(^cond: c-pointer<opaque-pthread-cond-t-c>, ^mutex: c-pointer<opaque-pthread-mutex-t-c>, ^timeout: int64): int32
  c inline "(int)uv_cond_timedwait((uv_cond_t*)#1, (uv_mutex_t*)#2, (int64_t)#3)"
  wasm inline "0"

pub inline fun ffi/uv-cond-timedwait(^cond: c-pointer<opaque-pthread-cond-t-c>, ^mutex: c-pointer<opaque-pthread-mutex-t-c>, ^timeout: int): <> int
  external/uv-cond-timedwait(cond, mutex, timeout.int64).int

pub extern external/uv-once(^guard: c-pointer<opaque-pthread-once-t-c>, ^callback: c-pointer<intptr_t>): ()
  c inline "(void)uv_once((uv_once_t*)#1, (void (*)())#2)"
  wasm inline "kk_Unit"

pub extern external/uv-key-create(^key: c-pointer<int>): int32
  c inline "(int)uv_key_create((uv_key_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-key-create(^key: c-pointer<int>): <> int
  external/uv-key-create(key).int

pub extern external/uv-key-delete(^key: c-pointer<int>): ()
  c inline "(void)uv_key_delete((uv_key_t*)#1)"
  wasm inline "kk_Unit"

pub extern external/uv-key-get(^key: c-pointer<int>): c-pointer<()>
  c inline "(intptr_t)uv_key_get((uv_key_t*)#1)"
  wasm inline "0"

pub extern external/uv-key-set(^key: c-pointer<int>, ^value: c-pointer<()>): ()
  c inline "(void)uv_key_set((uv_key_t*)#1, (void*)#2)"
  wasm inline "kk_Unit"

pub extern external/uv-gettimeofday(^tv: c-pointer<uv-timeval64-t-c>): int32
  c inline "(int)uv_gettimeofday((uv_timeval64_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-gettimeofday(^tv: c-pointer<uv-timeval64-t-c>): <> int
  external/uv-gettimeofday(tv).int

pub extern external/uv-thread-create(^tid: c-pointer<uv-thread-t>, ^entry: c-pointer<intptr_t>, ^arg: c-pointer<()>): int32
  c inline "(int)uv_thread_create((uv_thread_t*)#1, (uv_thread_cb)#2, (void*)#3)"
  wasm inline "0"

pub inline fun ffi/uv-thread-create(^tid: c-pointer<uv-thread-t>, ^entry: uv-thread-cb, ^arg: c-pointer<()>): <> int
  external/uv-thread-create(tid, entry, arg).int

pub extern external/uv-thread-create-ex(^tid: c-pointer<uv-thread-t>, ^params: c-pointer<uv-thread-options-s-c>, ^entry: c-pointer<intptr_t>, ^arg: c-pointer<()>): int32
  c inline "(int)uv_thread_create_ex((uv_thread_t*)#1, (uv_thread_options_t*)#2, (uv_thread_cb)#3, (void*)#4)"
  wasm inline "0"

pub inline fun ffi/uv-thread-create-ex(^tid: c-pointer<uv-thread-t>, ^params: c-pointer<uv-thread-options-s-c>, ^entry: uv-thread-cb, ^arg: c-pointer<()>): <> int
  external/uv-thread-create-ex(tid, params, entry, arg).int

pub extern external/uv-thread-setaffinity(^tid: c-pointer<uv-thread-t>, ^cpumask: c-pointer<int>, ^oldmask: c-pointer<int>, ^mask-size: ssize_t): int32
  c inline "(int)uv_thread_setaffinity((uv_thread_t*)#1, (char*)#2, (char*)#3, (size_t)#4)"
  wasm inline "0"

pub inline fun ffi/uv-thread-setaffinity(^tid: c-pointer<uv-thread-t>, ^cpumask: c-pointer<int>, ^oldmask: c-pointer<int>, ^mask-size: int): <> int
  external/uv-thread-setaffinity(tid, cpumask, oldmask, mask-size.ssize_t).int

pub extern external/uv-thread-getaffinity(^tid: c-pointer<uv-thread-t>, ^cpumask: c-pointer<int>, ^mask-size: ssize_t): int32
  c inline "(int)uv_thread_getaffinity((uv_thread_t*)#1, (char*)#2, (size_t)#3)"
  wasm inline "0"

pub inline fun ffi/uv-thread-getaffinity(^tid: c-pointer<uv-thread-t>, ^cpumask: c-pointer<int>, ^mask-size: int): <> int
  external/uv-thread-getaffinity(tid, cpumask, mask-size.ssize_t).int

pub extern external/uv-thread-getcpu(): int32
  c inline "(int)uv_thread_getcpu()"
  wasm inline "0"

pub inline fun ffi/uv-thread-getcpu(): <> int
  external/uv-thread-getcpu().int

pub extern external/uv-thread-join(^tid: c-pointer<uv-thread-t>): int32
  c inline "(int)uv_thread_join((uv_thread_t*)#1)"
  wasm inline "0"

pub inline fun ffi/uv-thread-join(^tid: c-pointer<uv-thread-t>): <> int
  external/uv-thread-join(tid).int

pub extern external/uv-thread-equal(^t1: c-pointer<uv-thread-t>, ^t2: c-pointer<uv-thread-t>): int32
  c inline "(int)uv_thread_equal((uv_thread_t*)#1, (uv_thread_t*)#2)"
  wasm inline "0"

pub inline fun ffi/uv-thread-equal(^t1: c-pointer<uv-thread-t>, ^t2: c-pointer<uv-thread-t>): <> int
  external/uv-thread-equal(t1, t2).int

pub extern external/uv-loop-get-data(^arg0: c-pointer<uv-loop-s-c>): c-pointer<()>
  c inline "(intptr_t)uv_loop_get_data((uv_loop_t*)#1)"
  wasm inline "0"

pub extern external/uv-loop-set-data(^arg0: c-pointer<uv-loop-s-c>, ^data: c-pointer<()>): ()
  c inline "(void)uv_loop_set_data((uv_loop_t*)#1, (void*)#2)"
  wasm inline "kk_Unit"

pub struct uv-queue
pub type uv-queue-c
pub alias uv-queuep = c-pointer<uv-queue-c>
pub alias uv-queuec = owned-c<uv-queue-c>
pub alias uv-queuecb<s::S> = borrowed-c<s,uv-queue-c>
pub alias uv-queueca = owned-c<c-array<uv-queue-c>>

pub struct uv-work
pub type uv-work-c
pub alias uv-workp = c-pointer<uv-work-c>
pub alias uv-workc = owned-c<uv-work-c>
pub alias uv-workcb<s::S> = borrowed-c<s,uv-work-c>
pub alias uv-workca = owned-c<c-array<uv-work-c>>

pub type uv-errno-t-enum
  UV_E2BIG
  UV_EACCES
  UV_EADDRINUSE
  UV_EADDRNOTAVAIL
  UV_EAFNOSUPPORT
  UV_EAGAIN
  UV_EAI_ADDRFAMILY
  UV_EAI_AGAIN
  UV_EAI_BADFLAGS
  UV_EAI_BADHINTS
  UV_EAI_CANCELED
  UV_EAI_FAIL
  UV_EAI_FAMILY
  UV_EAI_MEMORY
  UV_EAI_NODATA
  UV_EAI_NONAME
  UV_EAI_OVERFLOW
  UV_EAI_PROTOCOL
  UV_EAI_SERVICE
  UV_EAI_SOCKTYPE
  UV_EALREADY
  UV_EBADF
  UV_EBUSY
  UV_ECANCELED
  UV_ECHARSET
  UV_ECONNABORTED
  UV_ECONNREFUSED
  UV_ECONNRESET
  UV_EDESTADDRREQ
  UV_EEXIST
  UV_EFAULT
  UV_EFBIG
  UV_EHOSTUNREACH
  UV_EINTR
  UV_EINVAL
  UV_EIO
  UV_EISCONN
  UV_EISDIR
  UV_ELOOP
  UV_EMFILE
  UV_EMSGSIZE
  UV_ENAMETOOLONG
  UV_ENETDOWN
  UV_ENETUNREACH
  UV_ENFILE
  UV_ENOBUFS
  UV_ENODEV
  UV_ENOENT
  UV_ENOMEM
  UV_ENONET
  UV_ENOPROTOOPT
  UV_ENOSPC
  UV_ENOSYS
  UV_ENOTCONN
  UV_ENOTDIR
  UV_ENOTEMPTY
  UV_ENOTSOCK
  UV_ENOTSUP
  UV_EOVERFLOW
  UV_EPERM
  UV_EPIPE
  UV_EPROTO
  UV_EPROTONOSUPPORT
  UV_EPROTOTYPE
  UV_ERANGE
  UV_EROFS
  UV_ESHUTDOWN
  UV_ESPIPE
  UV_ESRCH
  UV_ETIMEDOUT
  UV_ETXTBSY
  UV_EXDEV
  UV_UNKNOWN
  UV_EOF
  UV_ENXIO
  UV_EMLINK
  UV_EHOSTDOWN
  UV_EREMOTEIO
  UV_ENOTTY
  UV_EFTYPE
  UV_EILSEQ
  UV_ESOCKTNOSUPPORT
  UV_ENODATA
  UV_EUNATCH
  UV_ERRNO_MAX

pub fun uv-errno-t-enum/int(i: uv-errno-t-enum): int32
  match i
    UV_E2BIG -> -7.int32
    UV_EACCES -> -13.int32
    UV_EADDRINUSE -> -48.int32
    UV_EADDRNOTAVAIL -> -49.int32
    UV_EAFNOSUPPORT -> -47.int32
    UV_EAGAIN -> -35.int32
    UV_EAI_ADDRFAMILY -> -3000.int32
    UV_EAI_AGAIN -> -3001.int32
    UV_EAI_BADFLAGS -> -3002.int32
    UV_EAI_BADHINTS -> -3013.int32
    UV_EAI_CANCELED -> -3003.int32
    UV_EAI_FAIL -> -3004.int32
    UV_EAI_FAMILY -> -3005.int32
    UV_EAI_MEMORY -> -3006.int32
    UV_EAI_NODATA -> -3007.int32
    UV_EAI_NONAME -> -3008.int32
    UV_EAI_OVERFLOW -> -3009.int32
    UV_EAI_PROTOCOL -> -3014.int32
    UV_EAI_SERVICE -> -3010.int32
    UV_EAI_SOCKTYPE -> -3011.int32
    UV_EALREADY -> -37.int32
    UV_EBADF -> -9.int32
    UV_EBUSY -> -16.int32
    UV_ECANCELED -> -89.int32
    UV_ECHARSET -> -4080.int32
    UV_ECONNABORTED -> -53.int32
    UV_ECONNREFUSED -> -61.int32
    UV_ECONNRESET -> -54.int32
    UV_EDESTADDRREQ -> -39.int32
    UV_EEXIST -> -17.int32
    UV_EFAULT -> -14.int32
    UV_EFBIG -> -27.int32
    UV_EHOSTUNREACH -> -65.int32
    UV_EINTR -> -4.int32
    UV_EINVAL -> -22.int32
    UV_EIO -> -5.int32
    UV_EISCONN -> -56.int32
    UV_EISDIR -> -21.int32
    UV_ELOOP -> -62.int32
    UV_EMFILE -> -24.int32
    UV_EMSGSIZE -> -40.int32
    UV_ENAMETOOLONG -> -63.int32
    UV_ENETDOWN -> -50.int32
    UV_ENETUNREACH -> -51.int32
    UV_ENFILE -> -23.int32
    UV_ENOBUFS -> -55.int32
    UV_ENODEV -> -19.int32
    UV_ENOENT -> -2.int32
    UV_ENOMEM -> -12.int32
    UV_ENONET -> -4056.int32
    UV_ENOPROTOOPT -> -42.int32
    UV_ENOSPC -> -28.int32
    UV_ENOSYS -> -78.int32
    UV_ENOTCONN -> -57.int32
    UV_ENOTDIR -> -20.int32
    UV_ENOTEMPTY -> -66.int32
    UV_ENOTSOCK -> -38.int32
    UV_ENOTSUP -> -45.int32
    UV_EOVERFLOW -> -84.int32
    UV_EPERM -> -1.int32
    UV_EPIPE -> -32.int32
    UV_EPROTO -> -100.int32
    UV_EPROTONOSUPPORT -> -43.int32
    UV_EPROTOTYPE -> -41.int32
    UV_ERANGE -> -34.int32
    UV_EROFS -> -30.int32
    UV_ESHUTDOWN -> -58.int32
    UV_ESPIPE -> -29.int32
    UV_ESRCH -> -3.int32
    UV_ETIMEDOUT -> -60.int32
    UV_ETXTBSY -> -26.int32
    UV_EXDEV -> -18.int32
    UV_UNKNOWN -> -4094.int32
    UV_EOF -> -4095.int32
    UV_ENXIO -> -6.int32
    UV_EMLINK -> -31.int32
    UV_EHOSTDOWN -> -64.int32
    UV_EREMOTEIO -> -4030.int32
    UV_ENOTTY -> -25.int32
    UV_EFTYPE -> -79.int32
    UV_EILSEQ -> -92.int32
    UV_ESOCKTNOSUPPORT -> -44.int32
    UV_ENODATA -> -96.int32
    UV_EUNATCH -> -4023.int32
    UV_ERRNO_MAX -> -4096.int32

pub fun int/uv-errno-t-enum(i: int32): exn uv-errno-t-enum
  match i.int
    -7 -> UV_E2BIG
    -13 -> UV_EACCES
    -48 -> UV_EADDRINUSE
    -49 -> UV_EADDRNOTAVAIL
    -47 -> UV_EAFNOSUPPORT
    -35 -> UV_EAGAIN
    -3000 -> UV_EAI_ADDRFAMILY
    -3001 -> UV_EAI_AGAIN
    -3002 -> UV_EAI_BADFLAGS
    -3013 -> UV_EAI_BADHINTS
    -3003 -> UV_EAI_CANCELED
    -3004 -> UV_EAI_FAIL
    -3005 -> UV_EAI_FAMILY
    -3006 -> UV_EAI_MEMORY
    -3007 -> UV_EAI_NODATA
    -3008 -> UV_EAI_NONAME
    -3009 -> UV_EAI_OVERFLOW
    -3014 -> UV_EAI_PROTOCOL
    -3010 -> UV_EAI_SERVICE
    -3011 -> UV_EAI_SOCKTYPE
    -37 -> UV_EALREADY
    -9 -> UV_EBADF
    -16 -> UV_EBUSY
    -89 -> UV_ECANCELED
    -4080 -> UV_ECHARSET
    -53 -> UV_ECONNABORTED
    -61 -> UV_ECONNREFUSED
    -54 -> UV_ECONNRESET
    -39 -> UV_EDESTADDRREQ
    -17 -> UV_EEXIST
    -14 -> UV_EFAULT
    -27 -> UV_EFBIG
    -65 -> UV_EHOSTUNREACH
    -4 -> UV_EINTR
    -22 -> UV_EINVAL
    -5 -> UV_EIO
    -56 -> UV_EISCONN
    -21 -> UV_EISDIR
    -62 -> UV_ELOOP
    -24 -> UV_EMFILE
    -40 -> UV_EMSGSIZE
    -63 -> UV_ENAMETOOLONG
    -50 -> UV_ENETDOWN
    -51 -> UV_ENETUNREACH
    -23 -> UV_ENFILE
    -55 -> UV_ENOBUFS
    -19 -> UV_ENODEV
    -2 -> UV_ENOENT
    -12 -> UV_ENOMEM
    -4056 -> UV_ENONET
    -42 -> UV_ENOPROTOOPT
    -28 -> UV_ENOSPC
    -78 -> UV_ENOSYS
    -57 -> UV_ENOTCONN
    -20 -> UV_ENOTDIR
    -66 -> UV_ENOTEMPTY
    -38 -> UV_ENOTSOCK
    -45 -> UV_ENOTSUP
    -84 -> UV_EOVERFLOW
    -1 -> UV_EPERM
    -32 -> UV_EPIPE
    -100 -> UV_EPROTO
    -43 -> UV_EPROTONOSUPPORT
    -41 -> UV_EPROTOTYPE
    -34 -> UV_ERANGE
    -30 -> UV_EROFS
    -58 -> UV_ESHUTDOWN
    -29 -> UV_ESPIPE
    -3 -> UV_ESRCH
    -60 -> UV_ETIMEDOUT
    -26 -> UV_ETXTBSY
    -18 -> UV_EXDEV
    -4094 -> UV_UNKNOWN
    -4095 -> UV_EOF
    -6 -> UV_ENXIO
    -31 -> UV_EMLINK
    -64 -> UV_EHOSTDOWN
    -4030 -> UV_EREMOTEIO
    -25 -> UV_ENOTTY
    -79 -> UV_EFTYPE
    -92 -> UV_EILSEQ
    -44 -> UV_ESOCKTNOSUPPORT
    -96 -> UV_ENODATA
    -4023 -> UV_EUNATCH
    -4096 -> UV_ERRNO_MAX

pub type uv-handle-type-enum
  UV_UNKNOWN_HANDLE
  UV_ASYNC
  UV_CHECK
  UV_FS_EVENT
  UV_FS_POLL
  UV_HANDLE
  UV_IDLE
  UV_NAMED_PIPE
  UV_POLL
  UV_PREPARE
  UV_PROCESS
  UV_STREAM
  UV_TCP
  UV_TIMER
  UV_TTY
  UV_UDP
  UV_SIGNAL
  UV_FILE
  UV_HANDLE_TYPE_MAX

pub fun uv-handle-type-enum/int(i: uv-handle-type-enum): int32
  match i
    UV_UNKNOWN_HANDLE -> 0.int32
    UV_ASYNC -> 1.int32
    UV_CHECK -> 2.int32
    UV_FS_EVENT -> 3.int32
    UV_FS_POLL -> 4.int32
    UV_HANDLE -> 5.int32
    UV_IDLE -> 6.int32
    UV_NAMED_PIPE -> 7.int32
    UV_POLL -> 8.int32
    UV_PREPARE -> 9.int32
    UV_PROCESS -> 10.int32
    UV_STREAM -> 11.int32
    UV_TCP -> 12.int32
    UV_TIMER -> 13.int32
    UV_TTY -> 14.int32
    UV_UDP -> 15.int32
    UV_SIGNAL -> 16.int32
    UV_FILE -> 17.int32
    UV_HANDLE_TYPE_MAX -> 18.int32

pub fun int/uv-handle-type-enum(i: int32): exn uv-handle-type-enum
  match i.int
    0 -> UV_UNKNOWN_HANDLE
    1 -> UV_ASYNC
    2 -> UV_CHECK
    3 -> UV_FS_EVENT
    4 -> UV_FS_POLL
    5 -> UV_HANDLE
    6 -> UV_IDLE
    7 -> UV_NAMED_PIPE
    8 -> UV_POLL
    9 -> UV_PREPARE
    10 -> UV_PROCESS
    11 -> UV_STREAM
    12 -> UV_TCP
    13 -> UV_TIMER
    14 -> UV_TTY
    15 -> UV_UDP
    16 -> UV_SIGNAL
    17 -> UV_FILE
    18 -> UV_HANDLE_TYPE_MAX

pub type uv-req-type-enum
  UV_UNKNOWN_REQ
  UV_REQ
  UV_CONNECT
  UV_WRITE
  UV_SHUTDOWN
  UV_UDP_SEND
  UV_FS
  UV_WORK
  UV_GETADDRINFO
  UV_GETNAMEINFO
  UV_RANDOM
  UV_REQ_TYPE_MAX

pub fun uv-req-type-enum/int(i: uv-req-type-enum): int32
  match i
    UV_UNKNOWN_REQ -> 0.int32
    UV_REQ -> 1.int32
    UV_CONNECT -> 2.int32
    UV_WRITE -> 3.int32
    UV_SHUTDOWN -> 4.int32
    UV_UDP_SEND -> 5.int32
    UV_FS -> 6.int32
    UV_WORK -> 7.int32
    UV_GETADDRINFO -> 8.int32
    UV_GETNAMEINFO -> 9.int32
    UV_RANDOM -> 10.int32
    UV_REQ_TYPE_MAX -> 11.int32

pub fun int/uv-req-type-enum(i: int32): exn uv-req-type-enum
  match i.int
    0 -> UV_UNKNOWN_REQ
    1 -> UV_REQ
    2 -> UV_CONNECT
    3 -> UV_WRITE
    4 -> UV_SHUTDOWN
    5 -> UV_UDP_SEND
    6 -> UV_FS
    7 -> UV_WORK
    8 -> UV_GETADDRINFO
    9 -> UV_GETNAMEINFO
    10 -> UV_RANDOM
    11 -> UV_REQ_TYPE_MAX

pub struct uv-handle-s
pub type uv-handle-s-c
pub alias uv-handle-sp = c-pointer<uv-handle-s-c>
pub alias uv-handle-sc = owned-c<uv-handle-s-c>
pub alias uv-handle-scb<s::S> = borrowed-c<s,uv-handle-s-c>
pub alias uv-handle-sca = owned-c<c-array<uv-handle-s-c>>

pub struct uv-dir-s
pub type uv-dir-s-c
pub alias uv-dir-sp = c-pointer<uv-dir-s-c>
pub alias uv-dir-sc = owned-c<uv-dir-s-c>
pub alias uv-dir-scb<s::S> = borrowed-c<s,uv-dir-s-c>
pub alias uv-dir-sca = owned-c<c-array<uv-dir-s-c>>

pub struct uv-stream-s
pub type uv-stream-s-c
pub alias uv-stream-sp = c-pointer<uv-stream-s-c>
pub alias uv-stream-sc = owned-c<uv-stream-s-c>
pub alias uv-stream-scb<s::S> = borrowed-c<s,uv-stream-s-c>
pub alias uv-stream-sca = owned-c<c-array<uv-stream-s-c>>

pub struct uv-tcp-s
pub type uv-tcp-s-c
pub alias uv-tcp-sp = c-pointer<uv-tcp-s-c>
pub alias uv-tcp-sc = owned-c<uv-tcp-s-c>
pub alias uv-tcp-scb<s::S> = borrowed-c<s,uv-tcp-s-c>
pub alias uv-tcp-sca = owned-c<c-array<uv-tcp-s-c>>

pub struct uv-udp-s
pub type uv-udp-s-c
pub alias uv-udp-sp = c-pointer<uv-udp-s-c>
pub alias uv-udp-sc = owned-c<uv-udp-s-c>
pub alias uv-udp-scb<s::S> = borrowed-c<s,uv-udp-s-c>
pub alias uv-udp-sca = owned-c<c-array<uv-udp-s-c>>

pub struct uv-pipe-s
pub type uv-pipe-s-c
pub alias uv-pipe-sp = c-pointer<uv-pipe-s-c>
pub alias uv-pipe-sc = owned-c<uv-pipe-s-c>
pub alias uv-pipe-scb<s::S> = borrowed-c<s,uv-pipe-s-c>
pub alias uv-pipe-sca = owned-c<c-array<uv-pipe-s-c>>

pub struct uv-tty-s
pub type uv-tty-s-c
pub alias uv-tty-sp = c-pointer<uv-tty-s-c>
pub alias uv-tty-sc = owned-c<uv-tty-s-c>
pub alias uv-tty-scb<s::S> = borrowed-c<s,uv-tty-s-c>
pub alias uv-tty-sca = owned-c<c-array<uv-tty-s-c>>

pub struct uv-poll-s
pub type uv-poll-s-c
pub alias uv-poll-sp = c-pointer<uv-poll-s-c>
pub alias uv-poll-sc = owned-c<uv-poll-s-c>
pub alias uv-poll-scb<s::S> = borrowed-c<s,uv-poll-s-c>
pub alias uv-poll-sca = owned-c<c-array<uv-poll-s-c>>

pub struct uv-timer-s
pub type uv-timer-s-c
pub alias uv-timer-sp = c-pointer<uv-timer-s-c>
pub alias uv-timer-sc = owned-c<uv-timer-s-c>
pub alias uv-timer-scb<s::S> = borrowed-c<s,uv-timer-s-c>
pub alias uv-timer-sca = owned-c<c-array<uv-timer-s-c>>

pub struct uv-prepare-s
pub type uv-prepare-s-c
pub alias uv-prepare-sp = c-pointer<uv-prepare-s-c>
pub alias uv-prepare-sc = owned-c<uv-prepare-s-c>
pub alias uv-prepare-scb<s::S> = borrowed-c<s,uv-prepare-s-c>
pub alias uv-prepare-sca = owned-c<c-array<uv-prepare-s-c>>

pub struct uv-check-s
pub type uv-check-s-c
pub alias uv-check-sp = c-pointer<uv-check-s-c>
pub alias uv-check-sc = owned-c<uv-check-s-c>
pub alias uv-check-scb<s::S> = borrowed-c<s,uv-check-s-c>
pub alias uv-check-sca = owned-c<c-array<uv-check-s-c>>

pub struct uv-idle-s
pub type uv-idle-s-c
pub alias uv-idle-sp = c-pointer<uv-idle-s-c>
pub alias uv-idle-sc = owned-c<uv-idle-s-c>
pub alias uv-idle-scb<s::S> = borrowed-c<s,uv-idle-s-c>
pub alias uv-idle-sca = owned-c<c-array<uv-idle-s-c>>

pub struct uv-async-s
pub type uv-async-s-c
pub alias uv-async-sp = c-pointer<uv-async-s-c>
pub alias uv-async-sc = owned-c<uv-async-s-c>
pub alias uv-async-scb<s::S> = borrowed-c<s,uv-async-s-c>
pub alias uv-async-sca = owned-c<c-array<uv-async-s-c>>

pub struct uv-process-s
pub type uv-process-s-c
pub alias uv-process-sp = c-pointer<uv-process-s-c>
pub alias uv-process-sc = owned-c<uv-process-s-c>
pub alias uv-process-scb<s::S> = borrowed-c<s,uv-process-s-c>
pub alias uv-process-sca = owned-c<c-array<uv-process-s-c>>

pub struct uv-fs-event-s
pub type uv-fs-event-s-c
pub alias uv-fs-event-sp = c-pointer<uv-fs-event-s-c>
pub alias uv-fs-event-sc = owned-c<uv-fs-event-s-c>
pub alias uv-fs-event-scb<s::S> = borrowed-c<s,uv-fs-event-s-c>
pub alias uv-fs-event-sca = owned-c<c-array<uv-fs-event-s-c>>

pub struct uv-fs-poll-s
pub type uv-fs-poll-s-c
pub alias uv-fs-poll-sp = c-pointer<uv-fs-poll-s-c>
pub alias uv-fs-poll-sc = owned-c<uv-fs-poll-s-c>
pub alias uv-fs-poll-scb<s::S> = borrowed-c<s,uv-fs-poll-s-c>
pub alias uv-fs-poll-sca = owned-c<c-array<uv-fs-poll-s-c>>

pub struct uv-signal-s
pub type uv-signal-s-c
pub alias uv-signal-sp = c-pointer<uv-signal-s-c>
pub alias uv-signal-sc = owned-c<uv-signal-s-c>
pub alias uv-signal-scb<s::S> = borrowed-c<s,uv-signal-s-c>
pub alias uv-signal-sca = owned-c<c-array<uv-signal-s-c>>

pub struct uv-req-s
pub type uv-req-s-c
pub alias uv-req-sp = c-pointer<uv-req-s-c>
pub alias uv-req-sc = owned-c<uv-req-s-c>
pub alias uv-req-scb<s::S> = borrowed-c<s,uv-req-s-c>
pub alias uv-req-sca = owned-c<c-array<uv-req-s-c>>

pub struct uv-getaddrinfo-s
pub type uv-getaddrinfo-s-c
pub alias uv-getaddrinfo-sp = c-pointer<uv-getaddrinfo-s-c>
pub alias uv-getaddrinfo-sc = owned-c<uv-getaddrinfo-s-c>
pub alias uv-getaddrinfo-scb<s::S> = borrowed-c<s,uv-getaddrinfo-s-c>
pub alias uv-getaddrinfo-sca = owned-c<c-array<uv-getaddrinfo-s-c>>

pub struct uv-getnameinfo-s
pub type uv-getnameinfo-s-c
pub alias uv-getnameinfo-sp = c-pointer<uv-getnameinfo-s-c>
pub alias uv-getnameinfo-sc = owned-c<uv-getnameinfo-s-c>
pub alias uv-getnameinfo-scb<s::S> = borrowed-c<s,uv-getnameinfo-s-c>
pub alias uv-getnameinfo-sca = owned-c<c-array<uv-getnameinfo-s-c>>

pub struct uv-shutdown-s
pub type uv-shutdown-s-c
pub alias uv-shutdown-sp = c-pointer<uv-shutdown-s-c>
pub alias uv-shutdown-sc = owned-c<uv-shutdown-s-c>
pub alias uv-shutdown-scb<s::S> = borrowed-c<s,uv-shutdown-s-c>
pub alias uv-shutdown-sca = owned-c<c-array<uv-shutdown-s-c>>

pub struct uv-write-s
pub type uv-write-s-c
pub alias uv-write-sp = c-pointer<uv-write-s-c>
pub alias uv-write-sc = owned-c<uv-write-s-c>
pub alias uv-write-scb<s::S> = borrowed-c<s,uv-write-s-c>
pub alias uv-write-sca = owned-c<c-array<uv-write-s-c>>

pub struct uv-connect-s
pub type uv-connect-s-c
pub alias uv-connect-sp = c-pointer<uv-connect-s-c>
pub alias uv-connect-sc = owned-c<uv-connect-s-c>
pub alias uv-connect-scb<s::S> = borrowed-c<s,uv-connect-s-c>
pub alias uv-connect-sca = owned-c<c-array<uv-connect-s-c>>

pub struct uv-udp-send-s
pub type uv-udp-send-s-c
pub alias uv-udp-send-sp = c-pointer<uv-udp-send-s-c>
pub alias uv-udp-send-sc = owned-c<uv-udp-send-s-c>
pub alias uv-udp-send-scb<s::S> = borrowed-c<s,uv-udp-send-s-c>
pub alias uv-udp-send-sca = owned-c<c-array<uv-udp-send-s-c>>

pub struct uv-fs-s
pub type uv-fs-s-c
pub alias uv-fs-sp = c-pointer<uv-fs-s-c>
pub alias uv-fs-sc = owned-c<uv-fs-s-c>
pub alias uv-fs-scb<s::S> = borrowed-c<s,uv-fs-s-c>
pub alias uv-fs-sca = owned-c<c-array<uv-fs-s-c>>

pub struct uv-work-s
pub type uv-work-s-c
pub alias uv-work-sp = c-pointer<uv-work-s-c>
pub alias uv-work-sc = owned-c<uv-work-s-c>
pub alias uv-work-scb<s::S> = borrowed-c<s,uv-work-s-c>
pub alias uv-work-sca = owned-c<c-array<uv-work-s-c>>

pub struct uv-random-s
pub type uv-random-s-c
pub alias uv-random-sp = c-pointer<uv-random-s-c>
pub alias uv-random-sc = owned-c<uv-random-s-c>
pub alias uv-random-scb<s::S> = borrowed-c<s,uv-random-s-c>
pub alias uv-random-sca = owned-c<c-array<uv-random-s-c>>

pub struct uv-env-item-s
pub type uv-env-item-s-c
pub alias uv-env-item-sp = c-pointer<uv-env-item-s-c>
pub alias uv-env-item-sc = owned-c<uv-env-item-s-c>
pub alias uv-env-item-scb<s::S> = borrowed-c<s,uv-env-item-s-c>
pub alias uv-env-item-sca = owned-c<c-array<uv-env-item-s-c>>

pub struct uv-cpu-info-s
pub type uv-cpu-info-s-c
pub alias uv-cpu-info-sp = c-pointer<uv-cpu-info-s-c>
pub alias uv-cpu-info-sc = owned-c<uv-cpu-info-s-c>
pub alias uv-cpu-info-scb<s::S> = borrowed-c<s,uv-cpu-info-s-c>
pub alias uv-cpu-info-sca = owned-c<c-array<uv-cpu-info-s-c>>

pub struct uv-interface-address-s
pub type uv-interface-address-s-c
pub alias uv-interface-address-sp = c-pointer<uv-interface-address-s-c>
pub alias uv-interface-address-sc = owned-c<uv-interface-address-s-c>
pub alias uv-interface-address-scb<s::S> = borrowed-c<s,uv-interface-address-s-c>
pub alias uv-interface-address-sca = owned-c<c-array<uv-interface-address-s-c>>

pub struct uv-dirent-s
pub type uv-dirent-s-c
pub alias uv-dirent-sp = c-pointer<uv-dirent-s-c>
pub alias uv-dirent-sc = owned-c<uv-dirent-s-c>
pub alias uv-dirent-scb<s::S> = borrowed-c<s,uv-dirent-s-c>
pub alias uv-dirent-sca = owned-c<c-array<uv-dirent-s-c>>

pub struct uv-passwd-s
pub type uv-passwd-s-c
pub alias uv-passwd-sp = c-pointer<uv-passwd-s-c>
pub alias uv-passwd-sc = owned-c<uv-passwd-s-c>
pub alias uv-passwd-scb<s::S> = borrowed-c<s,uv-passwd-s-c>
pub alias uv-passwd-sca = owned-c<c-array<uv-passwd-s-c>>

pub struct uv-group-s
pub type uv-group-s-c
pub alias uv-group-sp = c-pointer<uv-group-s-c>
pub alias uv-group-sc = owned-c<uv-group-s-c>
pub alias uv-group-scb<s::S> = borrowed-c<s,uv-group-s-c>
pub alias uv-group-sca = owned-c<c-array<uv-group-s-c>>

pub struct uv-utsname-s
pub type uv-utsname-s-c
pub alias uv-utsname-sp = c-pointer<uv-utsname-s-c>
pub alias uv-utsname-sc = owned-c<uv-utsname-s-c>
pub alias uv-utsname-scb<s::S> = borrowed-c<s,uv-utsname-s-c>
pub alias uv-utsname-sca = owned-c<c-array<uv-utsname-s-c>>

pub struct uv-statfs-s
pub type uv-statfs-s-c
pub alias uv-statfs-sp = c-pointer<uv-statfs-s-c>
pub alias uv-statfs-sc = owned-c<uv-statfs-s-c>
pub alias uv-statfs-scb<s::S> = borrowed-c<s,uv-statfs-s-c>
pub alias uv-statfs-sca = owned-c<c-array<uv-statfs-s-c>>

pub struct uv-metrics-s
pub type uv-metrics-s-c
pub alias uv-metrics-sp = c-pointer<uv-metrics-s-c>
pub alias uv-metrics-sc = owned-c<uv-metrics-s-c>
pub alias uv-metrics-scb<s::S> = borrowed-c<s,uv-metrics-s-c>
pub alias uv-metrics-sca = owned-c<c-array<uv-metrics-s-c>>

pub type uv-loop-option-enum
  UV_LOOP_BLOCK_SIGNAL
  UV_METRICS_IDLE_TIME

pub fun uv-loop-option-enum/int(i: uv-loop-option-enum): int32
  match i
    UV_LOOP_BLOCK_SIGNAL -> 0.int32
    UV_METRICS_IDLE_TIME -> 1.int32

pub fun int/uv-loop-option-enum(i: int32): exn uv-loop-option-enum
  match i.int
    0 -> UV_LOOP_BLOCK_SIGNAL
    1 -> UV_METRICS_IDLE_TIME

pub type uv-run-mode-enum
  UV_RUN_DEFAULT
  UV_RUN_ONCE
  UV_RUN_NOWAIT

pub fun uv-run-mode-enum/int(i: uv-run-mode-enum): int32
  match i
    UV_RUN_DEFAULT -> 0.int32
    UV_RUN_ONCE -> 1.int32
    UV_RUN_NOWAIT -> 2.int32

pub fun int/uv-run-mode-enum(i: int32): exn uv-run-mode-enum
  match i.int
    0 -> UV_RUN_DEFAULT
    1 -> UV_RUN_ONCE
    2 -> UV_RUN_NOWAIT

alias uv-malloc-func = c-pointer<intptr_t>
alias uv-malloc-funcfn = ((size : int) -> c-pointer<()>)
alias uv-realloc-func = c-pointer<intptr_t>
alias uv-realloc-funcfn = ((ptr : c-pointer<()>, size : int) -> c-pointer<()>)
alias uv-calloc-func = c-pointer<intptr_t>
alias uv-calloc-funcfn = ((count : int, size : int) -> c-pointer<()>)
alias uv-free-func = c-pointer<intptr_t>
alias uv-free-funcfn = ((ptr : c-pointer<()>) -> ())
alias uv-loop-t = uv-loop-s-c
pub struct uv-loop-s
pub type uv-loop-s-c
pub alias uv-loop-sp = c-pointer<uv-loop-s-c>
pub alias uv-loop-sc = owned-c<uv-loop-s-c>
pub alias uv-loop-scb<s::S> = borrowed-c<s,uv-loop-s-c>
pub alias uv-loop-sca = owned-c<c-array<uv-loop-s-c>>

alias uv-handle-t = uv-handle-s-c
pub type uv-clock-id-enum
  UV_CLOCK_MONOTONIC
  UV_CLOCK_REALTIME

pub fun uv-clock-id-enum/int(i: uv-clock-id-enum): int32
  match i
    UV_CLOCK_MONOTONIC -> 0.int32
    UV_CLOCK_REALTIME -> 1.int32

pub fun int/uv-clock-id-enum(i: int32): exn uv-clock-id-enum
  match i.int
    0 -> UV_CLOCK_MONOTONIC
    1 -> UV_CLOCK_REALTIME

pub struct uv-timespec-t
pub type uv-timespec-t-c
pub alias uv-timespec-tp = c-pointer<uv-timespec-t-c>
pub alias uv-timespec-tc = owned-c<uv-timespec-t-c>
pub alias uv-timespec-tcb<s::S> = borrowed-c<s,uv-timespec-t-c>
pub alias uv-timespec-tca = owned-c<c-array<uv-timespec-t-c>>

pub struct uv-timespec64-t
pub type uv-timespec64-t-c
pub alias uv-timespec64-tp = c-pointer<uv-timespec64-t-c>
pub alias uv-timespec64-tc = owned-c<uv-timespec64-t-c>
pub alias uv-timespec64-tcb<s::S> = borrowed-c<s,uv-timespec64-t-c>
pub alias uv-timespec64-tca = owned-c<c-array<uv-timespec64-t-c>>

pub struct uv-timeval-t
pub type uv-timeval-t-c
pub alias uv-timeval-tp = c-pointer<uv-timeval-t-c>
pub alias uv-timeval-tc = owned-c<uv-timeval-t-c>
pub alias uv-timeval-tcb<s::S> = borrowed-c<s,uv-timeval-t-c>
pub alias uv-timeval-tca = owned-c<c-array<uv-timeval-t-c>>

pub struct uv-timeval64-t
pub type uv-timeval64-t-c
pub alias uv-timeval64-tp = c-pointer<uv-timeval64-t-c>
pub alias uv-timeval64-tc = owned-c<uv-timeval64-t-c>
pub alias uv-timeval64-tcb<s::S> = borrowed-c<s,uv-timeval64-t-c>
pub alias uv-timeval64-tca = owned-c<c-array<uv-timeval64-t-c>>

pub struct uv-stat-t
pub type uv-stat-t-c
pub alias uv-stat-tp = c-pointer<uv-stat-t-c>
pub alias uv-stat-tc = owned-c<uv-stat-t-c>
pub alias uv-stat-tcb<s::S> = borrowed-c<s,uv-stat-t-c>
pub alias uv-stat-tca = owned-c<c-array<uv-stat-t-c>>

pub type uv-membership-enum
  UV_LEAVE_GROUP
  UV_JOIN_GROUP

pub fun uv-membership-enum/int(i: uv-membership-enum): int32
  match i
    UV_LEAVE_GROUP -> 0.int32
    UV_JOIN_GROUP -> 1.int32

pub fun int/uv-membership-enum(i: int32): exn uv-membership-enum
  match i.int
    0 -> UV_LEAVE_GROUP
    1 -> UV_JOIN_GROUP

alias uv-shutdown-t = uv-shutdown-s-c
alias uv-stream-t = uv-stream-s-c
alias uv-shutdown-cb = c-pointer<intptr_t>
alias uv-shutdown-cbfn = ((req : c-pointer<uv-shutdown-s-c>, status : int) -> ())
alias uv-req-t = uv-req-s-c
alias uv-walk-cb = c-pointer<intptr_t>
alias uv-walk-cbfn = ((handle1 : c-pointer<uv-handle-s-c>, arg : c-pointer<()>) -> ())
alias file = sfile-c
pub struct sfile
pub type sfile-c
pub alias sfilep = c-pointer<sfile-c>
pub alias sfilec = owned-c<sfile-c>
pub alias sfilecb<s::S> = borrowed-c<s,sfile-c>
pub alias sfileca = owned-c<c-array<sfile-c>>

alias uv-close-cb = c-pointer<intptr_t>
alias uv-close-cbfn = ((handle1 : c-pointer<uv-handle-s-c>) -> ())
alias uv-os-fd-t = int
pub struct uv-buf-t
pub type uv-buf-t-c
pub alias uv-buf-tp = c-pointer<uv-buf-t-c>
pub alias uv-buf-tc = owned-c<uv-buf-t-c>
pub alias uv-buf-tcb<s::S> = borrowed-c<s,uv-buf-t-c>
pub alias uv-buf-tca = owned-c<c-array<uv-buf-t-c>>

alias uv-file = int
alias uv-os-sock-t = int
alias uv-connection-cb = c-pointer<intptr_t>
alias uv-connection-cbfn = ((server : c-pointer<uv-stream-s-c>, status : int) -> ())
alias uv-alloc-cb = c-pointer<intptr_t>
alias uv-alloc-cbfn = ((handle1 : c-pointer<uv-handle-s-c>, suggested_size : int, buf : c-pointer<uv-buf-t-c>) -> ())
alias uv-read-cb = c-pointer<intptr_t>
alias uv-read-cbfn = ((stream : c-pointer<uv-stream-s-c>, nread : int, buf : c-pointer<uv-buf-t-c>) -> ())
alias uv-write-t = uv-write-s-c
alias uv-write-cb = c-pointer<intptr_t>
alias uv-write-cbfn = ((req : c-pointer<uv-write-s-c>, status : int) -> ())
alias uv-tcp-t = uv-tcp-s-c
pub type uv-tcp-flags-enum
  UV_TCP_IPV6ONLY

pub fun uv-tcp-flags-enum/int(i: uv-tcp-flags-enum): int32
  match i
    UV_TCP_IPV6ONLY -> 1.int32

pub fun int/uv-tcp-flags-enum(i: int32): exn uv-tcp-flags-enum
  match i.int
    1 -> UV_TCP_IPV6ONLY

pub struct sockaddr
pub type sockaddr-c
pub alias sockaddrp = c-pointer<sockaddr-c>
pub alias sockaddrc = owned-c<sockaddr-c>
pub alias sockaddrcb<s::S> = borrowed-c<s,sockaddr-c>
pub alias sockaddrca = owned-c<c-array<sockaddr-c>>

alias uv-connect-t = uv-connect-s-c
alias uv-connect-cb = c-pointer<intptr_t>
alias uv-connect-cbfn = ((req : c-pointer<uv-connect-s-c>, status : int) -> ())
pub type uv-udp-flags-enum
  UV_UDP_IPV6ONLY
  UV_UDP_PARTIAL
  UV_UDP_REUSEADDR
  UV_UDP_MMSG_CHUNK
  UV_UDP_MMSG_FREE
  UV_UDP_LINUX_RECVERR
  UV_UDP_RECVMMSG

pub fun uv-udp-flags-enum/int(i: uv-udp-flags-enum): int32
  match i
    UV_UDP_IPV6ONLY -> 1.int32
    UV_UDP_PARTIAL -> 2.int32
    UV_UDP_REUSEADDR -> 4.int32
    UV_UDP_MMSG_CHUNK -> 8.int32
    UV_UDP_MMSG_FREE -> 16.int32
    UV_UDP_LINUX_RECVERR -> 32.int32
    UV_UDP_RECVMMSG -> 256.int32

pub fun int/uv-udp-flags-enum(i: int32): exn uv-udp-flags-enum
  match i.int
    1 -> UV_UDP_IPV6ONLY
    2 -> UV_UDP_PARTIAL
    4 -> UV_UDP_REUSEADDR
    8 -> UV_UDP_MMSG_CHUNK
    16 -> UV_UDP_MMSG_FREE
    32 -> UV_UDP_LINUX_RECVERR
    256 -> UV_UDP_RECVMMSG

alias uv-udp-t = uv-udp-s-c
alias uv-udp-send-t = uv-udp-send-s-c
alias uv-udp-send-cb = c-pointer<intptr_t>
alias uv-udp-send-cbfn = ((req : c-pointer<uv-udp-send-s-c>, status : int) -> ())
alias uv-udp-recv-cb = c-pointer<intptr_t>
alias uv-udp-recv-cbfn = ((handle1 : c-pointer<uv-udp-s-c>, nread : int, buf : c-pointer<uv-buf-t-c>, addr : c-pointer<sockaddr-c>, flags : int) -> ())
pub type uv-tty-mode-t-enum
  UV_TTY_MODE_NORMAL
  UV_TTY_MODE_RAW
  UV_TTY_MODE_IO

pub fun uv-tty-mode-t-enum/int(i: uv-tty-mode-t-enum): int32
  match i
    UV_TTY_MODE_NORMAL -> 0.int32
    UV_TTY_MODE_RAW -> 1.int32
    UV_TTY_MODE_IO -> 2.int32

pub fun int/uv-tty-mode-t-enum(i: int32): exn uv-tty-mode-t-enum
  match i.int
    0 -> UV_TTY_MODE_NORMAL
    1 -> UV_TTY_MODE_RAW
    2 -> UV_TTY_MODE_IO

pub type uv-tty-vtermstate-t-enum
  UV_TTY_SUPPORTED
  UV_TTY_UNSUPPORTED

pub fun uv-tty-vtermstate-t-enum/int(i: uv-tty-vtermstate-t-enum): int32
  match i
    UV_TTY_SUPPORTED -> 0.int32
    UV_TTY_UNSUPPORTED -> 1.int32

pub fun int/uv-tty-vtermstate-t-enum(i: int32): exn uv-tty-vtermstate-t-enum
  match i.int
    0 -> UV_TTY_SUPPORTED
    1 -> UV_TTY_UNSUPPORTED

alias uv-tty-t = uv-tty-s-c
alias uv-pipe-t = uv-pipe-s-c
pub type uv-poll-event-enum
  UV_READABLE
  UV_WRITABLE
  UV_DISCONNECT
  UV_PRIORITIZED

pub fun uv-poll-event-enum/int(i: uv-poll-event-enum): int32
  match i
    UV_READABLE -> 1.int32
    UV_WRITABLE -> 2.int32
    UV_DISCONNECT -> 4.int32
    UV_PRIORITIZED -> 8.int32

pub fun int/uv-poll-event-enum(i: int32): exn uv-poll-event-enum
  match i.int
    1 -> UV_READABLE
    2 -> UV_WRITABLE
    4 -> UV_DISCONNECT
    8 -> UV_PRIORITIZED

alias uv-poll-t = uv-poll-s-c
alias uv-poll-cb = c-pointer<intptr_t>
alias uv-poll-cbfn = ((handle1 : c-pointer<uv-poll-s-c>, status : int, events : int) -> ())
alias uv-prepare-t = uv-prepare-s-c
alias uv-prepare-cb = c-pointer<intptr_t>
alias uv-prepare-cbfn = ((handle1 : c-pointer<uv-prepare-s-c>) -> ())
alias uv-check-t = uv-check-s-c
alias uv-check-cb = c-pointer<intptr_t>
alias uv-check-cbfn = ((handle1 : c-pointer<uv-check-s-c>) -> ())
alias uv-idle-t = uv-idle-s-c
alias uv-idle-cb = c-pointer<intptr_t>
alias uv-idle-cbfn = ((handle1 : c-pointer<uv-idle-s-c>) -> ())
alias uv-async-t = uv-async-s-c
alias uv-async-cb = c-pointer<intptr_t>
alias uv-async-cbfn = ((handle1 : c-pointer<uv-async-s-c>) -> ())
alias uv-timer-t = uv-timer-s-c
alias uv-timer-cb = c-pointer<intptr_t>
alias uv-timer-cbfn = ((handle1 : c-pointer<uv-timer-s-c>) -> ())
alias uv-getaddrinfo-t = uv-getaddrinfo-s-c
alias uv-getaddrinfo-cb = c-pointer<intptr_t>
alias uv-getaddrinfo-cbfn = ((req : c-pointer<uv-getaddrinfo-s-c>, status : int, res : c-pointer<addrinfo-c>) -> ())
pub struct addrinfo
pub type addrinfo-c
pub alias addrinfop = c-pointer<addrinfo-c>
pub alias addrinfoc = owned-c<addrinfo-c>
pub alias addrinfocb<s::S> = borrowed-c<s,addrinfo-c>
pub alias addrinfoca = owned-c<c-array<addrinfo-c>>

alias uv-getnameinfo-t = uv-getnameinfo-s-c
alias uv-getnameinfo-cb = c-pointer<intptr_t>
alias uv-getnameinfo-cbfn = ((req : c-pointer<uv-getnameinfo-s-c>, status : int, hostname : c-pointer<int>, service : c-pointer<int>) -> ())
pub type uv-stdio-flags-enum
  UV_IGNORE
  UV_CREATE_PIPE
  UV_INHERIT_FD
  UV_INHERIT_STREAM
  UV_READABLE_PIPE
  UV_WRITABLE_PIPE
  UV_NONBLOCK_PIPE
  UV_OVERLAPPED_PIPE

pub fun uv-stdio-flags-enum/int(i: uv-stdio-flags-enum): int32
  match i
    UV_IGNORE -> 0.int32
    UV_CREATE_PIPE -> 1.int32
    UV_INHERIT_FD -> 2.int32
    UV_INHERIT_STREAM -> 4.int32
    UV_READABLE_PIPE -> 16.int32
    UV_WRITABLE_PIPE -> 32.int32
    UV_NONBLOCK_PIPE -> 64.int32
    UV_OVERLAPPED_PIPE -> 64.int32

pub fun int/uv-stdio-flags-enum(i: int32): exn uv-stdio-flags-enum
  match i.int
    0 -> UV_IGNORE
    1 -> UV_CREATE_PIPE
    2 -> UV_INHERIT_FD
    4 -> UV_INHERIT_STREAM
    16 -> UV_READABLE_PIPE
    32 -> UV_WRITABLE_PIPE
    64 -> UV_NONBLOCK_PIPE
    64 -> UV_OVERLAPPED_PIPE

pub struct uv-stdio-container-s
pub type uv-stdio-container-s-c
pub alias uv-stdio-container-sp = c-pointer<uv-stdio-container-s-c>
pub alias uv-stdio-container-sc = owned-c<uv-stdio-container-s-c>
pub alias uv-stdio-container-scb<s::S> = borrowed-c<s,uv-stdio-container-s-c>
pub alias uv-stdio-container-sca = owned-c<c-array<uv-stdio-container-s-c>>

pub struct uv-process-options-s
pub type uv-process-options-s-c
pub alias uv-process-options-sp = c-pointer<uv-process-options-s-c>
pub alias uv-process-options-sc = owned-c<uv-process-options-s-c>
pub alias uv-process-options-scb<s::S> = borrowed-c<s,uv-process-options-s-c>
pub alias uv-process-options-sca = owned-c<c-array<uv-process-options-s-c>>

pub type uv-process-flags-enum
  UV_PROCESS_SETUID
  UV_PROCESS_SETGID
  UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS
  UV_PROCESS_DETACHED
  UV_PROCESS_WINDOWS_HIDE
  UV_PROCESS_WINDOWS_HIDE_CONSOLE
  UV_PROCESS_WINDOWS_HIDE_GUI
  UV_PROCESS_WINDOWS_FILE_PATH_EXACT_NAME

pub fun uv-process-flags-enum/int(i: uv-process-flags-enum): int32
  match i
    UV_PROCESS_SETUID -> 1.int32
    UV_PROCESS_SETGID -> 2.int32
    UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS -> 4.int32
    UV_PROCESS_DETACHED -> 8.int32
    UV_PROCESS_WINDOWS_HIDE -> 16.int32
    UV_PROCESS_WINDOWS_HIDE_CONSOLE -> 32.int32
    UV_PROCESS_WINDOWS_HIDE_GUI -> 64.int32
    UV_PROCESS_WINDOWS_FILE_PATH_EXACT_NAME -> 128.int32

pub fun int/uv-process-flags-enum(i: int32): exn uv-process-flags-enum
  match i.int
    1 -> UV_PROCESS_SETUID
    2 -> UV_PROCESS_SETGID
    4 -> UV_PROCESS_WINDOWS_VERBATIM_ARGUMENTS
    8 -> UV_PROCESS_DETACHED
    16 -> UV_PROCESS_WINDOWS_HIDE
    32 -> UV_PROCESS_WINDOWS_HIDE_CONSOLE
    64 -> UV_PROCESS_WINDOWS_HIDE_GUI
    128 -> UV_PROCESS_WINDOWS_FILE_PATH_EXACT_NAME

alias uv-process-t = uv-process-s-c
alias uv-process-options-t = uv-process-options-s-c
alias uv-pid-t = int
alias pid-t = int
alias darwin-pid-t = int
alias int32-t = int
alias uv-work-t = uv-work-s-c
alias uv-work-cb = c-pointer<intptr_t>
alias uv-work-cbfn = ((req : c-pointer<uv-work-s-c>) -> ())
alias uv-after-work-cb = c-pointer<intptr_t>
alias uv-after-work-cbfn = ((req : c-pointer<uv-work-s-c>, status : int) -> ())
pub struct uv-cpu-times-s
pub type uv-cpu-times-s-c
pub alias uv-cpu-times-sp = c-pointer<uv-cpu-times-s-c>
pub alias uv-cpu-times-sc = owned-c<uv-cpu-times-s-c>
pub alias uv-cpu-times-scb<s::S> = borrowed-c<s,uv-cpu-times-s-c>
pub alias uv-cpu-times-sca = owned-c<c-array<uv-cpu-times-s-c>>

pub type uv-dirent-type-t-enum
  UV_DIRENT_UNKNOWN
  UV_DIRENT_FILE
  UV_DIRENT_DIR
  UV_DIRENT_LINK
  UV_DIRENT_FIFO
  UV_DIRENT_SOCKET
  UV_DIRENT_CHAR
  UV_DIRENT_BLOCK

pub fun uv-dirent-type-t-enum/int(i: uv-dirent-type-t-enum): int32
  match i
    UV_DIRENT_UNKNOWN -> 0.int32
    UV_DIRENT_FILE -> 1.int32
    UV_DIRENT_DIR -> 2.int32
    UV_DIRENT_LINK -> 3.int32
    UV_DIRENT_FIFO -> 4.int32
    UV_DIRENT_SOCKET -> 5.int32
    UV_DIRENT_CHAR -> 6.int32
    UV_DIRENT_BLOCK -> 7.int32

pub fun int/uv-dirent-type-t-enum(i: int32): exn uv-dirent-type-t-enum
  match i.int
    0 -> UV_DIRENT_UNKNOWN
    1 -> UV_DIRENT_FILE
    2 -> UV_DIRENT_DIR
    3 -> UV_DIRENT_LINK
    4 -> UV_DIRENT_FIFO
    5 -> UV_DIRENT_SOCKET
    6 -> UV_DIRENT_CHAR
    7 -> UV_DIRENT_BLOCK

pub struct uv-rusage-t
pub type uv-rusage-t-c
pub alias uv-rusage-tp = c-pointer<uv-rusage-t-c>
pub alias uv-rusage-tc = owned-c<uv-rusage-t-c>
pub alias uv-rusage-tcb<s::S> = borrowed-c<s,uv-rusage-t-c>
pub alias uv-rusage-tca = owned-c<c-array<uv-rusage-t-c>>

alias uv-passwd-t = uv-passwd-s-c
alias uv-uid-t = int
alias darwin-uid-t = int
alias uint32-t = int
alias uv-group-t = uv-group-s-c
alias uv-cpu-info-t = uv-cpu-info-s-c
alias uv-interface-address-t = uv-interface-address-s-c
alias uv-env-item-t = uv-env-item-s-c
alias uv-utsname-t = uv-utsname-s-c
alias uv-metrics-t = uv-metrics-s-c
pub type uv-fs-type-enum
  UV_FS_UNKNOWN
  UV_FS_CUSTOM
  UV_FS_OPEN
  UV_FS_CLOSE
  UV_FS_READ
  UV_FS_WRITE
  UV_FS_SENDFILE
  UV_FS_STAT
  UV_FS_LSTAT
  UV_FS_FSTAT
  UV_FS_FTRUNCATE
  UV_FS_UTIME
  UV_FS_FUTIME
  UV_FS_ACCESS
  UV_FS_CHMOD
  UV_FS_FCHMOD
  UV_FS_FSYNC
  UV_FS_FDATASYNC
  UV_FS_UNLINK
  UV_FS_RMDIR
  UV_FS_MKDIR
  UV_FS_MKDTEMP
  UV_FS_RENAME
  UV_FS_SCANDIR
  UV_FS_LINK
  UV_FS_SYMLINK
  UV_FS_READLINK
  UV_FS_CHOWN
  UV_FS_FCHOWN
  UV_FS_REALPATH
  UV_FS_COPYFILE
  UV_FS_LCHOWN
  UV_FS_OPENDIR
  UV_FS_READDIR
  UV_FS_CLOSEDIR
  UV_FS_STATFS
  UV_FS_MKSTEMP
  UV_FS_LUTIME

pub fun uv-fs-type-enum/int(i: uv-fs-type-enum): int32
  match i
    UV_FS_UNKNOWN -> -1.int32
    UV_FS_CUSTOM -> 0.int32
    UV_FS_OPEN -> 1.int32
    UV_FS_CLOSE -> 2.int32
    UV_FS_READ -> 3.int32
    UV_FS_WRITE -> 4.int32
    UV_FS_SENDFILE -> 5.int32
    UV_FS_STAT -> 6.int32
    UV_FS_LSTAT -> 7.int32
    UV_FS_FSTAT -> 8.int32
    UV_FS_FTRUNCATE -> 9.int32
    UV_FS_UTIME -> 10.int32
    UV_FS_FUTIME -> 11.int32
    UV_FS_ACCESS -> 12.int32
    UV_FS_CHMOD -> 13.int32
    UV_FS_FCHMOD -> 14.int32
    UV_FS_FSYNC -> 15.int32
    UV_FS_FDATASYNC -> 16.int32
    UV_FS_UNLINK -> 17.int32
    UV_FS_RMDIR -> 18.int32
    UV_FS_MKDIR -> 19.int32
    UV_FS_MKDTEMP -> 20.int32
    UV_FS_RENAME -> 21.int32
    UV_FS_SCANDIR -> 22.int32
    UV_FS_LINK -> 23.int32
    UV_FS_SYMLINK -> 24.int32
    UV_FS_READLINK -> 25.int32
    UV_FS_CHOWN -> 26.int32
    UV_FS_FCHOWN -> 27.int32
    UV_FS_REALPATH -> 28.int32
    UV_FS_COPYFILE -> 29.int32
    UV_FS_LCHOWN -> 30.int32
    UV_FS_OPENDIR -> 31.int32
    UV_FS_READDIR -> 32.int32
    UV_FS_CLOSEDIR -> 33.int32
    UV_FS_STATFS -> 34.int32
    UV_FS_MKSTEMP -> 35.int32
    UV_FS_LUTIME -> 36.int32

pub fun int/uv-fs-type-enum(i: int32): exn uv-fs-type-enum
  match i.int
    -1 -> UV_FS_UNKNOWN
    0 -> UV_FS_CUSTOM
    1 -> UV_FS_OPEN
    2 -> UV_FS_CLOSE
    3 -> UV_FS_READ
    4 -> UV_FS_WRITE
    5 -> UV_FS_SENDFILE
    6 -> UV_FS_STAT
    7 -> UV_FS_LSTAT
    8 -> UV_FS_FSTAT
    9 -> UV_FS_FTRUNCATE
    10 -> UV_FS_UTIME
    11 -> UV_FS_FUTIME
    12 -> UV_FS_ACCESS
    13 -> UV_FS_CHMOD
    14 -> UV_FS_FCHMOD
    15 -> UV_FS_FSYNC
    16 -> UV_FS_FDATASYNC
    17 -> UV_FS_UNLINK
    18 -> UV_FS_RMDIR
    19 -> UV_FS_MKDIR
    20 -> UV_FS_MKDTEMP
    21 -> UV_FS_RENAME
    22 -> UV_FS_SCANDIR
    23 -> UV_FS_LINK
    24 -> UV_FS_SYMLINK
    25 -> UV_FS_READLINK
    26 -> UV_FS_CHOWN
    27 -> UV_FS_FCHOWN
    28 -> UV_FS_REALPATH
    29 -> UV_FS_COPYFILE
    30 -> UV_FS_LCHOWN
    31 -> UV_FS_OPENDIR
    32 -> UV_FS_READDIR
    33 -> UV_FS_CLOSEDIR
    34 -> UV_FS_STATFS
    35 -> UV_FS_MKSTEMP
    36 -> UV_FS_LUTIME

alias uv-fs-t = uv-fs-s-c
alias uv-fs-cb = c-pointer<intptr_t>
alias uv-fs-cbfn = ((req : c-pointer<uv-fs-s-c>) -> ())
alias uv-dirent-t = uv-dirent-s-c
alias uv-dir-t = uv-dir-s-c
alias uv-gid-t = int
alias darwin-gid-t = int
pub type uv-fs-event-enum
  UV_RENAME
  UV_CHANGE

pub fun uv-fs-event-enum/int(i: uv-fs-event-enum): int32
  match i
    UV_RENAME -> 1.int32
    UV_CHANGE -> 2.int32

pub fun int/uv-fs-event-enum(i: int32): exn uv-fs-event-enum
  match i.int
    1 -> UV_RENAME
    2 -> UV_CHANGE

alias uv-fs-poll-t = uv-fs-poll-s-c
alias uv-fs-poll-cb = c-pointer<intptr_t>
alias uv-fs-poll-cbfn = ((handle1 : c-pointer<uv-fs-poll-s-c>, status : int, prev : c-pointer<uv-stat-t-c>, curr : c-pointer<uv-stat-t-c>) -> ())
alias uv-signal-t = uv-signal-s-c
alias uv-signal-cb = c-pointer<intptr_t>
alias uv-signal-cbfn = ((handle1 : c-pointer<uv-signal-s-c>, signum : int) -> ())
pub type uv-fs-event-flags-enum
  UV_FS_EVENT_WATCH_ENTRY
  UV_FS_EVENT_STAT
  UV_FS_EVENT_RECURSIVE

pub fun uv-fs-event-flags-enum/int(i: uv-fs-event-flags-enum): int32
  match i
    UV_FS_EVENT_WATCH_ENTRY -> 1.int32
    UV_FS_EVENT_STAT -> 2.int32
    UV_FS_EVENT_RECURSIVE -> 4.int32

pub fun int/uv-fs-event-flags-enum(i: int32): exn uv-fs-event-flags-enum
  match i.int
    1 -> UV_FS_EVENT_WATCH_ENTRY
    2 -> UV_FS_EVENT_STAT
    4 -> UV_FS_EVENT_RECURSIVE

alias uv-fs-event-t = uv-fs-event-s-c
alias uv-fs-event-cb = c-pointer<intptr_t>
alias uv-fs-event-cbfn = ((handle1 : c-pointer<uv-fs-event-s-c>, filename : c-pointer<int>, events : int, status : int) -> ())
pub struct sockaddr-in
pub type sockaddr-in-c
pub alias sockaddr-inp = c-pointer<sockaddr-in-c>
pub alias sockaddr-inc = owned-c<sockaddr-in-c>
pub alias sockaddr-incb<s::S> = borrowed-c<s,sockaddr-in-c>
pub alias sockaddr-inca = owned-c<c-array<sockaddr-in-c>>

pub struct sockaddr-in6
pub type sockaddr-in6-c
pub alias sockaddr-in6p = c-pointer<sockaddr-in6-c>
pub alias sockaddr-in6c = owned-c<sockaddr-in6-c>
pub alias sockaddr-in6cb<s::S> = borrowed-c<s,sockaddr-in6-c>
pub alias sockaddr-in6ca = owned-c<c-array<sockaddr-in6-c>>

alias uv-random-t = uv-random-s-c
alias uv-random-cb = c-pointer<intptr_t>
alias uv-random-cbfn = ((req : c-pointer<uv-random-s-c>, status : int, buf : c-pointer<()>, buflen : int) -> ())
pub struct uv-lib-t
pub type uv-lib-t-c
pub alias uv-lib-tp = c-pointer<uv-lib-t-c>
pub alias uv-lib-tc = owned-c<uv-lib-t-c>
pub alias uv-lib-tcb<s::S> = borrowed-c<s,uv-lib-t-c>
pub alias uv-lib-tca = owned-c<c-array<uv-lib-t-c>>

alias uv-mutex-t = opaque-pthread-mutex-t-c
alias pthread-mutex-t = opaque-pthread-mutex-t-c
alias darwin-pthread-mutex-t = opaque-pthread-mutex-t-c
pub struct opaque-pthread-mutex-t
pub type opaque-pthread-mutex-t-c
pub alias opaque-pthread-mutex-tp = c-pointer<opaque-pthread-mutex-t-c>
pub alias opaque-pthread-mutex-tc = owned-c<opaque-pthread-mutex-t-c>
pub alias opaque-pthread-mutex-tcb<s::S> = borrowed-c<s,opaque-pthread-mutex-t-c>
pub alias opaque-pthread-mutex-tca = owned-c<c-array<opaque-pthread-mutex-t-c>>

alias uv-rwlock-t = opaque-pthread-rwlock-t-c
alias pthread-rwlock-t = opaque-pthread-rwlock-t-c
alias darwin-pthread-rwlock-t = opaque-pthread-rwlock-t-c
pub struct opaque-pthread-rwlock-t
pub type opaque-pthread-rwlock-t-c
pub alias opaque-pthread-rwlock-tp = c-pointer<opaque-pthread-rwlock-t-c>
pub alias opaque-pthread-rwlock-tc = owned-c<opaque-pthread-rwlock-t-c>
pub alias opaque-pthread-rwlock-tcb<s::S> = borrowed-c<s,opaque-pthread-rwlock-t-c>
pub alias opaque-pthread-rwlock-tca = owned-c<c-array<opaque-pthread-rwlock-t-c>>

alias uv-sem-t = int
alias semaphore-t = int
alias mach-port-t = int
alias darwin-mach-port-t = int
alias darwin-mach-port-name-t = int
alias darwin-natural-t = int
alias uv-cond-t = opaque-pthread-cond-t-c
alias pthread-cond-t = opaque-pthread-cond-t-c
alias darwin-pthread-cond-t = opaque-pthread-cond-t-c
pub struct opaque-pthread-cond-t
pub type opaque-pthread-cond-t-c
pub alias opaque-pthread-cond-tp = c-pointer<opaque-pthread-cond-t-c>
pub alias opaque-pthread-cond-tc = owned-c<opaque-pthread-cond-t-c>
pub alias opaque-pthread-cond-tcb<s::S> = borrowed-c<s,opaque-pthread-cond-t-c>
pub alias opaque-pthread-cond-tca = owned-c<c-array<opaque-pthread-cond-t-c>>

pub struct uv-barrier-t
pub type uv-barrier-t-c
pub alias uv-barrier-tp = c-pointer<uv-barrier-t-c>
pub alias uv-barrier-tc = owned-c<uv-barrier-t-c>
pub alias uv-barrier-tcb<s::S> = borrowed-c<s,uv-barrier-t-c>
pub alias uv-barrier-tca = owned-c<c-array<uv-barrier-t-c>>

alias uv-once-t = opaque-pthread-once-t-c
alias pthread-once-t = opaque-pthread-once-t-c
alias darwin-pthread-once-t = opaque-pthread-once-t-c
pub struct opaque-pthread-once-t
pub type opaque-pthread-once-t-c
pub alias opaque-pthread-once-tp = c-pointer<opaque-pthread-once-t-c>
pub alias opaque-pthread-once-tc = owned-c<opaque-pthread-once-t-c>
pub alias opaque-pthread-once-tcb<s::S> = borrowed-c<s,opaque-pthread-once-t-c>
pub alias opaque-pthread-once-tca = owned-c<c-array<opaque-pthread-once-t-c>>

alias uv-key-t = int
alias pthread-key-t = int
alias darwin-pthread-key-t = int
alias uv-thread-t = pthread-t
alias pthread-t = darwin-pthread-t
alias darwin-pthread-t = c-pointer<opaque-pthread-t-c>
pub struct opaque-pthread-t
pub type opaque-pthread-t-c
pub alias opaque-pthread-tp = c-pointer<opaque-pthread-t-c>
pub alias opaque-pthread-tc = owned-c<opaque-pthread-t-c>
pub alias opaque-pthread-tcb<s::S> = borrowed-c<s,opaque-pthread-t-c>
pub alias opaque-pthread-tca = owned-c<c-array<opaque-pthread-t-c>>

alias uv-thread-cb = c-pointer<intptr_t>
alias uv-thread-cbfn = ((arg : c-pointer<()>) -> ())
pub type uv-thread-create-flags-enum
  UV_THREAD_NO_FLAGS
  UV_THREAD_HAS_STACK_SIZE

pub fun uv-thread-create-flags-enum/int(i: uv-thread-create-flags-enum): int32
  match i
    UV_THREAD_NO_FLAGS -> 0.int32
    UV_THREAD_HAS_STACK_SIZE -> 1.int32

pub fun int/uv-thread-create-flags-enum(i: int32): exn uv-thread-create-flags-enum
  match i.int
    0 -> UV_THREAD_NO_FLAGS
    1 -> UV_THREAD_HAS_STACK_SIZE

pub struct uv-thread-options-s
pub type uv-thread-options-s-c
pub alias uv-thread-options-sp = c-pointer<uv-thread-options-s-c>
pub alias uv-thread-options-sc = owned-c<uv-thread-options-s-c>
pub alias uv-thread-options-scb<s::S> = borrowed-c<s,uv-thread-options-s-c>
pub alias uv-thread-options-sca = owned-c<c-array<uv-thread-options-s-c>>

alias uv-thread-options-t = uv-thread-options-s-c
pub struct uv-any-handle
pub type uv-any-handle-c
pub alias uv-any-handlep = c-pointer<uv-any-handle-c>
pub alias uv-any-handlec = owned-c<uv-any-handle-c>
pub alias uv-any-handlecb<s::S> = borrowed-c<s,uv-any-handle-c>
pub alias uv-any-handleca = owned-c<c-array<uv-any-handle-c>>

pub struct uv-any-req
pub type uv-any-req-c
pub alias uv-any-reqp = c-pointer<uv-any-req-c>
pub alias uv-any-reqc = owned-c<uv-any-req-c>
pub alias uv-any-reqcb<s::S> = borrowed-c<s,uv-any-req-c>
pub alias uv-any-reqca = owned-c<c-array<uv-any-req-c>>

pub val kuv-pipe-no-truncate: int = 1

pub val kuv-thread-priority-highest: int = 2

pub val kuv-thread-priority-above-normal: int = 1

pub val kuv-thread-priority-normal: int = 0

pub val kuv-thread-priority-below-normal: int = -1

pub val kuv-thread-priority-lowest: int = -2

